{"remainingRequest":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\src\\views\\collection\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\src\\views\\collection\\index.vue","mtime":1614766183558},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\nimport 'echarts/extension/bmap/bmap'; // import $ from 'jquery'\n\nexport default {\n  mounted: function mounted() {\n    var echarts = require('echarts');\n\n    var myChart = echarts.init(document.getElementById('main'));\n    var option;\n    var data = [{\n      name: '海门',\n      value: 90\n    }, {\n      name: '鄂尔多斯',\n      value: 120\n    }, {\n      name: '招远',\n      value: 120\n    }, {\n      name: '舟山',\n      value: 112\n    }];\n    var geoCoordMap = {\n      '海门': [121.15, 31.89],\n      '鄂尔多斯': [109.781327, 39.608266],\n      '招远': [120.38, 37.35],\n      '舟山': [122.207216, 29.985295]\n    };\n\n    var convertData = function convertData(data) {\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var geoCoord = geoCoordMap[data[i].name];\n\n        if (geoCoord) {\n          res.push({\n            name: data[i].name,\n            value: geoCoord.concat(data[i].value)\n          });\n        }\n      }\n\n      return res;\n    };\n\n    option = {\n      title: {\n        text: '全国主要城市空气质量 - 百度地图',\n        subtext: 'data from PM25.in',\n        sublink: 'http://www.pm25.in',\n        left: 'center'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      bmap: {\n        center: [104.114129, 37.550339],\n        zoom: 5,\n        roam: true,\n        mapStyle: {\n          styleJson: [{\n            'featureType': 'water',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#d1d1d1'\n            }\n          }, {\n            'featureType': 'land',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#f3f3f3'\n            }\n          }, {\n            'featureType': 'railway',\n            'elementType': 'all',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'highway',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#fdfdfd'\n            }\n          }, {\n            'featureType': 'highway',\n            'elementType': 'labels',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'arterial',\n            'elementType': 'geometry',\n            'stylers': {\n              'color': '#fefefe'\n            }\n          }, {\n            'featureType': 'arterial',\n            'elementType': 'geometry.fill',\n            'stylers': {\n              'color': '#fefefe'\n            }\n          }, {\n            'featureType': 'poi',\n            'elementType': 'all',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'green',\n            'elementType': 'all',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'subway',\n            'elementType': 'all',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'manmade',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#d1d1d1'\n            }\n          }, {\n            'featureType': 'local',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#d1d1d1'\n            }\n          }, {\n            'featureType': 'arterial',\n            'elementType': 'labels',\n            'stylers': {\n              'visibility': 'off'\n            }\n          }, {\n            'featureType': 'boundary',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#fefefe'\n            }\n          }, {\n            'featureType': 'building',\n            'elementType': 'all',\n            'stylers': {\n              'color': '#d1d1d1'\n            }\n          }, {\n            'featureType': 'label',\n            'elementType': 'labels.text.fill',\n            'stylers': {\n              'color': '#999999'\n            }\n          }]\n        }\n      },\n      series: [{\n        name: 'pm2.5',\n        type: 'scatter',\n        coordinateSystem: 'bmap',\n        data: convertData(data),\n        symbolSize: function symbolSize(val) {\n          return val[2] / 10;\n        },\n        encode: {\n          value: 2\n        },\n        label: {\n          formatter: '{b}',\n          position: 'right',\n          show: false\n        },\n        emphasis: {\n          label: {\n            show: true\n          }\n        }\n      }, {\n        name: 'Top 5',\n        type: 'effectScatter',\n        coordinateSystem: 'bmap',\n        data: convertData(data.sort(function (a, b) {\n          return b.value - a.value;\n        }).slice(0, 6)),\n        symbolSize: function symbolSize(val) {\n          return val[2] / 10;\n        },\n        encode: {\n          value: 2\n        },\n        showEffectOn: 'render',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          formatter: '{b}',\n          position: 'right',\n          show: true\n        },\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: '#333'\n        },\n        zlevel: 1\n      }]\n    };\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;AAOA,OAAA,6BAAA,C,CACA;;AACA,eAAA;AACA,SADA,qBACA;AACA,QAAA,UAAA,QAAA,SAAA,CAAA;;AACA,QAAA,UAAA,QAAA,IAAA,CAAA,SAAA,cAAA,CAAA,MAAA,CAAA,CAAA;AACA,QAAA,MAAA;AACA,QAAA,OAAA,CACA;AAAA,YAAA,IAAA;AAAA,aAAA;AAAA,KADA,EAEA;AAAA,YAAA,MAAA;AAAA,aAAA;AAAA,KAFA,EAGA;AAAA,YAAA,IAAA;AAAA,aAAA;AAAA,KAHA,EAIA;AAAA,YAAA,IAAA;AAAA,aAAA;AAAA,KAJA,CAAA;AAMA,QAAA,cAAA;AACA,YAAA,CAAA,MAAA,EAAA,KAAA,CADA;AAEA,cAAA,CAAA,UAAA,EAAA,SAAA,CAFA;AAGA,YAAA,CAAA,MAAA,EAAA,KAAA,CAHA;AAIA,YAAA,CAAA,UAAA,EAAA,SAAA;AAJA,KAAA;;AAOA,QAAA,cAAA,SAAA,WAAA,CAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA;;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,KAAA,MAAA,EAAA,GAAA,EAAA;AACA,YAAA,WAAA,YAAA,KAAA,CAAA,EAAA,IAAA,CAAA;;AACA,YAAA,QAAA,EAAA;AACA,cAAA,IAAA,CAAA;AACA,kBAAA,KAAA,CAAA,EAAA,IADA;AAEA,mBAAA,SAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA;AAFA,WAAA;AAIA;AACA;;AACA,aAAA,GAAA;AACA,KAZA;;AAcA,aAAA;AACA,aAAA;AACA,cAAA,mBADA;AAEA,iBAAA,mBAFA;AAGA,iBAAA,oBAHA;AAIA,cAAA;AAJA,OADA;AAOA,eAAA;AACA,iBAAA;AADA,OAPA;AAUA,YAAA;AACA,gBAAA,CAAA,UAAA,EAAA,SAAA,CADA;AAEA,cAAA,CAFA;AAGA,cAAA,IAHA;AAIA,kBAAA;AACA,qBAAA,CAAA;AACA,2BAAA,OADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WAAA,EAMA;AACA,2BAAA,MADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WANA,EAYA;AACA,2BAAA,SADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WAZA,EAkBA;AACA,2BAAA,SADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WAlBA,EAwBA;AACA,2BAAA,SADA;AAEA,2BAAA,QAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WAxBA,EA8BA;AACA,2BAAA,UADA;AAEA,2BAAA,UAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WA9BA,EAoCA;AACA,2BAAA,UADA;AAEA,2BAAA,eAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WApCA,EA0CA;AACA,2BAAA,KADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WA1CA,EAgDA;AACA,2BAAA,OADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WAhDA,EAsDA;AACA,2BAAA,QADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WAtDA,EA4DA;AACA,2BAAA,SADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WA5DA,EAkEA;AACA,2BAAA,OADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WAlEA,EAwEA;AACA,2BAAA,UADA;AAEA,2BAAA,QAFA;AAGA,uBAAA;AACA,4BAAA;AADA;AAHA,WAxEA,EA8EA;AACA,2BAAA,UADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WA9EA,EAoFA;AACA,2BAAA,UADA;AAEA,2BAAA,KAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WApFA,EA0FA;AACA,2BAAA,OADA;AAEA,2BAAA,kBAFA;AAGA,uBAAA;AACA,uBAAA;AADA;AAHA,WA1FA;AADA;AAJA,OAVA;AAkHA,cAAA,CACA;AACA,cAAA,OADA;AAEA,cAAA,SAFA;AAGA,0BAAA,MAHA;AAIA,cAAA,YAAA,IAAA,CAJA;AAKA,oBAAA,oBAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA;AACA,SAPA;AAQA,gBAAA;AACA,iBAAA;AADA,SARA;AAWA,eAAA;AACA,qBAAA,KADA;AAEA,oBAAA,OAFA;AAGA,gBAAA;AAHA,SAXA;AAgBA,kBAAA;AACA,iBAAA;AACA,kBAAA;AADA;AADA;AAhBA,OADA,EAuBA;AACA,cAAA,OADA;AAEA,cAAA,eAFA;AAGA,0BAAA,MAHA;AAIA,cAAA,YAAA,KAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,iBAAA,EAAA,KAAA,GAAA,EAAA,KAAA;AACA,SAFA,EAEA,KAFA,CAEA,CAFA,EAEA,CAFA,CAAA,CAJA;AAOA,oBAAA,oBAAA,GAAA,EAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA;AACA,SATA;AAUA,gBAAA;AACA,iBAAA;AADA,SAVA;AAaA,sBAAA,QAbA;AAcA,sBAAA;AACA,qBAAA;AADA,SAdA;AAiBA,wBAAA,IAjBA;AAkBA,eAAA;AACA,qBAAA,KADA;AAEA,oBAAA,OAFA;AAGA,gBAAA;AAHA,SAlBA;AAuBA,mBAAA;AACA,sBAAA,EADA;AAEA,uBAAA;AAFA,SAvBA;AA2BA,gBAAA;AA3BA,OAvBA;AAlHA,KAAA;AAwKA;AAxMA,CAAA","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<div id=\"main\" style=\"width: 100%;height: 698px;\"></div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport 'echarts/extension/bmap/bmap'\r\n\t// import $ from 'jquery'\r\n\texport default {\r\n\t\tmounted() {\r\n\t\t\tvar echarts = require('echarts');\r\n\t\t\tvar myChart = echarts.init(document.getElementById('main'));\r\n\t\t\tvar option;\r\n\t\t\tvar data = [\r\n\t\t\t     {name: '海门', value: 90},\r\n\t\t\t     {name: '鄂尔多斯', value: 120},\r\n\t\t\t     {name: '招远', value: 120},\r\n\t\t\t     {name: '舟山', value: 112}\r\n\t\t\t];\r\n\t\t\tvar geoCoordMap = {\r\n\t\t\t    '海门':[121.15,31.89],\r\n\t\t\t    '鄂尔多斯':[109.781327,39.608266],\r\n\t\t\t    '招远':[120.38,37.35],\r\n\t\t\t    '舟山':[122.207216,29.985295]\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar convertData = function (data) {\r\n\t\t\t    var res = [];\r\n\t\t\t    for (var i = 0; i < data.length; i++) {\r\n\t\t\t        var geoCoord = geoCoordMap[data[i].name];\r\n\t\t\t        if (geoCoord) {\r\n\t\t\t            res.push({\r\n\t\t\t                name: data[i].name,\r\n\t\t\t                value: geoCoord.concat(data[i].value)\r\n\t\t\t            });\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t    return res;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\toption = {\r\n\t\t\t    title: {\r\n\t\t\t        text: '全国主要城市空气质量 - 百度地图',\r\n\t\t\t        subtext: 'data from PM25.in',\r\n\t\t\t        sublink: 'http://www.pm25.in',\r\n\t\t\t        left: 'center'\r\n\t\t\t    },\r\n\t\t\t    tooltip : {\r\n\t\t\t        trigger: 'item'\r\n\t\t\t    },\r\n\t\t\t    bmap: {\r\n\t\t\t        center: [104.114129, 37.550339],\r\n\t\t\t        zoom: 5,\r\n\t\t\t        roam: true,\r\n\t\t\t        mapStyle: {\r\n\t\t\t            styleJson: [{\r\n\t\t\t                'featureType': 'water',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#d1d1d1'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'land',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#f3f3f3'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'railway',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'highway',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#fdfdfd'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'highway',\r\n\t\t\t                'elementType': 'labels',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'arterial',\r\n\t\t\t                'elementType': 'geometry',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#fefefe'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'arterial',\r\n\t\t\t                'elementType': 'geometry.fill',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#fefefe'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'poi',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'green',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'subway',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'manmade',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#d1d1d1'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'local',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#d1d1d1'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'arterial',\r\n\t\t\t                'elementType': 'labels',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'visibility': 'off'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'boundary',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#fefefe'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'building',\r\n\t\t\t                'elementType': 'all',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#d1d1d1'\r\n\t\t\t                }\r\n\t\t\t            }, {\r\n\t\t\t                'featureType': 'label',\r\n\t\t\t                'elementType': 'labels.text.fill',\r\n\t\t\t                'stylers': {\r\n\t\t\t                    'color': '#999999'\r\n\t\t\t                }\r\n\t\t\t            }]\r\n\t\t\t        }\r\n\t\t\t    },\r\n\t\t\t    series : [\r\n\t\t\t        {\r\n\t\t\t            name: 'pm2.5',\r\n\t\t\t            type: 'scatter',\r\n\t\t\t            coordinateSystem: 'bmap',\r\n\t\t\t            data: convertData(data),\r\n\t\t\t            symbolSize: function (val) {\r\n\t\t\t                return val[2] / 10;\r\n\t\t\t            },\r\n\t\t\t            encode: {\r\n\t\t\t                value: 2\r\n\t\t\t            },\r\n\t\t\t            label: {\r\n\t\t\t                formatter: '{b}',\r\n\t\t\t                position: 'right',\r\n\t\t\t                show: false\r\n\t\t\t            },\r\n\t\t\t            emphasis: {\r\n\t\t\t                label: {\r\n\t\t\t                    show: true\r\n\t\t\t                }\r\n\t\t\t            }\r\n\t\t\t        },\r\n\t\t\t        {\r\n\t\t\t            name: 'Top 5',\r\n\t\t\t            type: 'effectScatter',\r\n\t\t\t            coordinateSystem: 'bmap',\r\n\t\t\t            data: convertData(data.sort(function (a, b) {\r\n\t\t\t                return b.value - a.value;\r\n\t\t\t            }).slice(0, 6)),\r\n\t\t\t            symbolSize: function (val) {\r\n\t\t\t                return val[2] / 10;\r\n\t\t\t            },\r\n\t\t\t            encode: {\r\n\t\t\t                value: 2\r\n\t\t\t            },\r\n\t\t\t            showEffectOn: 'render',\r\n\t\t\t            rippleEffect: {\r\n\t\t\t                brushType: 'stroke'\r\n\t\t\t            },\r\n\t\t\t            hoverAnimation: true,\r\n\t\t\t            label: {\r\n\t\t\t                formatter: '{b}',\r\n\t\t\t                position: 'right',\r\n\t\t\t                show: true\r\n\t\t\t            },\r\n\t\t\t            itemStyle: {\r\n\t\t\t                shadowBlur: 10,\r\n\t\t\t                shadowColor: '#333'\r\n\t\t\t            },\r\n\t\t\t            zlevel: 1\r\n\t\t\t        }\r\n\t\t\t    ]\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\r\n</style>\n"],"sourceRoot":"src\\views\\collection"}]}