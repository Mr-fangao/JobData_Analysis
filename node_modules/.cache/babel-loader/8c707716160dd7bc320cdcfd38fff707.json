{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\views\\account\\components\\account.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\views\\account\\components\\account.vue","mtime":1588492242573},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { exportchart } from \"../js/exportchart\";\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport echarts from \"echarts\";\nexport default {\n  name: '',\n  data: function data() {\n    return {};\n  },\n  methods: {\n    initCharts: function initCharts(charts, option) {\n      var myChart = echarts.init(charts);\n      myChart.setOption(option);\n    }\n  },\n  mounted: function mounted() {\n    // 左上\n    var createSvg = function createSvg(shadowColor, shadowBlur) {\n      return \"\\n\\t\\t    <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" \\n\\t\\t        x=\\\"0px\\\" y=\\\"0px\\\" \\n\\t\\t        viewBox=\\\"0 0 32 128\\\"\\n\\t\\t        xml:space=\\\"preserve\\\"\\n\\t\\t    >\\n\\t\\t        <style>\\n\\t\\t            .st2 {\\n\\t\\t                fill: transparent;\\n\\t\\t                stroke: \".concat(shadowColor, \";\\n\\t\\t                stroke-width: \").concat(shadowBlur, \"px;\\n\\t\\t                filter: url(#chart-inset-shadow);\\n\\t\\t            }\\n\\t\\t        </style>\\n\\t\\t        <defs>\\n\\t\\t            <filter id=\\\"chart-inset-shadow\\\" width=\\\"200%\\\" height=\\\"200%\\\" x=\\\"-50%\\\" y=\\\"-50%\\\">\\n\\t\\t        \\t\\t<feGaussianBlur in=\\\"SourceGraphic\\\" result=\\\"gass\\\" stdDeviation=\\\"\").concat(shadowBlur * 0.75, \"\\\" />\\n\\t\\t        \\t\\t<feMerge>\\n\\t\\t        \\t\\t\\t<feMergeNode in=\\\"gass\\\" />\\n\\t\\t        \\t\\t</feMerge>\\n\\t\\t        \\t</filter>\\n\\t\\t        </defs>\\n\\t\\t        <path class=\\\"st2\\\" d=\\\"M0 0 L32 0 L32 128 L0 128 Z\\\" />\\n\\t\\t    </svg>\\n\\t\\t\");\n    };\n\n    var svgString = createSvg('#156dff', 8);\n    var svg = new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    });\n    var DOMURL = window.URL || window.webkitURL || window;\n    var insetShadowUrl = DOMURL.createObjectURL(svg);\n    var dataSet = [['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], [120, 200, 150, 80, 70, 90, 185]];\n    var option1 = {\n      // backgroundColor: '#101631',\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: 'rgba(0, 0, 0, 0.5)'\n        },\n        splitLine: {\n          show: false\n        },\n        data: dataSet[0]\n      },\n      yAxis: {\n        type: 'value',\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: 'rgba(0, 0, 0, 0.5)'\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            type: 'dotted',\n            color: 'rgba(0, 0, 0, 0.1)',\n            width: 1\n          }\n        }\n      },\n      series: [{\n        data: dataSet[1],\n        type: 'pictorialBar',\n        symbol: 'image://' + insetShadowUrl,\n        barWidth: 10\n      }, {\n        data: dataSet[1],\n        type: 'bar',\n        barWidth: 20,\n        itemStyle: {\n          color: 'transparent',\n          borderWidth: 3,\n          borderColor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: '#156dff'\n          }, {\n            offset: 1,\n            color: '#00eaeb'\n          }]),\n          shadowColor: 'blue',\n          shadowBlur: 12,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0\n        }\n      }]\n    };\n    this.initCharts(this.$refs.leftop, option1); // 左中\n    // let option2 = ({\n    //     // title: {\n    //     //     text: 'ECharts 入门示例'\n    //     // },\n    //     tooltip: {},\n    //     xAxis: {\n    //         data: ['高中', '中专', '大专', '本科', '硕士', '博士']\n    //     },\n    //     yAxis: {},\n    //     series: [{\n    //         name: '供职数目',\n    //         type: 'bar',\n    //         data: [5, 20, 100, 10, 10, 20]\n    //     }]\n    // });\n    // this.initCharts(this.$refs.leftcenter, option2)\n    // 左下\n\n    var option3 = {\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\n      },\n      // legend: {\n      //     orient: 'vertical',\n      //     top:100,\n      //     left: 10,\n      //     data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n      // },\n      series: [{\n        name: '访问来源',\n        type: 'pie',\n        radius: ['50%', '70%'],\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          position: 'center'\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: '10',\n            fontWeight: 'bold'\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: [{\n          value: 335,\n          name: '直接访问'\n        }, {\n          value: 310,\n          name: '邮件营销'\n        }, {\n          value: 234,\n          name: '联盟广告'\n        }, {\n          value: 135,\n          name: '视频广告'\n        }, {\n          value: 1548,\n          name: '搜索引擎'\n        }]\n      }]\n    };\n    this.initCharts(this.$refs.leftbottom, option3); // 中间的地图部分\n\n    var this_ = this;\n    var option = {};\n    this.initCharts(this.$refs.map, option); // 右上\n\n    var data = [699, 727, 749, 765, 795, 820, 834];\n    var xdata = ['2013', '2014', '2015', '2016', '2017', '2018', '2019'];\n    var option4 = {\n      grid: {\n        left: '10%',\n        top: '25%',\n        bottom: '4%',\n        right: '8%',\n        containLabel: true\n      },\n      tooltip: {},\n      xAxis: {\n        type: 'category',\n        // boundaryGap: false,\n        data: xdata,\n        triggerEvent: true,\n        splitLine: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 2,\n            color: 'rgba(0, 0, 0, 0.6)'\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          color: '#000000',\n          fontSize: 8,\n          // fontWeight: 'bold',\n          textShadowColor: '#000',\n          textShadowOffsetY: 1\n        }\n      },\n      yAxis: {\n        name: '单位(万人)',\n        nameTextStyle: {\n          color: '#000000',\n          fontSize: 12,\n          textShadowColor: '#000',\n          textShadowOffsetY: 1\n        },\n        type: 'value',\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: 'rgba(182, 182, 182, 0.2)'\n          }\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            width: 2,\n            color: 'rgba(0, 0, 0, 0.6)'\n          }\n        },\n        axisTick: {\n          show: true\n        },\n        axisLabel: {\n          color: '#000000',\n          fontSize: 12,\n          textShadowColor: '#000',\n          textShadowOffsetY: 1\n        }\n      },\n      series: [{\n        data: data,\n        type: 'line',\n        symbol: 'circle',\n        symbolSize: 10,\n        color: '#FEC201',\n        lineStyle: {\n          color: \"#03E0F2\"\n        },\n        label: {\n          show: true,\n          position: 'top',\n          textStyle: {\n            color: '#FEC201',\n            fontSize: 10,\n            fontWeight: 'bold'\n          }\n        },\n        areaStyle: {\n          color: 'rgba(1,98,133,0.6)'\n        }\n      }, {\n        type: 'bar',\n        animation: false,\n        barWidth: 3,\n        hoverAnimation: false,\n        data: data,\n        tooltip: {\n          show: false\n        },\n        itemStyle: {\n          normal: {\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#91EAF2' // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: '#074863' // 100% 处的颜色\n\n              }],\n              globalCoord: false // 缺省为 false\n\n            },\n            label: {\n              show: false\n            }\n          }\n        }\n      }]\n    };\n    this.initCharts(this.$refs.rightop, option4); // 右中\n\n    var colorArray = [{\n      top: '#ffa800',\n      //黄\n      bottom: 'rgba(11,42,84,.3)'\n    }, {\n      top: '#1ace4a',\n      //绿\n      bottom: 'rgba(11,42,84, 0.3)'\n    }, {\n      top: '#4bf3ff',\n      //蓝\n      bottom: 'rgba(11,42,84,.3)'\n    }, {\n      top: '#4f9aff',\n      //深蓝\n      bottom: 'rgba(11,42,84,.3)'\n    }, {\n      top: '#b250ff',\n      //粉\n      bottom: 'rgba(11,42,84,.3)'\n    }];\n    var option5 = {\n      // backgroundColor: '#0E2A43',\n      tooltip: {\n        show: true,\n        formatter: \"{b}:{c}\"\n      },\n      grid: {\n        left: '5%',\n        top: '12%',\n        right: '1%',\n        bottom: '8%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'value',\n        show: false,\n        position: 'top',\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#2a2a2a'\n          }\n        },\n        splitLine: {\n          show: false\n        }\n      },\n      yAxis: [{\n        type: 'category',\n        axisTick: {\n          show: false,\n          alignWithLabel: false,\n          length: 5\n        },\n        \"splitLine\": {\n          //网格线\n          \"show\": false\n        },\n        inverse: 'true',\n        //排序\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#434343'\n          }\n        },\n        data: ['Vue', 'JS', 'HTML', 'React', 'Angular']\n      }],\n      series: [{\n        // name: '能耗值',\n        type: 'bar',\n        label: {\n          normal: {\n            show: true,\n            position: 'right',\n            formatter: '{c}',\n            textStyle: {\n              color: '#2b2b2b' //color of value\n\n            }\n          }\n        },\n        itemStyle: {\n          normal: {\n            show: true,\n            color: function color(params) {\n              var num = colorArray.length;\n              return {\n                type: 'linear',\n                colorStops: [{\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }, {\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }, {\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }, {\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }, {\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }, {\n                  offset: 0,\n                  color: colorArray[params.dataIndex % num].bottom\n                }, {\n                  offset: 1,\n                  color: colorArray[params.dataIndex % num].top\n                }] //globalCoord: false\n\n              };\n            },\n            barBorderRadius: 70,\n            borderWidth: 0,\n            borderColor: '#333'\n          }\n        },\n        barGap: '0%',\n        barCategoryGap: '50%',\n        data: [60, 132, 89, 134, 60]\n      }]\n    };\n    this.initCharts(this.$refs.rightcenter, option5); // 右下\n\n    var option6 = {\n      // backgroundColor: '#2c343c',\n      // title: {\n      // \t// text: 'Customized Pie',\n      // \tleft: 'center',\n      // \ttop: 20,\n      // \ttextStyle: {\n      // \t\tcolor: '#ccc'\n      // \t}\n      // },\n      tooltip: {\n        trigger: 'item',\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\n      },\n      visualMap: {\n        show: false,\n        min: 80,\n        max: 600,\n        inRange: {\n          colorLightness: [0, 1]\n        }\n      },\n      series: [{\n        name: '访问来源',\n        type: 'pie',\n        radius: '55%',\n        center: ['50%', '50%'],\n        data: [{\n          value: 335,\n          name: '直接访问'\n        }, {\n          value: 310,\n          name: '邮件营销'\n        }, {\n          value: 274,\n          name: '联盟广告'\n        }, {\n          value: 235,\n          name: '视频广告'\n        }, {\n          value: 400,\n          name: '搜索引擎'\n        }].sort(function (a, b) {\n          return a.value - b.value;\n        }),\n        roseType: 'radius',\n        label: {\n          color: 'rgb(0, 0, 0, 0.65)'\n        },\n        labelLine: {\n          lineStyle: {\n            color: 'rgba(0, 0, 0, 0.6)'\n          },\n          smooth: 0.2,\n          length: 10,\n          length2: 20\n        },\n        itemStyle: {\n          color: '#c23531' // shadowBlur: 200,\n          // shadowColor: 'rgba(0, 0, 0, 0.5)'\n\n        },\n        animationType: 'scale',\n        animationEasing: 'elasticOut',\n        animationDelay: function animationDelay(idx) {\n          return Math.random() * 200;\n        }\n      }]\n    };\n    this.initCharts(this.$refs.rightbottom, option6);\n  },\n  components: {}\n};",{"version":3,"sources":["account.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div id=\"app\" style=\"background-color: skyblue;\">\r\n\t\t<div id=\"left\">\r\n\t\t\t<div id=\"leftop\" class=\"charts\" ref=\"leftop\" ></div>\r\n\t\t\t<div id=\"lefcenter\" class=\"charts\" ref=\"leftcenter\"></div>\r\n\t\t\t<div id=\"leftbottom\" class=\"charts\" ref=\"leftbottom\"></div>\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\t\t<div id=\"chinaMap\" class=\"charts\" ref=\"map\"></div>\r\n\t\t\r\n\t\t<div id=\"right\">\r\n\t\t\t<div id='rightop' class=\"charts\" ref=\"rightop\"></div>\r\n\t\t\t<div id='rightcenter' class=\"charts\" ref=\"rightcenter\"></div>\r\n\t\t\t<div id='rightbottom' class=\"charts\" ref=\"rightbottom\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\n\timport { exportchart } from \"../js/exportchart\";\r\n\timport Server from \"@/core/server\";\r\n\timport { services } from \"@/core/config/services\";\r\n\timport echarts from \"echarts\"\r\n\t\r\n\texport default {\r\n\t\tname:'',\r\n\t\tdata(){\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\tmethods:{\r\n\t\t\tinitCharts(charts, option){\r\n\t\t\t\tlet myChart = echarts.init(charts);\r\n\t\t\t\tmyChart.setOption(option);\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\t// 左上\r\n\t\t\tconst createSvg = (shadowColor, shadowBlur) => `\r\n\t\t\t    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \r\n\t\t\t        x=\"0px\" y=\"0px\" \r\n\t\t\t        viewBox=\"0 0 32 128\"\r\n\t\t\t        xml:space=\"preserve\"\r\n\t\t\t    >\r\n\t\t\t        <style>\r\n\t\t\t            .st2 {\r\n\t\t\t                fill: transparent;\r\n\t\t\t                stroke: ${shadowColor};\r\n\t\t\t                stroke-width: ${shadowBlur}px;\r\n\t\t\t                filter: url(#chart-inset-shadow);\r\n\t\t\t            }\r\n\t\t\t        </style>\r\n\t\t\t        <defs>\r\n\t\t\t            <filter id=\"chart-inset-shadow\" width=\"200%\" height=\"200%\" x=\"-50%\" y=\"-50%\">\r\n\t\t\t        \t\t<feGaussianBlur in=\"SourceGraphic\" result=\"gass\" stdDeviation=\"${shadowBlur * 0.75}\" />\r\n\t\t\t        \t\t<feMerge>\r\n\t\t\t        \t\t\t<feMergeNode in=\"gass\" />\r\n\t\t\t        \t\t</feMerge>\r\n\t\t\t        \t</filter>\r\n\t\t\t        </defs>\r\n\t\t\t        <path class=\"st2\" d=\"M0 0 L32 0 L32 128 L0 128 Z\" />\r\n\t\t\t    </svg>\r\n\t\t\t`;\r\n\t\t\tconst svgString = createSvg('#156dff', 8);\r\n\t\t\tconst svg = new Blob([svgString], {type: \"image/svg+xml;charset=utf-8\"});\r\n\t\t\t\r\n\t\t\tconst DOMURL = window.URL || window.webkitURL || window;\r\n\t\t\tconst insetShadowUrl = DOMURL.createObjectURL(svg);\r\n\t\t\t\r\n\t\t\tconst dataSet = [\r\n\t\t\t    ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n\t\t\t    [120, 200, 150, 80, 70, 90, 185]\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\tlet option1 = {\n\t\t\t\t// backgroundColor: '#101631',\n\t\t\t\ttooltip:{},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tdata: dataSet[0],\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\ttype: 'dotted',\n\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\t\t\t\t\twidth: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dataSet[1],\n\t\t\t\t\t\ttype: 'pictorialBar',\n\t\t\t\t\t\tsymbol: 'image://' + insetShadowUrl,\n\t\t\t\t\t\tbarWidth: 10,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: dataSet[1],\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tbarWidth: 20,\n\t\t\t\t\t\titemStyle: {\n\t\t\t\t\t\t\tcolor: 'transparent',\n\t\t\t\t\t\t\tborderWidth: 3,\n\t\t\t\t\t\t\tborderColor: new echarts.graphic.LinearGradient(\n\t\t\t\t\t\t\t\t0, 0, 0, 1,\n\t\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: '#156dff'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\tcolor: '#00eaeb'\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tshadowColor: 'blue',\n\t\t\t\t\t\t\tshadowBlur: 12,\n\t\t\t\t\t\t\tshadowOffsetX: 0,\n\t\t\t\t\t\t\tshadowOffsetY: 0,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t};\r\n\t\t\tthis.initCharts(this.$refs.leftop, option1)\r\n\t\t\t\r\n\t\t\t// 左中\r\n\t\t\t// let option2 = ({\r\n\t\t\t//     // title: {\r\n\t\t\t//     //     text: 'ECharts 入门示例'\r\n\t\t\t//     // },\r\n\t\t\t//     tooltip: {},\r\n\t\t\t//     xAxis: {\r\n\t\t\t//         data: ['高中', '中专', '大专', '本科', '硕士', '博士']\r\n\t\t\t//     },\r\n\t\t\t//     yAxis: {},\r\n\t\t\t//     series: [{\r\n\t\t\t//         name: '供职数目',\r\n\t\t\t//         type: 'bar',\r\n\t\t\t//         data: [5, 20, 100, 10, 10, 20]\r\n\t\t\t//     }]\r\n\t\t\t// });\r\n\t\t\t// this.initCharts(this.$refs.leftcenter, option2)\r\n\t\t\t\r\n\t\t\t// 左下\r\n\t\t\tlet option3 = {\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'item',\n\t\t\t\t\tformatter: '{a} <br/>{b}: {c} ({d}%)'\n\t\t\t\t},\n\t\t\t\t// legend: {\n\t\t\t\t//     orient: 'vertical',\n\t\t\t\t//     top:100,\n\t\t\t\t//     left: 10,\n\t\t\t\t//     data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n\t\t\t\t// },\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '访问来源',\n\t\t\t\t\t\ttype: 'pie',\n\t\t\t\t\t\tradius: ['50%', '70%'],\n\t\t\t\t\t\tavoidLabelOverlap: false,\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\tposition: 'center'\n\t\t\t\t\t\t},\n\t\t\t\t\t\temphasis: {\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tfontSize: '10',\n\t\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t{value: 335, name: '直接访问'},\n\t\t\t\t\t\t\t{value: 310, name: '邮件营销'},\n\t\t\t\t\t\t\t{value: 234, name: '联盟广告'},\n\t\t\t\t\t\t\t{value: 135, name: '视频广告'},\n\t\t\t\t\t\t\t{value: 1548, name: '搜索引擎'}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\r\n\t\t\tthis.initCharts(this.$refs.leftbottom, option3)\r\n\t\t\t\r\n\t\t\t// 中间的地图部分\r\n\t\t\tlet this_ = this;\r\n\t\t\tlet option = {\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t\tthis.initCharts(this.$refs.map, option)\r\n\t\t\t\r\n\t\t\t// 右上\r\n\t\t\tlet data = [699, 727, 749, 765, 795, 820, 834];\r\n\t\t\tlet xdata = ['2013', '2014', '2015', '2016', '2017', '2018', '2019'];\r\n\t\t\tlet option4 = {\r\n\t\t\t\tgrid: {\r\n\t\t\t\t\tleft: '10%',\r\n\t\t\t\t\ttop: '25%',\r\n\t\t\t\t\tbottom: '4%',\r\n\t\t\t\t\tright: '8%',\r\n\t\t\t\t\tcontainLabel: true\r\n\t\t\t\t},\n\t\t\t\ttooltip: {},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\t// boundaryGap: false,\n\t\t\t\t\tdata: xdata,\n\t\t\t\t\ttriggerEvent: true,\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.6)'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\tfontSize: 8,\n\t\t\t\t\t\t// fontWeight: 'bold',\n\t\t\t\t\t\ttextShadowColor: '#000',\n\t\t\t\t\t\ttextShadowOffsetY: 1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\tname: '单位(万人)',\n\t\t\t\t\tnameTextStyle: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\ttextShadowColor: '#000',\n\t\t\t\t\t\ttextShadowOffsetY: 1\n\t\t\t\t\t},\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\tcolor: 'rgba(182, 182, 182, 0.2)'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 2,\n\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.6)'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: true\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\ttextShadowColor: '#000',\n\t\t\t\t\t\ttextShadowOffsetY: 1\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [{\n\t\t\t\t\tdata: data,\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsymbol: 'circle',\n\t\t\t\t\tsymbolSize: 10,\n\t\t\t\t\tcolor: '#FEC201',\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\tcolor: \"#03E0F2\"\n\t\t\t\t\t},\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\tcolor: '#FEC201',\n\t\t\t\t\t\t\tfontSize: 10,\n\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tareaStyle: {\n\t\t\t\t\t\tcolor: 'rgba(1,98,133,0.6)'\n\t\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tanimation: false,\n\t\t\t\t\tbarWidth: 3,\n\t\t\t\t\thoverAnimation: false,\n\t\t\t\t\tdata: data,\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\ttype: 'linear',\n\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\t\tx2: 0,\n\t\t\t\t\t\t\t\ty2: 1,\n\t\t\t\t\t\t\t\tcolorStops: [{\n\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\tcolor: '#91EAF2' // 0% 处的颜色\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\tcolor: '#074863' // 100% 处的颜色\n\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\tglobalCoord: false // 缺省为 false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\r\n\t\t\tthis.initCharts(this.$refs.rightop, option4)\r\n\t\t\t\r\n\t\t\t// 右中\r\n\t\t\tlet colorArray = [\r\n\t\t\t    {\r\n\t\t\t        top: '#ffa800', //黄\r\n\t\t\t        bottom: 'rgba(11,42,84,.3)'\r\n\t\t\t    }, {\r\n\t\t\t        top: '#1ace4a', //绿\r\n\t\t\t        bottom: 'rgba(11,42,84, 0.3)'\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t        top: '#4bf3ff', //蓝\r\n\t\t\t        bottom: 'rgba(11,42,84,.3)'\r\n\t\t\t    }, {\r\n\t\t\t        top: '#4f9aff', //深蓝\r\n\t\t\t        bottom: 'rgba(11,42,84,.3)'\r\n\t\t\t    },\r\n\t\t\t    {\r\n\t\t\t        top: '#b250ff', //粉\r\n\t\t\t        bottom: 'rgba(11,42,84,.3)'\r\n\t\t\t    }\r\n\t\t\t];\r\n\t\t\tlet option5 = {\n\t\t\t\t// backgroundColor: '#0E2A43',\n\t\t\t\t tooltip: {\n\t\t\t\t\t  show: true,\n\t\t\t\t\t  formatter: \"{b}:{c}\"\n\t\t\t\t\t},\n\t\t\t   grid: {\n\t\t\t\t\t  left: '5%',\n\t\t\t\t\t  top: '12%',\n\t\t\t\t\t  right: '1%',\n\t\t\t\t\t  bottom: '8%',\n\t\t\t\t\t  containLabel: true\n\t\t\t\t\t},\n\t\t\t  \n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\tshow:false,\n\t\t\t\t\tposition: 'top',\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\tcolor: '#2a2a2a',\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tyAxis: [{\n\t\t\t\t\t\ttype: 'category',\n\t\t\t\t\t\taxisTick: {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\talignWithLabel: false,\n\t\t\t\t\t\t\tlength: 5,\n\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"splitLine\": { //网格线\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinverse: 'true', //排序\n\t\t\t\t\t\taxisLine: {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\t\tcolor: '#434343',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: ['Vue', 'JS', 'HTML', 'React', 'Angular']\n\t\t\t\t\t}\n\n\t\t\t\t],\n\t\t\t\tseries: [{\n\t\t\t\t\t\t// name: '能耗值',\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\t  show: true,\n\t\t\t\t\t\t\t  position: 'right',\n\t\t\t\t\t\t\t  formatter: '{c}',\n\t\t\t\t\t\t\t  textStyle: {\n\t\t\t\t\t\t\t\tcolor:'#2b2b2b' //color of value\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  },\n\t\t\t\t\t\titemStyle: {\n\t\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\t\tcolor: function(params) {\n\t\t\t\t\t\t\t\t\tlet num = colorArray.length;\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\ttype: 'linear',\n\t\t\t\t\t\t\t\t\t\tcolorStops: [{\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].bottom\n\t\t\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\t\t\t\tcolor: colorArray[params.dataIndex % num].top\n\t\t\t\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t\t\t\t//globalCoord: false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbarBorderRadius: 70,\n\t\t\t\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\t\t\t\tborderColor: '#333',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbarGap: '0%',\n\t\t\t\t\t\tbarCategoryGap: '50%',\n\t\t\t\t\t\tdata: [60, 132, 89, 134, 60]\n\t\t\t\t\t}\n\n\t\t\t\t]\n\t\t\t};\r\n\t\t\tthis.initCharts(this.$refs.rightcenter, option5)\r\n\t\t\t\r\n\t\t\t// 右下\r\n\t\t\tlet option6 = {\n\t\t\t\t// backgroundColor: '#2c343c',\n\n\t\t\t\t// title: {\n\t\t\t\t// \t// text: 'Customized Pie',\n\t\t\t\t// \tleft: 'center',\n\t\t\t\t// \ttop: 20,\n\t\t\t\t// \ttextStyle: {\n\t\t\t\t// \t\tcolor: '#ccc'\n\t\t\t\t// \t}\n\t\t\t\t// },\n\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'item',\n\t\t\t\t\tformatter: '{a} <br/>{b} : {c} ({d}%)'\n\t\t\t\t},\n\n\t\t\t\tvisualMap: {\n\t\t\t\t\tshow: false,\n\t\t\t\t\tmin: 80,\n\t\t\t\t\tmax: 600,\n\t\t\t\t\tinRange: {\n\t\t\t\t\t\tcolorLightness: [0, 1]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '访问来源',\n\t\t\t\t\t\ttype: 'pie',\n\t\t\t\t\t\tradius: '55%',\n\t\t\t\t\t\tcenter: ['50%', '50%'],\n\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t{value: 335, name: '直接访问'},\n\t\t\t\t\t\t\t{value: 310, name: '邮件营销'},\n\t\t\t\t\t\t\t{value: 274, name: '联盟广告'},\n\t\t\t\t\t\t\t{value: 235, name: '视频广告'},\n\t\t\t\t\t\t\t{value: 400, name: '搜索引擎'}\n\t\t\t\t\t\t].sort(function (a, b) { return a.value - b.value; }),\n\t\t\t\t\t\troseType: 'radius',\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tcolor: 'rgb(0, 0, 0, 0.65)'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.6)'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsmooth: 0.2,\n\t\t\t\t\t\t\tlength: 10,\n\t\t\t\t\t\t\tlength2: 20\n\t\t\t\t\t\t},\n\t\t\t\t\t\titemStyle: {\n\t\t\t\t\t\t\tcolor: '#c23531',\n\t\t\t\t\t\t\t// shadowBlur: 200,\n\t\t\t\t\t\t\t// shadowColor: 'rgba(0, 0, 0, 0.5)'\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tanimationType: 'scale',\n\t\t\t\t\t\tanimationEasing: 'elasticOut',\n\t\t\t\t\t\tanimationDelay: function (idx) {\n\t\t\t\t\t\t\treturn Math.random() * 200;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\r\n\t\t\tthis.initCharts(this.$refs.rightbottom, option6)\r\n\t\t},\r\n\t\tcomponents:{}\r\n\t\t\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t#left{\r\n\t\tfloat: left;\r\n\t\twidth: 24%;\r\n\t\theight: 666px;\r\n\t}\r\n\t#leftop{\r\n\t\t\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t}\r\n\t#lefcenter{\r\n\t\t\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t\tbackground: url(../img/leftcenter.png) no-repeat;\r\n\t\tbackground-size: 300px 220px;\r\n\t\tbackground-position: center;\r\n\t}\r\n\t#leftbottom{\r\n\t\t\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t}\r\n\t\r\n\t#chinaMap{\r\n\t\tfloat: left;\r\n\t\twidth: 52%;\r\n\t\theight: 666px;\r\n\t\t/* background-color: #888888; */\r\n\t}\r\n\t\r\n\t#right{\r\n\t\tfloat: left;\r\n\t\twidth: 24%;\r\n\t\theight: 666px;\r\n\t}\r\n\t#rightop{\r\n\t\t\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t}\r\n\t#rightcenter{\r\n\t\t\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t}\r\n\t#rightbottom{\r\n\t\t/* background-color: #02A6B5; */\r\n\t\twidth: 100%;\r\n\t\theight: 222px;\r\n\t}\r\n</style>"],"sourceRoot":"src\\views\\account\\components"}]}