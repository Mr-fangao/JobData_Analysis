{"remainingRequest":"E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\views\\recommendation\\components\\housings.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\views\\recommendation\\components\\housings.vue","mtime":1590744054068},{"path":"E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\04 GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { exportchart } from \"../../account/js/exportchart.js\";\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport echarts from \"echarts\";\nimport 'echarts/map/js/china.js';\nimport 'echarts/theme/macarons.js';\nimport 'echarts-wordcloud/dist/echarts-wordcloud.js';\nimport 'echarts-wordcloud/dist/echarts-wordcloud.min.js';\nexport default {\n  name: '',\n  data: function data() {\n    return {};\n  },\n  methods: {\n    initCharts: function initCharts(charts, option) {\n      var myChart = echarts.init(charts);\n      myChart.setOption(option);\n    },\n    resize: function resize() {\n      this.map.resize();\n    }\n  },\n  mounted: function mounted() {\n    // 地图\n    var this_ = this;\n    var myChart = echarts.init(document.getElementById(\"map\"));\n    var geoCoordMap = {\n      \"北京\": [116.3333333, 39.9333333],\n      \"成都\": [104.06, 30.67],\n      \"大连\": [121.36, 38.55],\n      \"广州\": [113.5, 23.33333333],\n      \"杭州\": [120.19, 30.26],\n      \"合肥\": [117.27, 31.86],\n      \"济南\": [117, 36.65],\n      \"昆明\": [102.73, 25.04],\n      \"南昌\": [110, 36],\n      \"南京\": [118.78, 32.04],\n      \"上海\": [121.47, 31.23],\n      \"深圳\": [114.1180754, 22.57737411],\n      \"苏州\": [120.62, 31.32],\n      \"无锡\": [120.29, 31.59],\n      \"武汉\": [114.447936, 30.49184494],\n      \"西安\": [108.95, 34.27],\n      \"长沙\": [113.0024005, 28.21],\n      \"郑州\": [113.65, 34.76],\n      \"重庆\": [106.467959, 29.51084699],\n      \"福州\": [119.3, 26.08]\n    };\n    var data = [{\n      name: \"北京\",\n      value: 102\n    }, {\n      name: \"成都\",\n      value: 53\n    }, {\n      name: \"大连\",\n      value: 5\n    }, {\n      name: \"广州\",\n      value: 145\n    }, {\n      name: \"杭州\",\n      value: 47\n    }, {\n      name: \"合肥\",\n      value: 29\n    }, {\n      name: \"济南\",\n      value: 15\n    }, {\n      name: \"昆明\",\n      value: 16\n    }, {\n      name: \"南昌\",\n      value: 8\n    }, {\n      name: \"南京\",\n      value: 105\n    }, {\n      name: \"上海\",\n      value: 77\n    }, {\n      name: \"深圳\",\n      value: 56\n    }, {\n      name: \"苏州\",\n      value: 18\n    }, {\n      name: \"无锡\",\n      value: 10\n    }, {\n      name: \"武汉\",\n      value: 114\n    }, {\n      name: \"西安\",\n      value: 43\n    }, {\n      name: \"长沙\",\n      value: 29\n    }, {\n      name: \"郑州\",\n      value: 14\n    }, {\n      name: \"中山\",\n      value: 10\n    }, {\n      name: \"重庆\",\n      value: 19\n    }, {\n      name: \"福州\",\n      value: 20\n    }];\n\n    var convertData = function convertData(data) {\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var geoCoord = geoCoordMap[data[i].name];\n\n        if (geoCoord) {\n          res.push({\n            name: data[i].name,\n            value: geoCoord.concat(data[i].value)\n          });\n        }\n      }\n\n      return res;\n    };\n\n    var convertedData = [convertData(data), convertData(data.sort(function (a, b) {\n      return b.value - a.value;\n    }).slice(0, 6))];\n    var option = {\n      backgroundColor: '#8f8f8f',\n      animation: true,\n      animationDuration: 1000,\n      animationEasing: 'cubicInOut',\n      animationDurationUpdate: 1000,\n      animationEasingUpdate: 'cubicInOut',\n      title: [{\n        text: '全国GIS相关职位需求数量(单位:个)',\n        subtext: '右侧统计选择框内职位数(降序)',\n        padding: [18, 0, 10, 0],\n        left: 'center',\n        textStyle: {\n          color: '#000000',\n          fontSize: 20\n        },\n        subtextStyle: {\n          color: '#191919',\n          fontSize: 15,\n          fontWeight: 'bold'\n        }\n      }, {\n        id: 'statistic',\n        right: 120,\n        top: 40,\n        width: 100,\n        textStyle: {\n          color: '#fff',\n          fontSize: 16\n        }\n      }],\n      toolbox: {\n        iconStyle: {\n          normal: {\n            borderColor: '#fff'\n          },\n          emphasis: {\n            borderColor: '#b1e4ff'\n          }\n        }\n      },\n      brush: {\n        outOfBrush: {\n          color: '#abc'\n        },\n        brushStyle: {\n          borderWidth: 2,\n          color: 'rgba(0,0,0,0.2)',\n          borderColor: 'rgba(0,0,0,0.5)'\n        },\n        seriesIndex: [0, 1],\n        throttleType: 'debounce',\n        throttleDelay: 300,\n        geoIndex: 0\n      },\n      geo: {\n        map: 'china',\n        left: '10',\n        right: '35%',\n        center: [116, 31],\n        zoom: 2.5,\n        label: {\n          emphasis: {\n            show: false\n          }\n        },\n        roam: true,\n        itemStyle: {\n          normal: {\n            areaColor: '#5a5a5a',\n            borderColor: '#111'\n          },\n          emphasis: {\n            areaColor: '#2a333d'\n          }\n        }\n      },\n      tooltip: {},\n      grid: {\n        right: 40,\n        top: 100,\n        bottom: 40,\n        width: '30%'\n      },\n      xAxis: {\n        type: 'value',\n        scale: true,\n        position: 'top',\n        boundaryGap: false,\n        splitLine: {\n          show: false\n        },\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          margin: 2,\n          textStyle: {\n            color: '#000000'\n          }\n        }\n      },\n      yAxis: {\n        type: 'category',\n        nameGap: 16,\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#1f1f1f'\n          }\n        },\n        axisTick: {\n          show: false,\n          lineStyle: {\n            color: '#1f1f1f'\n          }\n        },\n        axisLabel: {\n          interval: 0,\n          textStyle: {\n            color: '#1f1f1f'\n          }\n        },\n        data: []\n      },\n      series: [{\n        type: 'scatter',\n        coordinateSystem: 'geo',\n        data: convertedData[0],\n        symbolSize: function symbolSize(val) {\n          return Math.max(val[2] / 10, 8);\n        },\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: false\n          },\n          emphasis: {\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: '#f1f100'\n          }\n        }\n      }, {\n        type: 'effectScatter',\n        coordinateSystem: 'geo',\n        data: convertedData[1],\n        symbolSize: function symbolSize(val) {\n          return Math.max(val[2] / 10, 8);\n        },\n        showEffectOn: 'emphasis',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'right',\n            show: true\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: '#ffff00',\n            shadowBlur: 10,\n            shadowColor: '#333'\n          }\n        },\n        zlevel: 1\n      }, {\n        id: 'bar',\n        zlevel: 2,\n        type: 'bar',\n        symbol: 'none',\n        itemStyle: {\n          normal: {\n            color: '#ffff00'\n          }\n        },\n        data: []\n      }]\n    };\n    myChart.on('brushselected', renderBrushed);\n    myChart.setOption(option);\n    setTimeout(function () {\n      myChart.dispatchAction({\n        type: 'brush',\n        areas: [{\n          geoIndex: 0,\n          brushType: 'polygon',\n          coordRange: [[119.72, 34.85], [119.68, 34.85], [119.5, 34.84], [119.19, 34.77], [118.76, 34.63], [118.6, 34.6], [118.46, 34.6], [118.33, 34.57], [118.05, 34.56], [117.6, 34.56], [117.41, 34.56], [117.25, 34.56], [117.11, 34.56], [117.02, 34.56], [117, 34.56], [116.94, 34.56], [116.94, 34.55], [116.9, 34.5], [116.88, 34.44], [116.88, 34.37], [116.88, 34.33], [116.88, 34.24], [116.92, 34.15], [116.98, 34.09], [117.05, 34.06], [117.19, 33.96], [117.29, 33.9], [117.43, 33.8], [117.49, 33.75], [117.54, 33.68], [117.6, 33.65], [117.62, 33.61], [117.64, 33.59], [117.68, 33.58], [117.7, 33.52], [117.74, 33.5], [117.74, 33.46], [117.8, 33.44], [117.82, 33.41], [117.86, 33.37], [117.9, 33.3], [117.9, 33.28], [117.9, 33.27], [118.09, 32.97], [118.21, 32.7], [118.29, 32.56], [118.31, 32.5], [118.35, 32.46], [118.35, 32.42], [118.35, 32.36], [118.35, 32.34], [118.37, 32.24], [118.37, 32.14], [118.37, 32.09], [118.44, 32.05], [118.46, 32.01], [118.54, 31.98], [118.6, 31.93], [118.68, 31.86], [118.72, 31.8], [118.74, 31.78], [118.76, 31.74], [118.78, 31.7], [118.82, 31.64], [118.82, 31.62], [118.86, 31.58], [118.86, 31.55], [118.88, 31.54], [118.88, 31.52], [118.9, 31.51], [118.91, 31.48], [118.93, 31.43], [118.95, 31.4], [118.97, 31.39], [118.97, 31.37], [118.97, 31.34], [118.97, 31.27], [118.97, 31.21], [118.97, 31.17], [118.97, 31.12], [118.97, 31.02], [118.97, 30.93], [118.97, 30.87], [118.97, 30.85], [118.95, 30.8], [118.95, 30.77], [118.95, 30.76], [118.93, 30.7], [118.91, 30.63], [118.91, 30.61], [118.91, 30.6], [118.9, 30.6], [118.88, 30.54], [118.88, 30.51], [118.86, 30.51], [118.86, 30.46], [118.72, 30.18], [118.68, 30.1], [118.66, 30.07], [118.62, 29.91], [118.56, 29.73], [118.52, 29.63], [118.48, 29.51], [118.44, 29.42], [118.44, 29.32], [118.43, 29.19], [118.43, 29.14], [118.43, 29.08], [118.44, 29.05], [118.46, 29.05], [118.6, 28.95], [118.64, 28.94], [119.07, 28.51], [119.25, 28.41], [119.36, 28.28], [119.46, 28.19], [119.54, 28.13], [119.66, 28.03], [119.78, 28], [119.87, 27.94], [120.03, 27.86], [120.17, 27.79], [120.23, 27.76], [120.3, 27.72], [120.42, 27.66], [120.52, 27.64], [120.58, 27.63], [120.64, 27.63], [120.77, 27.63], [120.89, 27.61], [120.97, 27.6], [121.07, 27.59], [121.15, 27.59], [121.28, 27.59], [121.38, 27.61], [121.56, 27.73], [121.73, 27.89], [122.03, 28.2], [122.3, 28.5], [122.46, 28.72], [122.5, 28.77], [122.54, 28.82], [122.56, 28.82], [122.58, 28.85], [122.6, 28.86], [122.61, 28.91], [122.71, 29.02], [122.73, 29.08], [122.93, 29.44], [122.99, 29.54], [123.03, 29.66], [123.05, 29.73], [123.16, 29.92], [123.24, 30.02], [123.28, 30.13], [123.32, 30.29], [123.36, 30.36], [123.36, 30.55], [123.36, 30.74], [123.36, 31.05], [123.36, 31.14], [123.36, 31.26], [123.38, 31.42], [123.46, 31.74], [123.48, 31.83], [123.48, 31.95], [123.46, 32.09], [123.34, 32.25], [123.22, 32.39], [123.12, 32.46], [123.07, 32.48], [123.05, 32.49], [122.97, 32.53], [122.91, 32.59], [122.83, 32.81], [122.77, 32.87], [122.71, 32.9], [122.56, 32.97], [122.38, 33.05], [122.3, 33.12], [122.26, 33.15], [122.22, 33.21], [122.22, 33.3], [122.22, 33.39], [122.18, 33.44], [122.07, 33.56], [121.99, 33.69], [121.89, 33.78], [121.69, 34.02], [121.66, 34.05], [121.64, 34.08]]\n        }]\n      });\n    }, 0);\n\n    function renderBrushed(params) {\n      var mainSeries = params.batch[0].selected[0];\n      var selectedItems = [];\n      var categoryData = [];\n      var barData = [];\n      var maxBar = 30;\n      var sum = 0;\n      var count = 0;\n\n      for (var i = 0; i < mainSeries.dataIndex.length; i++) {\n        var rawIndex = mainSeries.dataIndex[i];\n        var dataItem = convertedData[0][rawIndex];\n        var pmValue = dataItem.value[2];\n        sum += pmValue;\n        count++;\n        selectedItems.push(dataItem);\n      }\n\n      selectedItems.sort(function (a, b) {\n        return a.value[2] - b.value[2];\n      });\n\n      for (var i = 0; i < Math.min(selectedItems.length, maxBar); i++) {\n        categoryData.push(selectedItems[i].name);\n        barData.push(selectedItems[i].value[2]);\n      }\n\n      this.setOption({\n        yAxis: {\n          data: categoryData\n        },\n        xAxis: {\n          axisLabel: {\n            show: !!count\n          }\n        },\n        series: {\n          id: 'bar',\n          data: barData\n        }\n      });\n    } // 右上柱状图\n\n\n    var righTop = echarts.init(document.getElementById(\"rightop\"));\n    var option2 = {\n      title: {\n        text: '城市同职技能需求对比',\n        left: 'center',\n        top: 10,\n        textStyle: {\n          fontSize: 20\n        }\n      },\n      backgroundColor: '#f4f4f4',\n      tooltip: {\n        //提示框组件\n        trigger: 'axis',\n        formatter: '{b}<br />{a0}: {c0}<br />{a1}: {c1}',\n        axisPointer: {\n          type: 'shadow',\n          label: {\n            backgroundColor: '#6a7985'\n          }\n        },\n        textStyle: {\n          color: '#000000',\n          fontStyle: 'normal',\n          fontFamily: '微软雅黑',\n          fontSize: 12\n        }\n      },\n      grid: {\n        left: '1%',\n        right: '4%',\n        bottom: '6%',\n        top: '15%',\n        padding: '0 0 10 0',\n        containLabel: true\n      },\n      legend: {\n        //图例组件，颜色和名字\n        right: 10,\n        top: 0,\n        itemGap: 16,\n        itemWidth: 18,\n        itemHeight: 10,\n        padding: [40, 20, 0, 0],\n        data: [{\n          name: '北京'\n        }, {\n          name: '上海'\n        }],\n        textStyle: {\n          color: '#000000',\n          fontStyle: 'normal',\n          fontFamily: '微软雅黑',\n          fontSize: 12\n        }\n      },\n      xAxis: [{\n        type: 'category',\n        boundaryGap: true,\n        //坐标轴两边留白\n        data: ['ArcGIS', 'Office', 'Java', 'JavaScript', 'C#', 'C++', 'C', 'IOS', 'Android', '数据库', 'PHP', 'Python'],\n        axisLabel: {\n          //坐标轴刻度标签的相关设置。\n          interval: 0,\n          //设置为 1，表示『隔一个标签显示一个标签』\n          margin: 15,\n          textStyle: {\n            color: '#000000',\n            fontStyle: 'normal',\n            fontFamily: '微软雅黑',\n            fontSize: 12\n          }\n        },\n        axisTick: {\n          //坐标轴刻度相关设置。\n          show: false\n        },\n        axisLine: {\n          //坐标轴轴线相关设置\n          lineStyle: {\n            color: '#000000' // opacity: 0.2\n\n          }\n        },\n        splitLine: {\n          //坐标轴在 grid 区域中的分隔线。\n          show: false\n        }\n      }],\n      yAxis: [{\n        type: 'value',\n        splitNumber: 5,\n        axisLabel: {\n          textStyle: {\n            color: '#000000',\n            fontStyle: 'normal',\n            fontFamily: '微软雅黑',\n            fontSize: 12\n          }\n        },\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: ['#000000'] // opacity: 0.06\n\n          }\n        }\n      }],\n      series: [{\n        name: '北京',\n        type: 'bar',\n        // ArcGIS Office Java JavaScript C# C++ C IOS Android 数据库 PHP Python\n        data: [86, 19, 102, 55, 23, 64, 20, 10, 15, 94, 1, 28],\n        barWidth: 10,\n        barGap: 0,\n        //柱间距离\n        label: {\n          //图形上的文本标签\n          normal: {\n            show: true,\n            position: 'top',\n            textStyle: {\n              color: '#000000',\n              fontStyle: 'normal',\n              fontFamily: '微软雅黑',\n              fontSize: 12\n            }\n          }\n        },\n        itemStyle: {\n          //图形样式\n          normal: {\n            barBorderRadius: [5, 5, 0, 0],\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 1,\n              color: 'rgba(127, 128, 225, 0.7)'\n            }, {\n              offset: 0.9,\n              color: 'rgba(72, 73, 181, 0.7)'\n            }, {\n              offset: 0.31,\n              color: 'rgba(0, 208, 208, 0.7)'\n            }, {\n              offset: 0.15,\n              color: 'rgba(0, 208, 208, 0.7)'\n            }, {\n              offset: 0,\n              color: 'rgba(104, 253, 255, 0.7)'\n            }], false)\n          }\n        }\n      }, {\n        name: '上海',\n        type: 'bar',\n        // ArcGIS Office Java JavaScript C# C++ C IOS Android 数据库 PHP Python\n        data: [48, 3, 77, 40, 23, 24, 5, 4, 2, 73, 5, 11],\n        barWidth: 10,\n        barGap: 0.2,\n        //柱间距离\n        label: {\n          //图形上的文本标签\n          normal: {\n            show: true,\n            position: 'top',\n            textStyle: {\n              color: '#000000',\n              fontStyle: 'normal',\n              fontFamily: '微软雅黑',\n              fontSize: 12\n            }\n          }\n        },\n        itemStyle: {\n          //图形样式\n          normal: {\n            barBorderRadius: [5, 5, 0, 0],\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 1,\n              color: 'rgba(127, 128, 225, 0.7)'\n            }, {\n              offset: 0.9,\n              color: 'rgba(72, 73, 181, 0.7)'\n            }, {\n              offset: 0.25,\n              color: 'rgba(226, 99, 74, 0.7)'\n            }, {\n              offset: 0,\n              color: 'rgba(253, 200, 106, 0.7)'\n            }], false)\n          }\n        }\n      }]\n    };\n    righTop.setOption(option2); // 职业领域词云\n\n    var wordCloud = echarts.init(document.getElementById(\"wordCloud\"));\n    var option3 = {\n      title: {\n        text: '职业领域词云统计',\n        x: 'center',\n        y: 10,\n        textStyle: {\n          fontSize: 23\n        }\n      },\n      backgroundColor: '#e6e6e6',\n      tooltip: {\n        show: true\n      },\n      series: [{\n        type: \"wordCloud\",\n        gridSize: 6,\n        shape: 'diamond',\n        sizeRange: [17, 40],\n        width: 800,\n        height: 500,\n        textStyle: {\n          normal: {\n            color: function color() {\n              return 'rgb(' + [Math.round(Math.random() * 160), Math.round(Math.random() * 160), Math.round(Math.random() * 160)].join(',') + ')';\n            }\n          },\n          emphasis: {\n            shadowBlur: 10,\n            shadowColor: '#333'\n          }\n        },\n        data: [{\n          name: \" 餐饮业\",\n          value: 5\n        }, {\n          name: \" 电气/电力/水利\",\n          value: 296\n        }, {\n          name: \" 电子技术/半导体/集成电路\",\n          value: 240\n        }, {\n          name: \" 多元化业务\",\n          value: 109\n        }, {\n          name: \" 房地产\",\n          value: 111\n        }, {\n          name: \" 广告\",\n          value: 10\n        }, {\n          name: \" 航天/航空\",\n          value: 89\n        }, {\n          name: \" 互联网\",\n          value: 469\n        }, {\n          name: \" 环保\",\n          value: 180\n        }, {\n          name: \" 机械/设备/重工\",\n          value: 76\n        }, {\n          name: \" 会计/审计\",\n          value: 3\n        }, {\n          name: \" 计算机服务\",\n          value: 912\n        }, {\n          name: \" 建筑/建材/工程\",\n          value: 723\n        }, {\n          name: \" 交通/运输/物流\",\n          value: 35\n        }, {\n          name: \" 计算机软件\",\n          value: 2615\n        }, {\n          name: \" 教育\",\n          value: 54\n        }, {\n          name: \" 金融\",\n          value: 5\n        }, {\n          name: \" 酒店/旅游\",\n          value: 12\n        }, {\n          name: \" 农林牧渔\",\n          value: 76\n        }, {\n          name: \" 贸易/进出口\",\n          value: 10\n        }, {\n          name: \" 通信/电信\",\n          value: 208\n        }, {\n          name: \" 学术/科研\",\n          value: 109\n        }, {\n          name: \" 批发/零售\",\n          value: 14\n        }, {\n          name: \" 新能源\",\n          value: 23\n        }, {\n          name: \" 汽车\",\n          value: 13\n        }, {\n          name: \" 专业服务\",\n          value: 159\n        }, {\n          name: \" 中介服务\",\n          value: 11\n        }, {\n          name: \" 政府/公共事业\",\n          value: 202\n        }, {\n          name: \" 影视艺术\",\n          value: 16\n        }, {\n          name: \" 仪器仪表/自动化\",\n          value: 175\n        }, {\n          name: \" 医疗\",\n          value: 3\n        }]\n      }]\n    };\n    wordCloud.setOption(option3);\n  },\n  components: {}\n};",{"version":3,"sources":["housings.vue"],"names":[],"mappings":"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MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,IAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,KAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,KAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,CAAA,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","sourcesContent":["<template>\r\n\t<!-- 技能需求分析 -->\r\n\t<div id=\"main\" style=\"width: 100%; height: 1000px;\">\r\n\t\t<!-- 地图 -->\r\n\t\t<div id=\"map\"></div>\r\n\t\t\r\n\t\t<!-- 图表 -->\r\n\t\t<div id=\"chart\">\r\n\t\t\t<div id=\"rightop\"></div>\r\n\t\t\t<div id=\"wordCloud\"></div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { exportchart } from \"../../account/js/exportchart.js\";\r\nimport Server from \"@/core/server\";\r\nimport { services } from \"@/core/config/services\";\r\nimport echarts from \"echarts\";\r\nimport 'echarts/map/js/china.js';\r\nimport 'echarts/theme/macarons.js';\r\nimport 'echarts-wordcloud/dist/echarts-wordcloud.js';\r\nimport 'echarts-wordcloud/dist/echarts-wordcloud.min.js';\r\nexport default {\r\n\tname:'',\r\n\tdata(){\r\n\t\treturn {}\r\n\t},\r\n\tmethods:{\r\n\t\tinitCharts(charts, option){\r\n\t\t\tlet myChart = echarts.init(charts);\r\n\t\t\tmyChart.setOption(option);\r\n\t\t},\r\n\t\tresize(){\r\n\t\t\tthis.map.resize();\r\n\t\t}\r\n\t},\r\n\tmounted() {\r\n\t\t// 地图\r\n\t\tlet this_ = this;\r\n\t\tlet myChart = echarts.init(document.getElementById(\"map\"));\r\n\t\tvar geoCoordMap = {\r\n\t\t\t\"北京\":[116.3333333,39.9333333],\r\n\t\t\t\"成都\":[104.06,30.67],\r\n\t\t\t\"大连\":[121.36,38.55],\r\n\t\t\t\"广州\":[113.5,23.33333333],\r\n\t\t\t\"杭州\":[120.19,30.26],\r\n\t\t\t\"合肥\":[117.27,31.86],\r\n\t\t\t\"济南\":[117,36.65],\r\n\t\t\t\"昆明\":[102.73,25.04],\r\n\t\t\t\"南昌\":[110,36],\r\n\t\t\t\"南京\":[118.78,32.04],\r\n\t\t\t\"上海\":[121.47,31.23],\r\n\t\t\t\"深圳\":[114.1180754,22.57737411],\r\n\t\t\t\"苏州\":[120.62,31.32],\r\n\t\t\t\"无锡\":[120.29,31.59],\r\n\t\t\t\"武汉\":[114.447936,30.49184494],\r\n\t\t\t\"西安\":[108.95,34.27],\r\n\t\t\t\"长沙\":[113.0024005,28.21],\r\n\t\t\t\"郑州\":[113.65,34.76],\r\n\t\t\t\"重庆\":[106.467959,29.51084699],\r\n\t\t\t\"福州\":[119.3, 26.08],\r\n\t\t};\r\n\t\tvar data = [\r\n\t\t\t{name: \"北京\", value: 102},\r\n\t\t\t{name: \"成都\", value: 53},\r\n\t\t\t{name: \"大连\", value: 5},\r\n\t\t\t{name: \"广州\", value: 145},\r\n\t\t\t{name: \"杭州\", value: 47},\r\n\t\t\t{name: \"合肥\", value: 29},\r\n\t\t\t{name: \"济南\", value: 15},\r\n\t\t\t{name: \"昆明\", value: 16},\r\n\t\t\t{name: \"南昌\", value: 8},\r\n\t\t\t{name: \"南京\", value: 105},\r\n\t\t\t{name: \"上海\", value: 77},\r\n\t\t\t{name: \"深圳\", value: 56},\r\n\t\t\t{name: \"苏州\", value: 18},\r\n\t\t\t{name: \"无锡\", value: 10},\r\n\t\t\t{name: \"武汉\", value: 114},\r\n\t\t\t{name: \"西安\", value: 43},\r\n\t\t\t{name: \"长沙\", value: 29},\r\n\t\t\t{name: \"郑州\", value: 14},\r\n\t\t\t{name: \"中山\", value: 10},\r\n\t\t\t{name: \"重庆\", value: 19},\r\n\t\t\t{name: \"福州\", value: 20},\r\n\t\t];\r\n\t\tvar convertData = function (data) {\r\n\t\t    var res = [];\r\n\t\t    for (var i = 0; i < data.length; i++) {\r\n\t\t        var geoCoord = geoCoordMap[data[i].name];\r\n\t\t        if (geoCoord) {\r\n\t\t            res.push({\r\n\t\t                name: data[i].name,\r\n\t\t                value: geoCoord.concat(data[i].value)\r\n\t\t            });\r\n\t\t        }\r\n\t\t    }\r\n\t\t    return res;\r\n\t\t};\r\n\t\tvar convertedData = [\r\n\t\t    convertData(data),\r\n\t\t    convertData(data.sort(function (a, b) {\r\n\t\t        return b.value - a.value;\r\n\t\t    }).slice(0, 6))\r\n\t\t];\r\n\t\t\r\n\t\tlet option = {\n\t\t\tbackgroundColor: '#8f8f8f',\n\t\t\tanimation: true,\n\t\t\tanimationDuration: 1000,\n\t\t\tanimationEasing: 'cubicInOut',\n\t\t\tanimationDurationUpdate: 1000,\n\t\t\tanimationEasingUpdate: 'cubicInOut',\n\t\t\ttitle: [\n\t\t\t\t{\n\t\t\t\t\ttext: '全国GIS相关职位需求数量(单位:个)',\r\n\t\t\t\t\tsubtext:'右侧统计选择框内职位数(降序)',\r\n\t\t\t\t\tpadding:[18, 0, 10, 0],\n\t\t\t\t\tleft: 'center',\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#000000',\r\n\t\t\t\t\t\tfontSize:20\n\t\t\t\t\t},\r\n\t\t\t\t\tsubtextStyle:{\r\n\t\t\t\t\t\tcolor: '#191919',\r\n\t\t\t\t\t\tfontSize:15,\r\n\t\t\t\t\t\tfontWeight: 'bold'\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'statistic',\n\t\t\t\t\tright: 120,\n\t\t\t\t\ttop: 40,\n\t\t\t\t\twidth: 100,\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#fff',\n\t\t\t\t\t\tfontSize: 16\n\t\t\t\t\t}\n\t\t\t}],\n\t\t\ttoolbox: {\n\t\t\t\ticonStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tborderColor: '#fff'\n\t\t\t\t\t},\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tborderColor: '#b1e4ff'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tbrush: {\n\t\t\t\toutOfBrush: {\n\t\t\t\t\tcolor: '#abc'\n\t\t\t\t},\n\t\t\t\tbrushStyle: {\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tcolor: 'rgba(0,0,0,0.2)',\n\t\t\t\t\tborderColor: 'rgba(0,0,0,0.5)',\n\t\t\t\t},\n\t\t\t\tseriesIndex: [0, 1],\n\t\t\t\tthrottleType: 'debounce',\n\t\t\t\tthrottleDelay: 300,\n\t\t\t\tgeoIndex: 0\n\t\t\t},\n\t\t\tgeo: {\n\t\t\t\tmap: 'china',\n\t\t\t\tleft: '10',\n\t\t\t\tright: '35%',\n\t\t\t\tcenter: [116, 31],\n\t\t\t\tzoom: 2.5,\n\t\t\t\tlabel: {\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\troam: true,\n\t\t\t\titemStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tareaColor: '#5a5a5a',\n\t\t\t\t\t\tborderColor: '#111'\n\t\t\t\t\t},\n\t\t\t\t\temphasis: {\n\t\t\t\t\t\tareaColor: '#2a333d'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\ttooltip : {},\n\t\t\tgrid: {\n\t\t\t\tright: 40,\n\t\t\t\ttop: 100,\n\t\t\t\tbottom: 40,\n\t\t\t\twidth: '30%'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: 'value',\n\t\t\t\tscale: true,\n\t\t\t\tposition: 'top',\n\t\t\t\tboundaryGap: false,\n\t\t\t\tsplitLine: {show: false},\n\t\t\t\taxisLine: {show: false},\n\t\t\t\taxisTick: {show: false},\n\t\t\t\taxisLabel: {margin: 2, textStyle: {color: '#000000'}},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: 'category',\n\t\t\t\tnameGap: 16,\n\t\t\t\taxisLine: {show: false, lineStyle: {color: '#1f1f1f'}},\n\t\t\t\taxisTick: {show: false, lineStyle: {color: '#1f1f1f'}},\n\t\t\t\taxisLabel: {interval: 0, textStyle: {color: '#1f1f1f'}},\n\t\t\t\tdata: []\n\t\t\t},\n\t\t\tseries : [\n\t\t\t\t{\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tcoordinateSystem: 'geo',\n\t\t\t\t\tdata: convertedData[0],\n\t\t\t\t\tsymbolSize: function (val) {\n\t\t\t\t\t\treturn Math.max(val[2] / 10, 8);\n\t\t\t\t\t},\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tformatter: '{b}',\n\t\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t\t\tshow: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\temphasis: {\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: '#f1f100'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'effectScatter',\n\t\t\t\t\tcoordinateSystem: 'geo',\n\t\t\t\t\tdata: convertedData[1],\n\t\t\t\t\tsymbolSize: function (val) {\n\t\t\t\t\t\treturn Math.max(val[2] / 10, 8);\n\t\t\t\t\t},\n\t\t\t\t\tshowEffectOn: 'emphasis',\n\t\t\t\t\trippleEffect: {\n\t\t\t\t\t\tbrushType: 'stroke'\n\t\t\t\t\t},\n\t\t\t\t\thoverAnimation: true,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tformatter: '{b}',\n\t\t\t\t\t\t\tposition: 'right',\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: '#ffff00',\n\t\t\t\t\t\t\tshadowBlur: 10,\n\t\t\t\t\t\t\tshadowColor: '#333'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tzlevel: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'bar',\n\t\t\t\t\tzlevel: 2,\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tsymbol: 'none',\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: '#ffff00'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdata: []\n\t\t\t\t}\n\t\t\t]\n\t\t};\r\n\t\tmyChart.on('brushselected', renderBrushed);\r\n\t\tmyChart.setOption(option);\r\n\t\t\r\n\t\tsetTimeout(function () {\r\n\t\t\tmyChart.dispatchAction({\r\n\t\t\t\ttype: 'brush',\r\n\t\t\t\tareas: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgeoIndex: 0,\r\n\t\t\t\t\t\tbrushType: 'polygon',\r\n\t\t\t\t\t\tcoordRange: [[119.72,34.85],[119.68,34.85],[119.5,34.84],[119.19,34.77],[118.76,34.63],[118.6,34.6],[118.46,34.6],[118.33,34.57],[118.05,34.56],[117.6,34.56],[117.41,34.56],[117.25,34.56],[117.11,34.56],[117.02,34.56],[117,34.56],[116.94,34.56],[116.94,34.55],[116.9,34.5],[116.88,34.44],[116.88,34.37],[116.88,34.33],[116.88,34.24],[116.92,34.15],[116.98,34.09],[117.05,34.06],[117.19,33.96],[117.29,33.9],[117.43,33.8],[117.49,33.75],[117.54,33.68],[117.6,33.65],[117.62,33.61],[117.64,33.59],[117.68,33.58],[117.7,33.52],[117.74,33.5],[117.74,33.46],[117.8,33.44],[117.82,33.41],[117.86,33.37],[117.9,33.3],[117.9,33.28],[117.9,33.27],[118.09,32.97],[118.21,32.7],[118.29,32.56],[118.31,32.5],[118.35,32.46],[118.35,32.42],[118.35,32.36],[118.35,32.34],[118.37,32.24],[118.37,32.14],[118.37,32.09],[118.44,32.05],[118.46,32.01],[118.54,31.98],[118.6,31.93],[118.68,31.86],[118.72,31.8],[118.74,31.78],[118.76,31.74],[118.78,31.7],[118.82,31.64],[118.82,31.62],[118.86,31.58],[118.86,31.55],[118.88,31.54],[118.88,31.52],[118.9,31.51],[118.91,31.48],[118.93,31.43],[118.95,31.4],[118.97,31.39],[118.97,31.37],[118.97,31.34],[118.97,31.27],[118.97,31.21],[118.97,31.17],[118.97,31.12],[118.97,31.02],[118.97,30.93],[118.97,30.87],[118.97,30.85],[118.95,30.8],[118.95,30.77],[118.95,30.76],[118.93,30.7],[118.91,30.63],[118.91,30.61],[118.91,30.6],[118.9,30.6],[118.88,30.54],[118.88,30.51],[118.86,30.51],[118.86,30.46],[118.72,30.18],[118.68,30.1],[118.66,30.07],[118.62,29.91],[118.56,29.73],[118.52,29.63],[118.48,29.51],[118.44,29.42],[118.44,29.32],[118.43,29.19],[118.43,29.14],[118.43,29.08],[118.44,29.05],[118.46,29.05],[118.6,28.95],[118.64,28.94],[119.07,28.51],[119.25,28.41],[119.36,28.28],[119.46,28.19],[119.54,28.13],[119.66,28.03],[119.78,28],[119.87,27.94],[120.03,27.86],[120.17,27.79],[120.23,27.76],[120.3,27.72],[120.42,27.66],[120.52,27.64],[120.58,27.63],[120.64,27.63],[120.77,27.63],[120.89,27.61],[120.97,27.6],[121.07,27.59],[121.15,27.59],[121.28,27.59],[121.38,27.61],[121.56,27.73],[121.73,27.89],[122.03,28.2],[122.3,28.5],[122.46,28.72],[122.5,28.77],[122.54,28.82],[122.56,28.82],[122.58,28.85],[122.6,28.86],[122.61,28.91],[122.71,29.02],[122.73,29.08],[122.93,29.44],[122.99,29.54],[123.03,29.66],[123.05,29.73],[123.16,29.92],[123.24,30.02],[123.28,30.13],[123.32,30.29],[123.36,30.36],[123.36,30.55],[123.36,30.74],[123.36,31.05],[123.36,31.14],[123.36,31.26],[123.38,31.42],[123.46,31.74],[123.48,31.83],[123.48,31.95],[123.46,32.09],[123.34,32.25],[123.22,32.39],[123.12,32.46],[123.07,32.48],[123.05,32.49],[122.97,32.53],[122.91,32.59],[122.83,32.81],[122.77,32.87],[122.71,32.9],[122.56,32.97],[122.38,33.05],[122.3,33.12],[122.26,33.15],[122.22,33.21],[122.22,33.3],[122.22,33.39],[122.18,33.44],[122.07,33.56],[121.99,33.69],[121.89,33.78],[121.69,34.02],[121.66,34.05],[121.64,34.08]]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t});\r\n\t\t}, 0);\r\n\t\tfunction renderBrushed(params) {\r\n\t\t\tvar mainSeries = params.batch[0].selected[0];\r\n\t\t\tvar selectedItems = [];\r\n\t\t\tvar categoryData = [];\r\n\t\t\tvar barData = [];\r\n\t\t\tvar maxBar = 30;\r\n\t\t\tvar sum = 0;\r\n\t\t\tvar count = 0;\r\n\t\t\r\n\t\t\tfor (var i = 0; i < mainSeries.dataIndex.length; i++) {\r\n\t\t\t\tvar rawIndex = mainSeries.dataIndex[i];\r\n\t\t\t\tvar dataItem = convertedData[0][rawIndex];\r\n\t\t\t\tvar pmValue = dataItem.value[2];\r\n\t\t\t\tsum += pmValue;\r\n\t\t\t\tcount++;\r\n\t\t\t\tselectedItems.push(dataItem);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tselectedItems.sort(function (a, b) {\r\n\t\t\t\treturn a.value[2] - b.value[2];\r\n\t\t\t});\r\n\t\t\r\n\t\t\tfor (var i = 0; i < Math.min(selectedItems.length, maxBar); i++) {\r\n\t\t\t\tcategoryData.push(selectedItems[i].name);\r\n\t\t\t\tbarData.push(selectedItems[i].value[2]);\r\n\t\t\t}\r\n\r\n\t\t\tthis.setOption({\r\n\t\t\t\tyAxis: {\r\n\t\t\t\t\tdata: categoryData,\r\n\t\t\t\t},\r\n\t\t\t\txAxis: {\r\n\t\t\t\t\taxisLabel: {show: !!count}\r\n\t\t\t\t},\r\n\t\t\t\tseries: {\r\n\t\t\t\t\tid: 'bar',\r\n\t\t\t\t\tdata: barData\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t  \r\n\t\t// 右上柱状图\r\n\t\tlet righTop = echarts.init(document.getElementById(\"rightop\"));\r\n\t\tlet option2 = {\r\n\t\t\ttitle:{\r\n\t\t\t\ttext:'城市同职技能需求对比',\r\n\t\t\t\tleft: 'center',\r\n\t\t\t\ttop: 10,\r\n\t\t\t\ttextStyle:{\r\n\t\t\t\t\tfontSize: 20,\r\n\t\t\t\t}\r\n\t\t\t},\n\t\t\tbackgroundColor: '#f4f4f4',\n\t\t\ttooltip: { //提示框组件\n\t\t\t\ttrigger: 'axis',\n\t\t\t\tformatter: '{b}<br />{a0}: {c0}<br />{a1}: {c1}',\n\t\t\t\taxisPointer: {\n\t\t\t\t\ttype: 'shadow',\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tbackgroundColor: '#6a7985'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tleft: '1%',\n\t\t\t\tright: '4%',\n\t\t\t\tbottom: '6%',\n\t\t\t\ttop: '15%',\n\t\t\t\tpadding: '0 0 10 0',\n\t\t\t\tcontainLabel: true,\n\t\t\t},\n\t\t\tlegend: { //图例组件，颜色和名字\n\t\t\t\tright: 10,\n\t\t\t\ttop: 0,\n\t\t\t\titemGap: 16,\n\t\t\t\titemWidth: 18,\n\t\t\t\titemHeight: 10,\r\n\t\t\t\tpadding: [40, 20, 0, 0],\n\t\t\t\tdata: [{\r\n\t\t\t\t\tname: '北京',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '上海',\n\t\t\t\t}],\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}\n\t\t\t},\n\t\t\txAxis: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tboundaryGap: true, //坐标轴两边留白\n\t\t\t\tdata: ['ArcGIS', 'Office', 'Java', 'JavaScript', 'C#', 'C++', 'C', 'IOS', 'Android', '数据库', 'PHP', 'Python'],\n\t\t\t\taxisLabel: { //坐标轴刻度标签的相关设置。\n\t\t\t\t\tinterval: 0, //设置为 1，表示『隔一个标签显示一个标签』\n\t\t\t\t\tmargin: 15,\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisTick: { //坐标轴刻度相关设置。\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t\taxisLine: { //坐标轴轴线相关设置\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\t// opacity: 0.2\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsplitLine: { //坐标轴在 grid 区域中的分隔线。\n\t\t\t\t\tshow: false,\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxis: [{\n\t\t\t\ttype: 'value',\n\t\t\t\tsplitNumber: 5,\n\t\t\t\taxisLabel: {\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisLine: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\taxisTick: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tsplitLine: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\tcolor: ['#000000'],\n\t\t\t\t\t\t// opacity: 0.06\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}],\n\t\t\tseries: [{\n\t\t\t\tname: '北京',\n\t\t\t\ttype: 'bar',\r\n\t\t\t\t// ArcGIS Office Java JavaScript C# C++ C IOS Android 数据库 PHP Python\n\t\t\t\tdata: [86, 19, 102, 55, 23, 64, 20, 10, 15, 94, 1, 28],\n\t\t\t\tbarWidth: 10,\n\t\t\t\tbarGap: 0, //柱间距离\n\t\t\t\tlabel: { //图形上的文本标签\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\titemStyle: { //图形样式\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tbarBorderRadius: [5, 5, 0, 0],\n\t\t\t\t\t\tcolor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\tcolor: 'rgba(127, 128, 225, 0.7)'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\toffset: 0.9,\n\t\t\t\t\t\t\tcolor: 'rgba(72, 73, 181, 0.7)'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\toffset: 0.31,\n\t\t\t\t\t\t\tcolor: 'rgba(0, 208, 208, 0.7)'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\toffset: 0.15,\n\t\t\t\t\t\t\tcolor: 'rgba(0, 208, 208, 0.7)'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\tcolor: 'rgba(104, 253, 255, 0.7)'\n\t\t\t\t\t\t}], false),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: '上海',\n\t\t\t\t\ttype: 'bar',\r\n\t\t\t\t\t// ArcGIS Office Java JavaScript C# C++ C IOS Android 数据库 PHP Python\n\t\t\t\t\tdata: [48, 3, 77, 40, 23, 24, 5, 4, 2, 73, 5, 11],\n\t\t\t\t\tbarWidth: 10,\n\t\t\t\t\tbarGap: 0.2, //柱间距离\n\t\t\t\t\tlabel: { //图形上的文本标签\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\t\tposition: 'top',\n\t\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\t\tcolor: '#000000',\n\t\t\t\t\t\t\t\tfontStyle: 'normal',\n\t\t\t\t\t\t\t\tfontFamily: '微软雅黑',\n\t\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\titemStyle: { //图形样式\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tbarBorderRadius: [5, 5, 0, 0],\n\t\t\t\t\t\t\tcolor: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n\t\t\t\t\t\t\t\toffset: 1,\n\t\t\t\t\t\t\t\tcolor: 'rgba(127, 128, 225, 0.7)'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\toffset: 0.9,\n\t\t\t\t\t\t\t\tcolor: 'rgba(72, 73, 181, 0.7)'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\toffset: 0.25,\n\t\t\t\t\t\t\t\tcolor: 'rgba(226, 99, 74, 0.7)'\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\tcolor: 'rgba(253, 200, 106, 0.7)'\n\t\t\t\t\t\t\t}], false),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t}]\n    };\r\n\t  righTop.setOption(option2);\r\n\t\t\r\n\t\t// 职业领域词云\r\n\t\tlet wordCloud = echarts.init(document.getElementById(\"wordCloud\"));\r\n\t\tlet option3 = {\n\t\t\ttitle:{\r\n\t\t\t\ttext: '职业领域词云统计',\r\n\t\t\t\tx: 'center',\r\n\t\t\t\ty: 10,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 23\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbackgroundColor: '#e6e6e6',\r\n\t\t\ttooltip: {\r\n\t\t\t\tshow: true\r\n\t\t\t},\r\n\t\t\tseries: [{\r\n\t\t\t\ttype: \"wordCloud\",\r\n\t\t\t\tgridSize: 6,\r\n\t\t\t\tshape: 'diamond',\r\n\t\t\t\tsizeRange: [17, 40],\r\n\t\t\t\twidth: 800,\r\n\t\t\t\theight: 500,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tnormal: {\r\n\t\t\t\t\t\tcolor: function() {\r\n\t\t\t\t\t\t\treturn 'rgb(' + [\r\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 160),\r\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 160),\r\n\t\t\t\t\t\t\t\tMath.round(Math.random() * 160)\r\n\t\t\t\t\t\t\t].join(',') + ')';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\temphasis: {\r\n\t\t\t\t\t\tshadowBlur: 10,\r\n\t\t\t\t\t\tshadowColor: '#333'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tdata: [{\r\n\t\t\t\t\tname: \" 餐饮业\",\r\n\t\t\t\t\tvalue: 5,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 电气/电力/水利\",\r\n\t\t\t\t\tvalue: 296\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 电子技术/半导体/集成电路\",\r\n\t\t\t\t\tvalue: 240\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 多元化业务\",\r\n\t\t\t\t\tvalue: 109\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 房地产\",\r\n\t\t\t\t\tvalue: 111\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 广告\",\r\n\t\t\t\t\tvalue: 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 航天/航空\",\r\n\t\t\t\t\tvalue: 89\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 互联网\",\r\n\t\t\t\t\tvalue: 469\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 环保\",\r\n\t\t\t\t\tvalue: 180\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 机械/设备/重工\",\r\n\t\t\t\t\tvalue: 76\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 会计/审计\",\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 计算机服务\",\r\n\t\t\t\t\tvalue: 912\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 建筑/建材/工程\",\r\n\t\t\t\t\tvalue: 723\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 交通/运输/物流\",\r\n\t\t\t\t\tvalue: 35\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 计算机软件\",\r\n\t\t\t\t\tvalue: 2615\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 教育\",\r\n\t\t\t\t\tvalue: 54\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 金融\",\r\n\t\t\t\t\tvalue: 5\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 酒店/旅游\",\r\n\t\t\t\t\tvalue: 12\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 农林牧渔\",\r\n\t\t\t\t\tvalue: 76\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 贸易/进出口\",\r\n\t\t\t\t\tvalue: 10\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 通信/电信\",\r\n\t\t\t\t\tvalue: 208\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 学术/科研\",\r\n\t\t\t\t\tvalue: 109\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 批发/零售\",\r\n\t\t\t\t\tvalue: 14\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 新能源\",\r\n\t\t\t\t\tvalue: 23\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 汽车\",\r\n\t\t\t\t\tvalue: 13\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 专业服务\",\r\n\t\t\t\t\tvalue: 159\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 中介服务\",\r\n\t\t\t\t\tvalue: 11\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 政府/公共事业\",\r\n\t\t\t\t\tvalue: 202\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 影视艺术\",\r\n\t\t\t\t\tvalue: 16\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 仪器仪表/自动化\",\r\n\t\t\t\t\tvalue: 175\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \" 医疗\",\r\n\t\t\t\t\tvalue: 3\r\n\t\t\t\t}],\r\n\t\t\t}]\n\t\t};\r\n\t\twordCloud.setOption(option3);\r\n\t},\r\n\tcomponents:{}\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" >\r\n\t#map{\r\n\t\tfloat: left;\r\n\t\theight: 100%;\r\n\t\twidth: 60%;\r\n\t\t// background: #aaff00;\r\n\t}\r\n\t#chart{\r\n\t\tfloat: left;\r\n\t\twidth: 40%;\r\n\t\theight: 100%;\r\n\t\t// background: red;\r\n\t}\r\n\t#rightop{\r\n\t\twidth: 100%;\r\n\t\theight: 50%;\r\n\t\t// background: #55ff7f;\r\n\t}\r\n\t#wordCloud{\r\n\t\twidth: 100%;\r\n\t\theight: 50%;\r\n\t\t// background: #bfa;\r\n\t\t// background-image: url(../img/词云.png);\r\n\t}\r\n</style>\r\n"],"sourceRoot":"src\\views\\recommendation\\components"}]}