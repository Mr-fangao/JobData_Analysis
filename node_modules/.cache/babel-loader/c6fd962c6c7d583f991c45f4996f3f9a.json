{"remainingRequest":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\src\\map\\api\\js\\convert\\GGeometry2WKT.js","dependencies":[{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\src\\map\\api\\js\\convert\\GGeometry2WKT.js","mtime":1563098587000},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"E:\\\\00 \\u6BD5\\u4E1A\\u8BBA\\u6587\\\\04 \\u7CFB\\u7EDF\\u4EE3\\u7801\\\\C30 \\u5F00\\u53D1\\u6E90\\u4EE3\\u7801\\\\\\u524D\\u7AEF\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"E:\\\\00 \\u6BD5\\u4E1A\\u8BBA\\u6587\\\\04 \\u7CFB\\u7EDF\\u4EE3\\u7801\\\\C30 \\u5F00\\u53D1\\u6E90\\u4EE3\\u7801\\\\\\u524D\\u7AEF\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\n\nvar GGeometryToWKT =\n/*#__PURE__*/\nfunction () {\n  function GGeometryToWKT() {\n    _classCallCheck(this, GGeometryToWKT);\n  }\n\n  _createClass(GGeometryToWKT, [{\n    key: \"ToWKT\",\n    value: function ToWKT(geometry) {\n      if (geometry) {\n        var polyType = geometry.type.toUpperCase();\n\n        if (polyType === \"POLYGON\") {\n          var rings = [].concat(geometry.rings[0]);\n          rings.push(rings[0]);\n          return \"POLYGON ((\" + rings.join(\" \").replace(/\\s+/g, \"&\").replace(/,/g, \" \").replace(/&/g, \",\") + \"))\";\n        } else if (polyType === \"POLYLINE\") {\n          return \"LINESTRING (\" + geometry.paths[0].join(\" \").replace(/\\s+/g, \"&\").replace(/,/g, \" \").replace(/&/g, \",\") + \")\";\n        } else if (polyType === \"POINT\") {\n          return \"POINT (\".concat(geometry.x, \" \").concat(geometry.y, \")\");\n        }\n      } else {\n        return \"\";\n      }\n    }\n  }]);\n\n  return GGeometryToWKT;\n}();\n\nexport { GGeometryToWKT as default };",{"version":3,"sources":["E:\\00 毕业论文\\04 系统代码\\C30 开发源代码\\前端\\jobData_Analysis前端\\src\\map\\api\\js\\convert\\GGeometry2WKT.js"],"names":["GGeometryToWKT","geometry","polyType","type","toUpperCase","rings","concat","push","join","replace","paths","x","y"],"mappings":";;;;IAAqBA,c;;;;;;;;;0BACbC,Q,EAAU;AACd,UAAIA,QAAJ,EAAc;AACZ,YAAIC,WAAWD,SAASE,IAAT,CAAcC,WAAd,EAAf;;AACA,YAAIF,aAAa,SAAjB,EAA4B;AAC1B,cAAIG,QAAQ,GAAGC,MAAH,CAAUL,SAASI,KAAT,CAAe,CAAf,CAAV,CAAZ;AACAA,gBAAME,IAAN,CAAWF,MAAM,CAAN,CAAX;AACA,iBAAO,eAAeA,MAAMG,IAAN,CAAW,GAAX,EAAgBC,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,EAAqCA,OAArC,CAA6C,IAA7C,EAAmD,GAAnD,EAAwDA,OAAxD,CAAgE,IAAhE,EAAsE,GAAtE,CAAf,GAA4F,IAAnG;AACD,SAJD,MAIO,IAAIP,aAAa,UAAjB,EAA6B;AAClC,iBAAO,iBACLD,SAASS,KAAT,CAAe,CAAf,EAAkBF,IAAlB,CAAuB,GAAvB,EAA4BC,OAA5B,CAAoC,MAApC,EAA4C,GAA5C,EAAiDA,OAAjD,CAAyD,IAAzD,EAA+D,GAA/D,EAAoEA,OAApE,CAA4E,IAA5E,EAAkF,GAAlF,CADK,GACoF,GAD3F;AAED,SAHM,MAGA,IAAIP,aAAa,OAAjB,EAA0B;AAC/B,kCAAiBD,SAASU,CAA1B,cAA+BV,SAASW,CAAxC;AACD;AACF,OAZD,MAYO;AACL,eAAO,EAAP;AACD;AACF;;;;;;SAjBkBZ,c","sourcesContent":["export default class GGeometryToWKT {\n  ToWKT(geometry) {\n    if (geometry) {\n      let polyType = geometry.type.toUpperCase();\n      if (polyType === \"POLYGON\") {\n        let rings = [].concat(geometry.rings[0]);\n        rings.push(rings[0]);\n        return \"POLYGON ((\" + rings.join(\" \").replace(/\\s+/g, \"&\").replace(/,/g, \" \").replace(/&/g, \",\") + \"))\";\n      } else if (polyType === \"POLYLINE\") {\n        return \"LINESTRING (\" +\n          geometry.paths[0].join(\" \").replace(/\\s+/g, \"&\").replace(/,/g, \" \").replace(/&/g, \",\") + \")\";\n      } else if (polyType === \"POINT\") {\n        return `POINT (${geometry.x} ${geometry.y})`\n      }\n    } else {\n      return \"\";\n    }\n  }\n}\n"]}]}