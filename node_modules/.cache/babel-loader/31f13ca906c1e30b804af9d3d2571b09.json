{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\core\\utils\\index.js","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\core\\utils\\index.js","mtime":1563098587000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\03 \\u8BA1\\u7B97\\u673A\\u8BBE\\u8BA1\\u5927\\u8D5B(\\u521A\\u5F00\\u59CB)\\\\03 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/typeof\";\nimport { server as _server } from \"./server\";\nimport { screen } from \"./screen\";\nimport { base64 } from \"./base64\";\nimport { browser } from \"./browser\"; //判断是否是空对象\n\nfunction isEmptyObject(e) {\n  var t;\n\n  for (t in e) {\n    return !1;\n  }\n\n  return !0;\n} //兼容多个浏览器的事件绑定\n\n\nfunction bindEvent(node, type, func) {\n  if (node.addEventListener) {\n    node.addEventListener(type, func, false);\n  } else if (node.attachEvent) {\n    node.attachEvent(\"on\" + type, func);\n  } else {\n    node[\"on\" + type] = func;\n  }\n} //通过字符串方式实现对象深拷贝\n\n\nfunction deepCopy(obj) {\n  if (_typeof(obj) === \"object\") {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  return null;\n} //生成自定位数的随机数\n\n\nfunction random() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var rnd = \"\";\n\n  for (var i = 0; i < n; i++) {\n    rnd += Math.floor(Math.random() * 10);\n  }\n\n  return rnd;\n}\n\nexport var utils = {\n  screen: screen,\n  base64: base64,\n  browser: browser,\n  isEmptyObject: isEmptyObject,\n  bindEvent: bindEvent,\n  deepCopy: deepCopy,\n  random: random\n};\nexport var server = _server;",{"version":3,"sources":["C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\core\\utils\\index.js"],"names":["server","_server","screen","base64","browser","isEmptyObject","e","t","bindEvent","node","type","func","addEventListener","attachEvent","deepCopy","obj","JSON","parse","stringify","random","n","rnd","i","Math","floor","utils"],"mappings":";AAAA,SACIA,UAAUC,OADd,QAEO,UAFP;AAGA,SACIC,MADJ,QAEO,UAFP;AAGA,SACIC,MADJ,QAEO,UAFP;AAGA,SACIC,OADJ,QAEO,WAFP,C,CAIA;;AACA,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,MAAIC,CAAJ;;AACA,OAAKA,CAAL,IAAUD,CAAV,EAAa;AACT,WAAO,CAAC,CAAR;AACH;;AACD,SAAO,CAAC,CAAR;AACH,C,CACD;;;AACA,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACjC,MAAIF,KAAKG,gBAAT,EAA2B;AACvBH,SAAKG,gBAAL,CAAsBF,IAAtB,EAA4BC,IAA5B,EAAkC,KAAlC;AACH,GAFD,MAEO,IAAIF,KAAKI,WAAT,EAAsB;AACzBJ,SAAKI,WAAL,CAAiB,OAAOH,IAAxB,EAA8BC,IAA9B;AACH,GAFM,MAEA;AACHF,SAAK,OAAOC,IAAZ,IAAoBC,IAApB;AACH;AACJ,C,CACD;;;AACA,SAASG,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,MAAI,QAAQA,GAAR,MAAiB,QAArB,EAA+B;AAC3B,WAAOC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;;AACD,SAAO,IAAP;AACH,C,CACD;;;AACA,SAASI,MAAT,GAAwB;AAAA,MAARC,CAAQ,uEAAJ,EAAI;AACpB,MAAIC,MAAM,EAAV;;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,GAAvB;AACID,WAAOE,KAAKC,KAAL,CAAWD,KAAKJ,MAAL,KAAgB,EAA3B,CAAP;AADJ;;AAEA,SAAOE,GAAP;AACH;;AAGD,OAAO,IAAMI,QAAQ;AACjBvB,UAAQA,MADS;AAEjBC,UAAQA,MAFS;AAGjBC,WAASA,OAHQ;AAIjBC,iBAAeA,aAJE;AAKjBG,aAAWA,SALM;AAMjBM,YAAUA,QANO;AAOjBK,UAAQA;AAPS,CAAd;AASP,OAAO,IAAMnB,SAASC,OAAf","sourcesContent":["import {\n    server as _server\n} from \"./server\"\nimport {\n    screen\n} from \"./screen\";\nimport {\n    base64\n} from \"./base64\"\nimport {\n    browser\n} from \"./browser\"\n\n//判断是否是空对象\nfunction isEmptyObject(e) {\n    var t;\n    for (t in e) {\n        return !1;\n    }\n    return !0;\n}\n//兼容多个浏览器的事件绑定\nfunction bindEvent(node, type, func) {\n    if (node.addEventListener) {\n        node.addEventListener(type, func, false);\n    } else if (node.attachEvent) {\n        node.attachEvent(\"on\" + type, func);\n    } else {\n        node[\"on\" + type] = func;\n    }\n}\n//通过字符串方式实现对象深拷贝\nfunction deepCopy(obj) {\n    if (typeof (obj) === \"object\") {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    return null;\n}\n//生成自定位数的随机数\nfunction random(n = 10) {\n    var rnd = \"\";\n    for (var i = 0; i < n; i++)\n        rnd += Math.floor(Math.random() * 10);\n    return rnd;\n}\n\n\nexport const utils = {\n    screen: screen,\n    base64: base64,\n    browser: browser,\n    isEmptyObject: isEmptyObject,\n    bindEvent: bindEvent,\n    deepCopy: deepCopy,\n    random: random\n};\nexport const server = _server;"]}]}