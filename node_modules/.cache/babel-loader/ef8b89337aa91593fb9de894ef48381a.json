{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\views\\map\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\views\\map\\index.vue","mtime":1583567173004},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\03 \\u8BA1\\u7B97\\u673A\\u8BBE\\u8BA1\\u5927\\u8D5B(\\u521A\\u5F00\\u59CB)\\\\03 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SiderMenu from \"@/views/main/siderMenu\";\nimport axios from \"axios\";\nimport esriLoader from \"esri-loader\";\nimport { MapAPI } from \"@/core/config/const\";\nexport default {\n  data: function data() {\n    return {\n      mapTileLayerLayers: \"\",\n      TileLayerStreets: \"\",\n      MapImageLayer: \"\",\n      IsMapToolsView: true,\n      toolsUrl: \"static/map/tools.json\",\n      mapView: null\n    };\n  },\n  mounted: function mounted() {\n    this.addLayer();\n  },\n  methods: {\n    getGoodsList: function getGoodsList() {\n      axios.get(\"/static/layer.json\").then(function (res) {\n        var result = res.data;\n      });\n    },\n    addLayer: function addLayer() {\n      esriLoader.loadScript({\n        url: MapAPI.js,\n        css: MapAPI.css\n      }).then(function (r) {\n        esriLoader.loadModules([\"esri/config\", \"esri/Map\", \"esri/Basemap\", \"esri/views/MapView\", \"esri/views/SceneView\", \"esri/layers/TileLayer\", \"esri/layers/FeatureLayer\", \"esri/layers/MapImageLayer\", \"dojo/dom\", \"dojo/on\", \"dojo/domReady!\"]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 10),\n              esriConfig = _ref2[0],\n              Map = _ref2[1],\n              Basemap = _ref2[2],\n              MapView = _ref2[3],\n              SceneView = _ref2[4],\n              TileLayer = _ref2[5],\n              FeatureLayer = _ref2[6],\n              MapImageLayer = _ref2[7],\n              dom = _ref2[8],\n              on = _ref2[9];\n\n          var street = new TileLayer({\n            url: \"http://services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer\"\n          });\n          var housingLayer = new TileLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\",\n            id: \"ny-housing\",\n            opacity: 0.9\n          });\n          var renderer = {\n            type: \"simple\",\n            // autocasts as new SimpleRenderer()\n            symbol: {\n              type: \"polygon-3d\",\n              // autocasts as new PolygonSymbol3D()\n              symbolLayers: [{\n                type: \"extrude\",\n                // autocasts as new ExtrudeSymbol3DLayer()\n                material: {\n                  color: [203, 177, 152]\n                }\n              }]\n            },\n            visualVariables: [{\n              type: \"size\",\n              field: \"Floor\"\n            }]\n          };\n          var buildingLayer = new FeatureLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/jinzhu2/MapServer/0\",\n            opacity: 0.9,\n            renderer: renderer,\n            outFields: [\"Floor\"],\n            popupTemplate: {\n              title: \"{Floor}\",\n              content: \"地块编号:{Floor}<br/>地上层数:{Floor}\",\n              // autocasts as new PopupTemplate()\n              fieldInfos: [{\n                fieldName: \"Floor\",\n                format: {\n                  digitSeparator: true,\n                  places: 0\n                }\n              }]\n            }\n          });\n          var baseMap = new Basemap({\n            baseLayers: [street, housingLayer]\n          });\n          var layer = new TileLayer({\n            url: \"http://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer\"\n          }); // var layer = new MapImageLayer({\n          //   url:\n          //     \"https://192.168.122.13:6443/arcgis/rest/services/WGS84/sx/MapServer\"\n          // });\n\n          var map = new Map({\n            basemap: baseMap,\n            layers: [buildingLayer, layer]\n          });\n          var view = new SceneView({\n            container: \"viewDiv\",\n            map: map\n          });\n          view.on(\"layerview-create\", function (event) {\n            if (event.layer.id === \"ny-housing\") {\n              // Explore the properties of the population layer's layer view here\n              console.log(\"LayerView for male population created!\", event.layerView);\n            }\n\n            if (event.layer.id === \"streets\") {\n              // Explore the properties of the transportation layer's layer view here\n              // Explore the properties of the transportation layer's layer view here\n              console.log(\"LayerView for streets created!\", event.layerView);\n            }\n          });\n          view.when(function () {\n            housingLayer.when(function () {\n              view.goTo(housingLayer.fullExtent);\n            });\n          });\n          var streetsLayerToggle = dom.byId(\"streetsLayer\");\n        });\n      });\n    },\n    go2D: function go2D() {\n      this.$router.push(\"/locationResources\");\n    }\n  },\n  components: {\n    SiderMenu: SiderMenu\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <layout>\r\n    <Sider ref=\"side1\" :width='180'>\r\n      <sider-menu/>\r\n    </Sider>\r\n    <Content>\r\n      <Header :style=\"{padding: 0}\" class=\"layout-header-bar\">\r\n        <Breadcrumb>\r\n          <Icon :class=\"rotateIcon\" :style=\"{margin: '0 5px'}\" type=\"md-menu\" size=\"25\"></Icon>\r\n          <BreadcrumbItem v-for=\"(item,idx) in $route.matched\" :key=\"idx\" :to=\"(item.path)\">{{item.name}}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </Header>\r\n      <div class=\"animated fadeIn\">\r\n        <div id=\"viewDiv\">\r\n        </div>\r\n        <div class=\"threeMap\">\r\n          <Button @click=\"go2D\" icon=\"android-globe\">二维地图</Button>\r\n        </div>\r\n      </div>\r\n    </Content>\r\n  </layout>\r\n\r\n</template>\r\n<script>\r\nimport SiderMenu from \"@/views/main/siderMenu\";\r\nimport axios from \"axios\";\r\nimport esriLoader from \"esri-loader\";\r\nimport { MapAPI } from \"@/core/config/const\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      mapTileLayerLayers: \"\",\r\n      TileLayerStreets: \"\",\r\n      MapImageLayer: \"\",\r\n      IsMapToolsView: true,\r\n      toolsUrl: \"static/map/tools.json\",\r\n      mapView: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.addLayer();\r\n  },\r\n  methods: {\r\n    getGoodsList() {\r\n      axios.get(\"/static/layer.json\").then(res => {\r\n        var result = res.data;\r\n      });\r\n    },\r\n    addLayer() {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/config\",\r\n              \"esri/Map\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/views/SceneView\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"dojo/dom\",\r\n              \"dojo/on\",\r\n              \"dojo/domReady!\"\r\n            ])\r\n            .then(\r\n              ([\r\n                esriConfig,\r\n                Map,\r\n                Basemap,\r\n                MapView,\r\n                SceneView,\r\n                TileLayer,\r\n                FeatureLayer,\r\n                MapImageLayer,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                var street = new TileLayer({\r\n                  url:\r\n                    \"http://services.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer\"\r\n                });\r\n                var housingLayer = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\",\r\n                  id: \"ny-housing\",\r\n                  opacity: 0.9\r\n                });\r\n                var renderer = {\r\n                  type: \"simple\", // autocasts as new SimpleRenderer()\r\n                  symbol: {\r\n                    type: \"polygon-3d\", // autocasts as new PolygonSymbol3D()\r\n                    symbolLayers: [\r\n                      {\r\n                        type: \"extrude\", // autocasts as new ExtrudeSymbol3DLayer()\r\n                        material: { color: [203, 177, 152] }\r\n                      }\r\n                    ]\r\n                  },\r\n                  visualVariables: [\r\n                    {\r\n                      type: \"size\",\r\n                      field: \"Floor\"\r\n                    }\r\n                  ]\r\n                };\r\n\r\n                var buildingLayer = new FeatureLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/jinzhu2/MapServer/0\",\r\n                  opacity: 0.9,\r\n                  renderer: renderer,\r\n                  outFields: [\"Floor\"],\r\n                  popupTemplate: {\r\n                    title: \"{Floor}\",\r\n                    content: \"地块编号:{Floor}<br/>地上层数:{Floor}\", // autocasts as new PopupTemplate()\r\n                    fieldInfos: [\r\n                      {\r\n                        fieldName: \"Floor\",\r\n                        format: {\r\n                          digitSeparator: true,\r\n                          places: 0\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                });\r\n\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [street, housingLayer]\r\n                });\r\n                var layer = new TileLayer({\r\n                  url:\r\n                    \"http://server.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer\"\r\n                });\r\n                // var layer = new MapImageLayer({\r\n                //   url:\r\n                //     \"https://192.168.122.13:6443/arcgis/rest/services/WGS84/sx/MapServer\"\r\n                // });\r\n\r\n                var map = new Map({\r\n                  basemap: baseMap,\r\n                  layers: [buildingLayer, layer]\r\n                });\r\n\r\n                var view = new SceneView({\r\n                  container: \"viewDiv\",\r\n                  map: map\r\n                });\r\n\r\n                view.on(\"layerview-create\", function(event) {\r\n                  if (event.layer.id === \"ny-housing\") {\r\n                    // Explore the properties of the population layer's layer view here\r\n                    console.log(\r\n                      \"LayerView for male population created!\",\r\n                      event.layerView\r\n                    );\r\n                  }\r\n                  if (event.layer.id === \"streets\") {\r\n                    // Explore the properties of the transportation layer's layer view here\r\n                    // Explore the properties of the transportation layer's layer view here\r\n                    console.log(\r\n                      \"LayerView for streets created!\",\r\n                      event.layerView\r\n                    );\r\n                  }\r\n                });\r\n\r\n                view.when(function() {\r\n                  housingLayer.when(function() {\r\n                    view.goTo(housingLayer.fullExtent);\r\n                  });\r\n                });\r\n\r\n                var streetsLayerToggle = dom.byId(\"streetsLayer\");\r\n              }\r\n            );\r\n        });\r\n    },\r\n    go2D() {\r\n      this.$router.push(\"/locationResources\");\r\n    }\r\n  },\r\n  components: {\r\n    SiderMenu\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.threeMap {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 104px;\r\n}\r\n.left {\r\n  width: 410px;\r\n  height: 150px;\r\n}\r\n.layout-header-bar {\r\n  background: #fff;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\r\n}\r\n.ivu-layout-sider {\r\n  height: 1000px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\views\\map"}]}