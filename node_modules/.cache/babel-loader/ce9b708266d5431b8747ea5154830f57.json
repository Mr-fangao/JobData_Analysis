{"remainingRequest":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\src\\core\\utils\\server.js","dependencies":[{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\src\\core\\utils\\server.js","mtime":1591028579602},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"E:\\\\\\u7F51\\u7EDC\\u62DB\\u8058\\u5927\\u6570\\u636E\\u5206\\u6790\\u4E0E\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"E:\\\\\\u7F51\\u7EDC\\u62DB\\u8058\\u5927\\u6570\\u636E\\u5206\\u6790\\u4E0E\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n/* eslint-disable */\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n\n    axios.interceptors.request.use(function (config) {\n      return config;\n    }, function (error) {\n      return Promise.reject(error.request);\n    });\n    axios.interceptors.response.use(function (config) {\n      return config;\n    }, function (error) {\n      return Promise.reject(error.response);\n    });\n  }\n\n  _createClass(Server, [{\n    key: \"get\",\n    value: function get(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n          opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n        }\n\n        axios.defaults.timeout = opt.timeout || 20000; //5s超时\n\n        axios.get(encodeURI(opt.url), {\n          params: opt.params || {}\n        }).then(function (rsp) {\n          if (typeof rsp.data === \"string\") {\n            resolve(rsp.data);\n          } else {\n            rsp.data.netStatus = rsp.status;\n            resolve(rsp.data);\n          }\n        }).catch(function (err) {\n          if (typeof err === \"undefined\") {\n            err = {\n              netStatus: 500\n            };\n          }\n\n          reject({\n            netStatus: err.netStatus,\n            status: 0,\n            message: \"\".concat(err.netStatus, \"-\\u670D\\u52A1\\u5F02\\u5E38\")\n          });\n        });\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n          opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n        }\n\n        axios.defaults.timeout = opt.timeout || 20000; //5s超时\n\n        axios.post(encodeURI(opt.url), qs.stringify(opt.params || {})).then(function (rsp) {\n          rsp.data.netStatus = rsp.status;\n          resolve(rsp.data);\n        }).catch(function (err) {\n          if (typeof err === \"undefined\") {\n            err = {\n              netStatus: 500\n            };\n          }\n\n          reject({\n            netStatus: err.netStatus,\n            status: 0,\n            message: \"\".concat(err.netStatus, \"-\\u670D\\u52A1\\u5F02\\u5E38\")\n          });\n        });\n      });\n    }\n  }]);\n\n  return Server;\n}();\n\nexport var server = new Server();",{"version":3,"sources":["E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\src\\core\\utils\\server.js"],"names":["axios","qs","Server","interceptors","request","use","config","Promise","reject","error","response","opt","resolve","url","toLowerCase","indexOf","replace","onemap","CONST","IP","defaults","timeout","get","encodeURI","params","then","rsp","data","netStatus","status","catch","err","message","post","stringify","server"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n/* eslint-disable */\n\nclass Server {\n\tconstructor() {\n\t\taxios.interceptors.request.use(config => {\n\t\t\treturn config;\n\t\t}, error => {\n\t\t\treturn Promise.reject(error.request);\n\t\t});\n\n\t\taxios.interceptors.response.use(config => {\n\t\t\treturn config;\n\t\t}, error => {\n\t\t\treturn Promise.reject(error.response);\n\t\t});\n\t}\n\n\tget(opt) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n\t\t\t\topt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n\t\t\t}\n\t\t\taxios.defaults.timeout = opt.timeout || 20000; //5s超时\n\t\t\taxios.get(encodeURI(opt.url), {\n\t\t\t\tparams: opt.params || {}\n\t\t\t})\n\t\t\t.then(function (rsp) {\n\t\t\t\t\tif (typeof (rsp.data) === \"string\") {\n\t\t\t\t\t\t\tresolve(rsp.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\trsp.data.netStatus = rsp.status;\n\t\t\t\t\t\t\tresolve(rsp.data);\n\t\t\t\t\t}\n\t\t\t}).catch(err => {\n\t\t\t\tif (typeof err === \"undefined\") {\n\t\t\t\t\terr = {\n\t\t\t\t\t\tnetStatus: 500\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treject({\n\t\t\t\t\tnetStatus: err.netStatus,\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tmessage: `${err.netStatus}-服务异常`\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tpost(opt) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n\t\t\t\topt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n\t\t\t}\n\t\t\taxios.defaults.timeout = opt.timeout || 20000; //5s超时\n\t\t\taxios.post(encodeURI(opt.url), qs.stringify(opt.params || {}))\n\t\t\t.then(function (rsp) {\n\t\t\t\trsp.data.netStatus = rsp.status;\n\t\t\t\tresolve(rsp.data);\n\t\t\t}).catch(err => {\n\t\t\t\tif (typeof err === \"undefined\") {\n\t\t\t\t\terr = {\n\t\t\t\t\t\tnetStatus: 500,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treject({\n\t\t\t\t\tnetStatus: err.netStatus,\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tmessage: `${err.netStatus}-服务异常`\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n}\nexport const server = new Server();"]}]}