{"remainingRequest":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\src\\views\\test\\buffer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\src\\views\\test\\buffer.vue","mtime":1583567173006},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"E:\\\\04 GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\05 \\u201C\\u521B\\u9752\\u6625\\u201D\\u6BD4\\u8D5B(\\u7701\\u8D5B\\u9636\\u6BB5)\\\\07 \\u7CFB\\u7EDF\\u4EE3\\u7801\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"E:\\\\04 GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\05 \\u201C\\u521B\\u9752\\u6625\\u201D\\u6BD4\\u8D5B(\\u7701\\u8D5B\\u9636\\u6BB5)\\\\07 \\u7CFB\\u7EDF\\u4EE3\\u7801\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\n//\n//\n//\n//\nimport axios from \"axios\";\nimport esriLoader from \"esri-loader\";\nimport { MapAPI } from \"@/core/config/const\";\nimport { constants } from \"fs\";\nexport default _defineProperty({\n  data: function data() {\n    return {\n      mapTileLayerLayers: \"\",\n      TileLayerStreets: \"\",\n      MapImageLayer: \"\",\n      view: null,\n      IsMapToolsView: false,\n      from: \"\",\n      Mymap: \"\",\n      mapViewL: null,\n      mapViewR: null,\n      left: \"-100px\",\n      top: \"-100px\",\n      width: 0,\n      feature: \"\",\n      results: \"\"\n    };\n  },\n  mounted: function mounted() {\n    this.addLayerL();\n  },\n  methods: {\n    addLayerL: function addLayerL() {\n      var _this2 = this;\n\n      esriLoader.loadScript({\n        url: MapAPI.js,\n        css: MapAPI.css\n      }).then(function (r) {\n        esriLoader.loadModules([\"esri/Map\", \"esri/Basemap\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/TileLayer\", \"esri/tasks/support/LinearUnit\", \"esri/layers/FeatureLayer\", \"esri/tasks/QueryTask\", \"esri/tasks/support/Query\", \"esri/tasks/Geoprocessor\", \"esri/tasks/support/FeatureSet\"]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 12),\n              Map = _ref2[0],\n              Basemap = _ref2[1],\n              MapView = _ref2[2],\n              MapImageLayer = _ref2[3],\n              TileLayer = _ref2[4],\n              LinearUnit = _ref2[5],\n              FeatureLayer = _ref2[6],\n              QueryTask = _ref2[7],\n              Query = _ref2[8],\n              Geoprocessor = _ref2[9],\n              dom = _ref2[10],\n              on = _ref2[11];\n\n          var activeWidget = null; // var street = new MapImageLayer({\n          //   url:\n          //     \"http://122.112.216.247:6080/arcgis/rest/services/Server/MAP/MapServer\"\n          // });\n\n          var street = new TileLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\n          });\n          var dis = new LinearUnit({\n            distance: 1000,\n            units: \"esriMeters\"\n          });\n          _this2.distance = dis;\n          var baseMap = new Basemap({\n            baseLayers: [street]\n          });\n          var map = new Map({\n            basemap: baseMap // layers: [layer]\n\n          });\n          _this2.myMap = map;\n          _this2.mapViewL = new MapView({\n            container: \"viewDiv\",\n            map: map\n          });\n          var gwrPOint = \"http://122.112.216.247:6080/arcgis/rest/services/Servers/gwrfeature/MapServer/0\";\n          var queryTask = new QueryTask({\n            url: gwrPOint\n          });\n          var query = new Query();\n          query.returnGeometry = true;\n          query.outFields = [\"*\"];\n          query.where = \"PRICE>='3946'\"; // queryTask.execute(query, this.doGP);\n          // queryTask.execute(query).then(function(results) {\n          //   this.doGP(results);\n          // });\n\n          queryTask.execute(query).then(_this2.doGP);\n        });\n      });\n    },\n    doGP: function doGP(featureSet) {\n      var _this3 = this;\n\n      var gpUrl = \"http://122.112.216.247:6080/arcgis/rest/services/Servers/buffer/GPServer/buffer\";\n      mapApi.esriApi.GetGeoprocessor().then(function (Geoprocessor) {\n        var _this = _this3;\n        var Kriging_GP = new Geoprocessor(gpUrl);\n        var parms = {\n          SDE_DJGWR: featureSet,\n          Distance__value_or_field_: _this3.distance\n        };\n        Kriging_GP.submitJob(parms).then(function (jobinfo) {\n          if (jobinfo.jobStatus == \"job-succeeded\") {\n            Kriging_GP.getResultData(jobinfo.jobId, \"Output_Feature_Class\").then(function (results) {\n              console.log(\"projected points: \", results.value);\n              var GwrPoint = results.value.features;\n              var polygonSymbol = {\n                type: \"simple-fill\",\n                // autocasts as new SimpleFillSymbol()\n                color: [51, 51, 204, 0.9],\n                style: \"solid\",\n                outline: {\n                  // autocasts as new SimpleLineSymbol()\n                  color: \"blue\",\n                  width: 1\n                }\n              };\n              GwrPoint.forEach(function (GwrPoint, index) {\n                mapApi.esriApi.GetGraphic().then(function (Graphic) {\n                  var graphics = [];\n                  var graphic = new Graphic({\n                    geometry: GwrPoint.geometry,\n                    symbol: polygonSymbol\n                  });\n                  graphics.push(graphic);\n                  console.log(graphics);\n\n                  _this.mapViewL.graphics.addMany(graphics);\n                });\n              });\n              console.log(GwrPoints);\n            });\n          }\n        });\n      }); //   Kriging_GP.submitJob(params).then(this.gpJobComplete);\n    },\n    // gpJobComplete(jobinfo) {\n    //   console.log(jobinfo);\n    //   debugger;\n    //   if (jobinfo.jobStatus == \"job-succeeded\") {\n    //     Kriging_GP.getResultData(\n    //       jobinfo.jobId,\n    //       \"GeographicallyWeightedRegression10\",\n    //       result\n    //     );\n    //   }\n    // },\n    addResult: function addResult(results) {\n      console.log(results);\n    }\n  }\n}, \"data\", function data() {\n  return {\n    social: []\n  };\n});",{"version":3,"sources":["buffer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"viewDiv\">\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\nimport esriLoader from \"esri-loader\";\r\nimport { MapAPI } from \"@/core/config/const\";\r\nimport { constants } from \"fs\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mapTileLayerLayers: \"\",\r\n      TileLayerStreets: \"\",\r\n      MapImageLayer: \"\",\r\n      view: null,\r\n      IsMapToolsView: false,\r\n      from: \"\",\r\n      Mymap: \"\",\r\n      mapViewL: null,\r\n      mapViewR: null,\r\n      left: \"-100px\",\r\n      top: \"-100px\",\r\n      width: 0,\r\n      feature: \"\",\r\n      results: \"\"\r\n    };\r\n  },\r\n  mounted() {\r\n    this.addLayerL();\r\n  },\r\n  methods: {\r\n    addLayerL() {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/Map\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/tasks/support/LinearUnit\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/tasks/QueryTask\",\r\n              \"esri/tasks/support/Query\",\r\n              \"esri/tasks/Geoprocessor\",\r\n              \"esri/tasks/support/FeatureSet\"\r\n            ])\r\n            .then(\r\n              ([\r\n                Map,\r\n                Basemap,\r\n                MapView,\r\n                MapImageLayer,\r\n                TileLayer,\r\n                LinearUnit,\r\n                FeatureLayer,\r\n                QueryTask,\r\n                Query,\r\n                Geoprocessor,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                var activeWidget = null;\r\n\r\n                // var street = new MapImageLayer({\r\n                //   url:\r\n                //     \"http://122.112.216.247:6080/arcgis/rest/services/Server/MAP/MapServer\"\r\n                // });\r\n                var street = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\r\n                });\r\n                var dis = new LinearUnit({\r\n                  distance: 1000,\r\n                  units: \"esriMeters\"\r\n                });\r\n                this.distance = dis;\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [street]\r\n                });\r\n                var map = new Map({\r\n                  basemap: baseMap\r\n                  // layers: [layer]\r\n                });\r\n                this.myMap = map;\r\n\r\n                this.mapViewL = new MapView({\r\n                  container: \"viewDiv\",\r\n                  map: map\r\n                });\r\n                var gwrPOint =\r\n                  \"http://122.112.216.247:6080/arcgis/rest/services/Servers/gwrfeature/MapServer/0\";\r\n\r\n                var queryTask = new QueryTask({\r\n                  url: gwrPOint\r\n                });\r\n                var query = new Query();\r\n                query.returnGeometry = true;\r\n                query.outFields = [\"*\"];\r\n                query.where = \"PRICE>='3946'\";\r\n                // queryTask.execute(query, this.doGP);\r\n                // queryTask.execute(query).then(function(results) {\r\n                //   this.doGP(results);\r\n                // });\r\n\r\n                queryTask.execute(query).then(this.doGP);\r\n              }\r\n            );\r\n        });\r\n    },\r\n    doGP(featureSet) {\r\n      var gpUrl =\r\n        \"http://122.112.216.247:6080/arcgis/rest/services/Servers/buffer/GPServer/buffer\";\r\n      mapApi.esriApi.GetGeoprocessor().then(Geoprocessor => {\r\n        var _this = this;\r\n        var Kriging_GP = new Geoprocessor(gpUrl);\r\n        var parms = {\r\n          SDE_DJGWR: featureSet,\r\n          Distance__value_or_field_: this.distance\r\n        };\r\n        Kriging_GP.submitJob(parms).then(jobinfo => {\r\n          if (jobinfo.jobStatus == \"job-succeeded\") {\r\n            Kriging_GP.getResultData(\r\n              jobinfo.jobId,\r\n              \"Output_Feature_Class\"\r\n            ).then(function(results) {\r\n              console.log(\"projected points: \", results.value);\r\n              var GwrPoint = results.value.features;\r\n              var polygonSymbol = {\r\n                type: \"simple-fill\", // autocasts as new SimpleFillSymbol()\r\n                color: [51, 51, 204, 0.9],\r\n                style: \"solid\",\r\n                outline: {\r\n                  // autocasts as new SimpleLineSymbol()\r\n                  color: \"blue\",\r\n                  width: 1\r\n                }\r\n              };\r\n              GwrPoint.forEach((GwrPoint, index) => {\r\n                mapApi.esriApi.GetGraphic().then(Graphic => {\r\n                  let graphics = [];\r\n                  let graphic = new Graphic({\r\n                    geometry: GwrPoint.geometry,\r\n                    symbol: polygonSymbol\r\n                  });\r\n                  graphics.push(graphic);\r\n                  console.log(graphics);\r\n                  _this.mapViewL.graphics.addMany(graphics);\r\n                });\r\n              });\r\n\r\n              console.log(GwrPoints);\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      //   Kriging_GP.submitJob(params).then(this.gpJobComplete);\r\n    },\r\n    // gpJobComplete(jobinfo) {\r\n    //   console.log(jobinfo);\r\n    //   debugger;\r\n    //   if (jobinfo.jobStatus == \"job-succeeded\") {\r\n    //     Kriging_GP.getResultData(\r\n    //       jobinfo.jobId,\r\n    //       \"GeographicallyWeightedRegression10\",\r\n    //       result\r\n    //     );\r\n    //   }\r\n    // },\r\n    addResult(results) {\r\n      console.log(results);\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      social: []\r\n    };\r\n  }\r\n};\r\n</script>\r\n<style>\r\n#viewDiv {\r\n  padding: 0;\r\n  margin: 0;\r\n  height: 800px;\r\n  width: 100%;\r\n}\r\n</style>\r\n\r\n"],"sourceRoot":"src\\views\\test"}]}