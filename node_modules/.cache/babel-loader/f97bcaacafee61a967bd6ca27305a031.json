{"remainingRequest":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\src\\map\\api\\4+\\GMapTools.js","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\src\\map\\api\\4+\\GMapTools.js","mtime":1563098587000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633397196896},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\JobData_Analysis\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\JobData_Analysis\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\JobData_Analysis\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport esriLoader from \"esri-loader\";\nimport GMeasureArea from \"./api/GMeasureArea\";\nimport GMeasureLength from \"./api/GMeasureLength\"; // import GIQuery from \"../js/GIQuery\";\n// import GClip from \"@api/api/GClip\";\n// import GMarkerClusterLayer from \"./api/GMarkerClusterLayer\";\n// import GCanvasLayer from \"./api/GCanvasLayer\";\n// import Server from \"@/core/server\";\n// import {\n//   services\n// } from \"@/core/services\";\n\nvar GMapTools =\n/*#__PURE__*/\nfunction () {\n  function GMapTools(opt) {\n    var _this = this;\n\n    _classCallCheck(this, GMapTools);\n\n    this.mapView = opt.mapView || null;\n    esriLoader.loadModules([\"esri/widgets/Zoom\"]).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          Zoom = _ref2[0];\n\n      _this.zoom = new Zoom({\n        view: _this.mapView\n      });\n    }); // this.gIQuery = new GIQuery({\n    //   mapView: this.mapView\n    // });\n    // this.GClip = new GClip();\n    // window.geone.pubsub.subscribe(\"clear\", e => {\n    //   this.mapView.isEdit = false;\n    //   this.mapView.popup.close();\n    //   this.mapView.graphics.removeAll();\n    //   if (parent.geone) {\n    //     parent.geone._data = null;\n    //     parent.geone._geometry = null;\n    //   }\n    // });\n  }\n\n  _createClass(GMapTools, [{\n    key: \"mapScreen\",\n    value: function mapScreen() {\n      var initExtent = this.mapView.initExtent;\n      var initialExtent = this.mapView.initialExtent;\n      this.mapView.goTo({\n        target: initialExtent.center,\n        zoom: initExtent.zoom\n      });\n    }\n  }, {\n    key: \"fullScreen\",\n    value: function fullScreen() {\n      if (parent.window) {\n        onemap.utils.screen.toggle(\"app-body\");\n      } else {\n        onemap.utils.screen.toggle(\"app-body\");\n      }\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      var maxZoom = this.mapView.constraints.effectiveMaxZoom;\n      var zoom = this.mapView.zoom;\n\n      if (zoom < maxZoom) {\n        this.zoom.zoomIn();\n      }\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      var minZoom = this.mapView.constraints.effectiveMinZoom;\n      var zoom = this.mapView.zoom;\n\n      if (zoom > minZoom) {\n        this.zoom.zoomOut();\n      }\n    }\n  }, {\n    key: \"measureArea\",\n    value: function measureArea() {\n      // window.geone.pubsub.publish(\"clear\");\n      new GMeasureArea({\n        mapView: this.mapView\n      }).then(function (gMeasureArea) {\n        gMeasureArea.start();\n      });\n    }\n  }, {\n    key: \"measureLength\",\n    value: function measureLength() {\n      // window.geone.pubsub.publish(\"clear\");\n      new GMeasureLength({\n        mapView: this.mapView\n      }).then(function (gMeasureLength) {\n        gMeasureLength.start();\n      });\n    } // iQueryTool() {\n    //   // this.gIQuery.toggle();\n    // }\n    // swipeMap() {\n    //   if (parent.myLayer) {\n    //     parent.myLayer.showLayer({\n    //       title: \"拉框对比\",\n    //       maxmin: false,\n    //       full: true,\n    //       url: \"map.html?page=mapSwipe\"\n    //     });\n    //   }\n    // }\n    // cmpMap() {\n    //   // add tab\n    //   if (parent.myLayer) {\n    //     parent.myLayer.showLayer({\n    //       title: \"图层对比\",\n    //       maxmin: false,\n    //       full: true,\n    //       url: \"map.html?page=mapCmp\"\n    //     });\n    //   }\n    // }\n    // print() {\n    //   // this.GClip.StartCapture()\n    //   Server.get({\n    //     url: services.query + \"clustererMapLayer\"\n    //   }).then(rsp => {\n    //     if (rsp.status === 1) {\n    //       // var layer = new GMarkerClusterLayer({\n    //       //   markers: markers\n    //       // });\n    //       var layer = new GCanvasLayer({\n    //         markers: rsp.data\n    //       });\n    //       this.mapView.myLayer.addLayer(layer);\n    //     }\n    //   });\n    // }\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      onemap.pubsub.publish(\"clear\");\n    }\n  }]);\n\n  return GMapTools;\n}();\n\nexport { GMapTools as default };",{"version":3,"sources":["C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\src\\map\\api\\4+\\GMapTools.js"],"names":["esriLoader","GMeasureArea","GMeasureLength","GMapTools","opt","mapView","loadModules","then","Zoom","zoom","view","initExtent","initialExtent","goTo","target","center","parent","window","onemap","utils","screen","toggle","maxZoom","constraints","effectiveMaxZoom","zoomIn","minZoom","effectiveMinZoom","zoomOut","gMeasureArea","start","gMeasureLength","pubsub","publish"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,cAAP,MAA2B,sBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqBC,S;;;AACnB,qBAAYC,GAAZ,EAAiB;AAAA;;AAAA;;AACf,SAAKC,OAAL,GAAeD,IAAIC,OAAJ,IAAe,IAA9B;AACAL,eAAWM,WAAX,CAAuB,CAAC,mBAAD,CAAvB,EAA8CC,IAA9C,CAAmD,gBAAY;AAAA;AAAA,UAAVC,IAAU;;AAC7D,YAAKC,IAAL,GAAY,IAAID,IAAJ,CAAS;AACnBE,cAAM,MAAKL;AADQ,OAAT,CAAZ;AAGD,KAJD,EAFe,CAOf;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;gCACW;AAEV,UAAIM,aAAa,KAAKN,OAAL,CAAaM,UAA9B;AACA,UAAIC,gBAAgB,KAAKP,OAAL,CAAaO,aAAjC;AACA,WAAKP,OAAL,CAAaQ,IAAb,CAAkB;AAChBC,gBAAQF,cAAcG,MADN;AAEhBN,cAAME,WAAWF;AAFD,OAAlB;AAID;;;iCAEY;AACX,UAAIO,OAAOC,MAAX,EAAmB;AACjBC,eAAOC,KAAP,CAAaC,MAAb,CAAoBC,MAApB,CAA2B,UAA3B;AACD,OAFD,MAEO;AACLH,eAAOC,KAAP,CAAaC,MAAb,CAAoBC,MAApB,CAA2B,UAA3B;AACD;AACF;;;6BACQ;AACP,UAAIC,UAAU,KAAKjB,OAAL,CAAakB,WAAb,CAAyBC,gBAAvC;AACA,UAAIf,OAAO,KAAKJ,OAAL,CAAaI,IAAxB;;AACA,UAAIA,OAAOa,OAAX,EAAoB;AAClB,aAAKb,IAAL,CAAUgB,MAAV;AACD;AACF;;;8BAES;AACR,UAAIC,UAAU,KAAKrB,OAAL,CAAakB,WAAb,CAAyBI,gBAAvC;AACA,UAAIlB,OAAO,KAAKJ,OAAL,CAAaI,IAAxB;;AACA,UAAIA,OAAOiB,OAAX,EAAoB;AAClB,aAAKjB,IAAL,CAAUmB,OAAV;AACD;AACF;;;kCAEa;AACZ;AACA,UAAI3B,YAAJ,CAAiB;AACfI,iBAAS,KAAKA;AADC,OAAjB,EAEGE,IAFH,CAEQ,wBAAgB;AACtBsB,qBAAaC,KAAb;AACD,OAJD;AAKD;;;oCAEe;AACd;AACA,UAAI5B,cAAJ,CAAmB;AACjBG,iBAAS,KAAKA;AADG,OAAnB,EAEGE,IAFH,CAEQ,0BAAkB;AACxBwB,uBAAeD,KAAf;AACD,OAJD;AAKD,K,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;4BAEQ;AACNZ,aAAOc,MAAP,CAAcC,OAAd,CAAsB,OAAtB;AACD;;;;;;SAzHkB9B,S","sourcesContent":["import esriLoader from \"esri-loader\";\nimport GMeasureArea from \"./api/GMeasureArea\";\nimport GMeasureLength from \"./api/GMeasureLength\";\n\n// import GIQuery from \"../js/GIQuery\";\n// import GClip from \"@api/api/GClip\";\n// import GMarkerClusterLayer from \"./api/GMarkerClusterLayer\";\n// import GCanvasLayer from \"./api/GCanvasLayer\";\n// import Server from \"@/core/server\";\n// import {\n//   services\n// } from \"@/core/services\";\nexport default class GMapTools {\n  constructor(opt) {\n    this.mapView = opt.mapView || null;\n    esriLoader.loadModules([\"esri/widgets/Zoom\"]).then(([Zoom]) => {\n      this.zoom = new Zoom({\n        view: this.mapView\n      });\n    });\n    // this.gIQuery = new GIQuery({\n    //   mapView: this.mapView\n    // });\n\n    // this.GClip = new GClip();\n\n    // window.geone.pubsub.subscribe(\"clear\", e => {\n    //   this.mapView.isEdit = false;\n    //   this.mapView.popup.close();\n    //   this.mapView.graphics.removeAll();\n    //   if (parent.geone) {\n    //     parent.geone._data = null;\n    //     parent.geone._geometry = null;\n    //   }\n    // });\n  }\n  mapScreen() {\n\n    let initExtent = this.mapView.initExtent;\n    let initialExtent = this.mapView.initialExtent;\n    this.mapView.goTo({\n      target: initialExtent.center,\n      zoom: initExtent.zoom\n    });\n  }\n\n  fullScreen() {\n    if (parent.window) {\n      onemap.utils.screen.toggle(\"app-body\")\n    } else {\n      onemap.utils.screen.toggle(\"app-body\")\n    }\n  }\n  zoomIn() {\n    let maxZoom = this.mapView.constraints.effectiveMaxZoom;\n    let zoom = this.mapView.zoom;\n    if (zoom < maxZoom) {\n      this.zoom.zoomIn();\n    }\n  }\n\n  zoomOut() {\n    let minZoom = this.mapView.constraints.effectiveMinZoom;\n    let zoom = this.mapView.zoom;\n    if (zoom > minZoom) {\n      this.zoom.zoomOut();\n    }\n  }\n\n  measureArea() {\n    // window.geone.pubsub.publish(\"clear\");\n    new GMeasureArea({\n      mapView: this.mapView\n    }).then(gMeasureArea => {\n      gMeasureArea.start();\n    });\n  }\n\n  measureLength() {\n    // window.geone.pubsub.publish(\"clear\");\n    new GMeasureLength({\n      mapView: this.mapView\n    }).then(gMeasureLength => {\n      gMeasureLength.start();\n    });\n  }\n\n  // iQueryTool() {\n  //   // this.gIQuery.toggle();\n  // }\n\n  // swipeMap() {\n  //   if (parent.myLayer) {\n  //     parent.myLayer.showLayer({\n  //       title: \"拉框对比\",\n  //       maxmin: false,\n  //       full: true,\n  //       url: \"map.html?page=mapSwipe\"\n  //     });\n  //   }\n  // }\n\n  // cmpMap() {\n  //   // add tab\n  //   if (parent.myLayer) {\n  //     parent.myLayer.showLayer({\n  //       title: \"图层对比\",\n  //       maxmin: false,\n  //       full: true,\n  //       url: \"map.html?page=mapCmp\"\n  //     });\n  //   }\n  // }\n\n  // print() {\n  //   // this.GClip.StartCapture()\n  //   Server.get({\n  //     url: services.query + \"clustererMapLayer\"\n  //   }).then(rsp => {\n  //     if (rsp.status === 1) {\n  //       // var layer = new GMarkerClusterLayer({\n  //       //   markers: markers\n  //       // });\n  //       var layer = new GCanvasLayer({\n  //         markers: rsp.data\n  //       });\n  //       this.mapView.myLayer.addLayer(layer);\n  //     }\n  //   });\n  // }\n\n  clear() {\n    onemap.pubsub.publish(\"clear\");\n  }\n}\n"]}]}