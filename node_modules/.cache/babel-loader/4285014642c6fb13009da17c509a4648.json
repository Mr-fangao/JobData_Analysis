{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\map\\api\\js\\GGeometryUtils.js","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\map\\api\\js\\GGeometryUtils.js","mtime":1563098587000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\01 GIS\\u7701\\u8D5B(\\u4E2D\\u671F\\u68C0\\u67E5+\\u6536\\u5C3E)\\\\04 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\01 GIS\\u7701\\u8D5B(\\u4E2D\\u671F\\u68C0\\u67E5+\\u6536\\u5C3E)\\\\04 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\n\nvar GGeometryUtils =\n/*#__PURE__*/\nfunction () {\n  function GGeometryUtils() {\n    _classCallCheck(this, GGeometryUtils);\n  }\n\n  _createClass(GGeometryUtils, [{\n    key: \"getMaxExtent\",\n    value: function getMaxExtent(geometries) {\n      //获取外包矩形\n      return new Promise(function (resolve) {\n        mapApi.esriApi.GetExtent().then(function (Extent) {\n          if (geometries.length === 0) return null;\n          var maxExtent = null;\n          var g1 = geometries[0];\n\n          if (g1.type == \"point\") {\n            maxExtent = {\n              xmax: g1.x,\n              ymax: g1.y,\n              xmin: g1.x,\n              ymin: g1.y\n            };\n          } else {\n            maxExtent = g1.extent;\n          }\n\n          var xMax = maxExtent.xmax;\n          var yMax = maxExtent.ymax;\n          var xMin = maxExtent.xmin;\n          var yMin = maxExtent.ymin;\n          geometries.forEach(function (g) {\n            var extent = null;\n\n            if (g.type == \"point\") {\n              extent = {\n                xmax: g.geometry.x,\n                ymax: g.geometry.y,\n                xmin: g.geometry.x,\n                ymin: g.geometry.y\n              };\n            } else {\n              extent = g.extent;\n            }\n\n            if (xMax < extent.xmax) {\n              xMax = extent.xmax;\n            }\n\n            if (yMax < extent.ymax) {\n              yMax = extent.ymax;\n            }\n\n            if (xMin > extent.xmin) {\n              xMin = extent.xmin;\n            }\n\n            if (yMin > extent.ymin) {\n              yMin = extent.ymin;\n            }\n          });\n          var unionExtent = new Extent({\n            xmax: xMax,\n            ymax: yMax,\n            xmin: xMin,\n            ymin: yMin,\n            spatialReference: g1.spatialReference\n          });\n          resolve(unionExtent);\n        });\n      });\n    }\n  }]);\n\n  return GGeometryUtils;\n}();\n\nexport var geometryUtils = new GGeometryUtils();",{"version":3,"sources":["C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\map\\api\\js\\GGeometryUtils.js"],"names":["GGeometryUtils","geometries","Promise","mapApi","esriApi","GetExtent","then","Extent","length","maxExtent","g1","type","xmax","x","ymax","y","xmin","ymin","extent","xMax","yMax","xMin","yMin","forEach","g","geometry","unionExtent","spatialReference","resolve","geometryUtils"],"mappings":";;;;IAAMA,c;;;;;;;;;iCACSC,U,EAAY;AACvB;AACA,aAAO,IAAIC,OAAJ,CAAY,mBAAW;AAC5BC,eAAOC,OAAP,CAAeC,SAAf,GAA2BC,IAA3B,CAAgC,UAACC,MAAD,EAAY;AAC1C,cAAIN,WAAWO,MAAX,KAAsB,CAA1B,EAA6B,OAAO,IAAP;AAC7B,cAAIC,YAAY,IAAhB;AACA,cAAIC,KAAKT,WAAW,CAAX,CAAT;;AACA,cAAIS,GAAGC,IAAH,IAAW,OAAf,EAAwB;AACtBF,wBAAY;AACVG,oBAAMF,GAAGG,CADC;AAEVC,oBAAMJ,GAAGK,CAFC;AAGVC,oBAAMN,GAAGG,CAHC;AAIVI,oBAAMP,GAAGK;AAJC,aAAZ;AAMD,WAPD,MAOO;AACLN,wBAAYC,GAAGQ,MAAf;AACD;;AACD,cAAIC,OAAOV,UAAUG,IAArB;AACA,cAAIQ,OAAOX,UAAUK,IAArB;AACA,cAAIO,OAAOZ,UAAUO,IAArB;AACA,cAAIM,OAAOb,UAAUQ,IAArB;AAEAhB,qBAAWsB,OAAX,CAAmB,UAAUC,CAAV,EAAa;AAC9B,gBAAIN,SAAS,IAAb;;AACA,gBAAIM,EAAEb,IAAF,IAAU,OAAd,EAAuB;AACrBO,uBAAS;AACPN,sBAAMY,EAAEC,QAAF,CAAWZ,CADV;AAEPC,sBAAMU,EAAEC,QAAF,CAAWV,CAFV;AAGPC,sBAAMQ,EAAEC,QAAF,CAAWZ,CAHV;AAIPI,sBAAMO,EAAEC,QAAF,CAAWV;AAJV,eAAT;AAMD,aAPD,MAOO;AACLG,uBAASM,EAAEN,MAAX;AACD;;AACD,gBAAIC,OAAOD,OAAON,IAAlB,EAAwB;AACtBO,qBAAOD,OAAON,IAAd;AACD;;AACD,gBAAIQ,OAAOF,OAAOJ,IAAlB,EAAwB;AACtBM,qBAAOF,OAAOJ,IAAd;AACD;;AACD,gBAAIO,OAAOH,OAAOF,IAAlB,EAAwB;AACtBK,qBAAOH,OAAOF,IAAd;AACD;;AACD,gBAAIM,OAAOJ,OAAOD,IAAlB,EAAwB;AACtBK,qBAAOJ,OAAOD,IAAd;AACD;AACF,WAxBD;AAyBA,cAAIS,cAAc,IAAInB,MAAJ,CAAW;AAC3BK,kBAAMO,IADqB;AAE3BL,kBAAMM,IAFqB;AAG3BJ,kBAAMK,IAHqB;AAI3BJ,kBAAMK,IAJqB;AAK3BK,8BAAkBjB,GAAGiB;AALM,WAAX,CAAlB;AAOAC,kBAAQF,WAAR;AACD,SApDD;AAqDD,OAtDM,CAAP;AAuDD;;;;;;AAEH,OAAO,IAAMG,gBAAgB,IAAI7B,cAAJ,EAAtB","sourcesContent":["class GGeometryUtils {\n  getMaxExtent(geometries) {\n    //获取外包矩形\n    return new Promise(resolve => {\n      mapApi.esriApi.GetExtent().then((Extent) => {\n        if (geometries.length === 0) return null;\n        var maxExtent = null;\n        var g1 = geometries[0];\n        if (g1.type == \"point\") {    \n          maxExtent = {\n            xmax: g1.x,\n            ymax: g1.y,\n            xmin: g1.x,\n            ymin: g1.y\n          };\n        } else {\n          maxExtent = g1.extent;\n        }\n        var xMax = maxExtent.xmax;\n        var yMax = maxExtent.ymax;\n        var xMin = maxExtent.xmin;\n        var yMin = maxExtent.ymin;\n\n        geometries.forEach(function (g) {\n          let extent = null;\n          if (g.type == \"point\") {\n            extent = {\n              xmax: g.geometry.x,\n              ymax: g.geometry.y,\n              xmin: g.geometry.x,\n              ymin: g.geometry.y\n            }\n          } else {\n            extent = g.extent;\n          }\n          if (xMax < extent.xmax) {\n            xMax = extent.xmax;\n          }\n          if (yMax < extent.ymax) {\n            yMax = extent.ymax;\n          }\n          if (xMin > extent.xmin) {\n            xMin = extent.xmin;\n          }\n          if (yMin > extent.ymin) {\n            yMin = extent.ymin;\n          }\n        });\n        var unionExtent = new Extent({\n          xmax: xMax,\n          ymax: yMax,\n          xmin: xMin,\n          ymin: yMin,\n          spatialReference: g1.spatialReference\n        })\n        resolve(unionExtent);\n      });\n    });\n  }\n}\nexport const geometryUtils = new GGeometryUtils();\n"]}]}