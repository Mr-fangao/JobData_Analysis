{"remainingRequest":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\src\\map\\components\\serverArea.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\src\\map\\components\\serverArea.vue","mtime":1589099994887},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\04 GIS相关比赛\\05 “创青春”比赛(省赛阶段)\\07 系统代码\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"E:\\\\04 GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\05 \\u201C\\u521B\\u9752\\u6625\\u201D\\u6BD4\\u8D5B(\\u7701\\u8D5B\\u9636\\u6BB5)\\\\07 \\u7CFB\\u7EDF\\u4EE3\\u7801\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport esriLoader from \"esri-loader\";\nimport { MapAPI } from \"@/core/config/const\";\nimport Register from \"@/map/api/register\";\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport measureArea from \"@/map/components/measureArea\";\nimport measureLength from \"@/map/components/measureLength\";\nimport MapToolsView from \"@/map/components/MapToolsView\";\nimport GDrawSketch from \"@/map/api/4+/GDrawSketch\";\nimport GConvertGeometry from \"@/map/api/js/convert/GConvertGeometry\";\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\nimport layerView from \"./layerView\";\nimport housePoint from \"@/vuex/store\";\nexport default {\n  data: function data() {\n    return {\n      visible: false,\n      active: false,\n      pts: [],\n      isShow: false,\n      shape: \"\",\n      txt_input: \"\",\n      list: [],\n      dialog: false,\n      pageSize: 10,\n      txt_select: \"\",\n      data: [],\n      baseLayer: \"\",\n      firstPoint: \"\",\n      street: \"\",\n      transition: \"\",\n      routeLayer: \"\",\n      routeParams: \"\",\n      houseSymbol: \"\",\n      stopSymbol: \"\",\n      routeSymbol: \"\",\n      routeResult: \"\",\n      routeTask: \"\",\n      isExtent: true,\n      isPopup: true,\n      isPan: true,\n      defaultMapExtent: \"13175030.812,3804452.901,2\",\n      spatialReference: \"\",\n      toolsUrl: \"js/json/common_tools.json\",\n      mapTileLayerLayers: \"\",\n      TileLayerStreets: \"\",\n      MapImageLayer: \"\",\n      mapview: null,\n      serverPolygon: \"\",\n      IsMapToolsView: false,\n      break1: 500,\n      break2: 1000,\n      break3: 1500\n    };\n  },\n  computed: {\n    height: function height() {\n      return document.body.clientHeight - 200;\n    }\n  },\n  watch: {\n    data: function data() {\n      this.onPageChange(1);\n    }\n  },\n  mounted: function mounted() {\n    this.spatialReference = \"\"; // this.addLayer(mapView => {\n    //   this.mapLoaded(mapView);\n    // });\n\n    this.addLayer(); // this.register();\n    // setTimeout(() => {\n    //   this.showGraphics();\n    // }, 600);\n  },\n  methods: {\n    switch3d: function switch3d() {\n      this.$router.push(\"/3dmap\");\n    },\n    register: function register() {\n      var _this = this;\n\n      //接收外部结果\n      onemap.pubsub.subscribe(\"showQuickSearchResult\", function (arg) {\n        _this.isExtent = false;\n        _this.isPan = false;\n        _this.isPopup = arg.isPopup || true;\n        _this.data = arg.list;\n        _this.visible = true;\n      });\n      onemap.pubsub.subscribe(\"hideQuickSearchResult\", function (arg) {\n        _this.visible = false;\n        _this.data = [];\n      }); //clear\n\n      onemap.pubsub.subscribe(\"clear\", function (arg) {\n        _this.visible = false;\n        _this.data = [];\n      });\n    },\n    mapLoaded: function mapLoaded(mapView) {\n      new Register(mapView).mapEvent().mapAPI().parentMapAPI();\n\n      if (this.isIQuery) {\n        new GIQuery({\n          mapView: mapView,\n          isPopup: this.isIPopup\n        }).toggle();\n      }\n    },\n    onToggleLayer: function onToggleLayer() {\n      debugger;\n      this.active = !this.active;\n    },\n    addLayer: function addLayer(callback) {\n      var _this2 = this;\n\n      esriLoader.loadScript({\n        url: MapAPI.js,\n        css: MapAPI.css\n      }).then(function (r) {\n        esriLoader.loadModules([\"esri/config\", \"esri/Map\", \"esri/layers/GroupLayer\", \"esri/Basemap\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/TileLayer\", \"esri/tasks/ServiceAreaTask\", \"esri/layers/FeatureLayer\", \"esri/tasks/support/DataLayer\", \"esri/tasks/support/ServiceAreaParameters\", \"esri/tasks/support/ServiceAreaSolveResult\", \"esri/symbols/SimpleLineSymbol\", \"esri/symbols/SimpleFillSymbol\", \"esri/Color\", \"esri/layers/GraphicsLayer\", \"esri/geometry/Extent\", \"esri/widgets/LayerList\", \"esri/Graphic\", \"esri/tasks/support/FeatureSet\", \"dojo/on\"]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 22),\n              esriConfig = _ref2[0],\n              Map = _ref2[1],\n              GroupLayer = _ref2[2],\n              Basemap = _ref2[3],\n              MapView = _ref2[4],\n              MapImageLayer = _ref2[5],\n              TileLayer = _ref2[6],\n              ServiceAreaTask = _ref2[7],\n              FeatureLayer = _ref2[8],\n              DataLayer = _ref2[9],\n              ServiceAreaParameters = _ref2[10],\n              ServiceAreaSolveResult = _ref2[11],\n              SimpleLineSymbol = _ref2[12],\n              SimpleFillSymbol = _ref2[13],\n              Color = _ref2[14],\n              GraphicsLayer = _ref2[15],\n              Extent = _ref2[16],\n              LayerList = _ref2[17],\n              Graphic = _ref2[18],\n              FeatureSet = _ref2[19],\n              dom = _ref2[20],\n              on = _ref2[21];\n\n          esriConfig.request.corsEnabledServers.push(\"http://122.112.216.247:6080\");\n          var activeWidget = null;\n          var tilelayer = new TileLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\n          });\n          var layer = new FeatureLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/MapServer/8\"\n          });\n          _this2.baseLayer = layer;\n          var baseMap = new Basemap({\n            baseLayers: [layer]\n          });\n          var map = new Map({\n            basemap: baseMap,\n            layers: [layer, tilelayer]\n          });\n          _this2.map = map;\n          _this2.mapview = new MapView({\n            container: \"viewDiv\",\n            map: map\n          });\n\n          _this2.mapview.ui.remove([\"attribution\", \"zoom\"]);\n\n          var view = _this2.mapview;\n          var stops = new DataLayer();\n          stops.geometry = view.extent;\n          stops.name = \"Hospitals\";\n          console.log(map); // var houseSymbol = GMapSymbol.gethousePointSymbol({});\n          // this.houseSymbol = houseSymbol;\n          // var stopSymbol = {\n          //   type: \"simple-marker\",\n          //   style: \"cross\",\n          //   size: 15,\n          //   outline: {\n          //     width: 4\n          //   }\n          // };\n          // this.stopSymbol = stopSymbol;\n          // var routeSymbol = {\n          //   type: \"simple-line\",\n          //   color: [82, 152, 255, 1],\n          //   width: 5\n          // };\n          // this.routeSymbol = routeSymbol;\n\n          var serverParams = new ServiceAreaParameters({\n            facilities: {\n              type: \"layer\",\n              layerName: \"Hospitals\",\n              impedanceAttribute: \"Time\" // where: \"BEDS > 100\"\n\n            },\n            defaultBreaks: [_this2.break1, _this2.break2, _this2.break3] // outSpatialReference: {\n            //   wkid: 3857\n            // }\n\n          });\n          var serviceAreaTask = new ServiceAreaTask({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/NAServer/ServiceArea\"\n          });\n          serviceAreaTask.solve(serverParams).then(function (solveResult) {\n            // console.log(solveResult.serviceAreaPolygons);\n            var AreaPolygons = solveResult.serviceAreaPolygons;\n            console.log(AreaPolygons);\n            var polygonSymbol = new SimpleFillSymbol(\"solid\", new SimpleLineSymbol(\"solid\", new Color([232, 104, 80])), new Color([232, 104, 80, 0.25]));\n            AreaPolygons.forEach(function (AreaPolygons, index) {\n              debugger; // var symbol = GMapSymbol.getSymbol(geometry);\n\n              var graphics = [];\n              var graphic = new Graphic({\n                geometry: AreaPolygons.geometry,\n                symbol: polygonSymbol\n              });\n              graphics.push(graphic);\n              view.graphics.addMany(graphics);\n            }); // AreaPolygons.forEach(function(e) {\n            //   debugger;\n            //   var polygonSymbol = new SimpleFillSymbol(\n            //     \"solid\",\n            //     new SimpleLineSymbol(\n            //       \"solid\",\n            //       new Color([232, 104, 80])\n            //     ),\n            //     new Color([232, 104, 80, 0.25])\n            //   );\n            //   e.setSymbol(polygonSymbol);\n            //   console.log(e);\n            //   debugger;\n            //   // var graphic = new Graphic({\n            //   //   geometry: e\n            //   // });\n            //   // graphic.setSymbol(polygonSymbol);\n            //   map.graphics.add(graphic);\n            //   console.log(map);\n            // });\n            // AreaPolygons.forEach(\n            //   solveResult.serviceAreaPolygons,\n            //   function(serviceArea) {\n            //     debugger;\n            //     serviceArea.setSymbol(polygonSymbol);\n            //     this.map.graphics.add(serviceArea);\n            //   }\n            // );\n          }, function (err) {\n            console.log(err.message);\n          }); // onemap.pubsub.publish(\"drawPolygonByGeoJson\", {\n          //   list: this.serverPolygon,\n          //   extent: true\n          // });\n        }); // this.routeTask = routeTask;\n        // var ext = String(this.defaultMapExtent).split(\",\");\n        // if (ext.length > 3) {\n        //   console.log(\"extent 配置有误\");\n        //   return false;\n        // }\n        // var zoom = parseInt(ext[2]);\n        // var center = {\n        //   x: parseFloat(ext[0]),\n        //   y: parseFloat(ext[1]),\n        //   spatialReference: this.spatialReference\n        // };\n        // view.when(function() {\n        //   var layerList = new LayerList({\n        //     view: view\n        //   });\n        //   view.ui.add(layerList, \"top-right\");\n        // });\n        // this.mapview.initExtent = {\n        //   center: center,\n        //   zoom: zoom\n        // };\n\n        window.mapview = _this2.mapview; // callback(this.mapview);\n\n        _this2.IsMapToolsView = true;\n      });\n    },\n    // switchbasemap() {\n    //   if (this.baseLayer.visible) {\n    //     this.baseLayer.visible = false;\n    //     this.street.visible = true;\n    //   } else {\n    //     this.baseLayer.visible = true;\n    //     this.street.visible = false;\n    //   }\n    // },\n    watchLayer: function watchLayer() {} // addLastStop() {\n    //   var lastpoint = mapApi.convert.toGeometryByWKT.parse({\n    //     wkt: housePoint.state.shapePoi,\n    //     spatialReference: window.mapview.spatialReference\n    //   });\n    //   this.transition = lastpoint;\n    //   var _this = this;\n    //   lastpoint.then(data => {\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\n    //       var stop = new Graphic({\n    //         geometry: data,\n    //         symbol: this.houseSymbol\n    //       });\n    //       this.routeLayer.add(stop);\n    //       this.routeParams.stops.features.push(stop);\n    //       if (this.routeParams.stops.features.length >= 2) {\n    //         this.routeTask\n    //           .solve(this.routeParams)\n    //           .then(this.showRoute, this.logError);\n    //       }\n    //     });\n    //   });\n    // },\n    // addPoint(value) {\n    //   var firstpoint = mapApi.convert.toGeometryByWKT.parse({\n    //     wkt: value.Shape,\n    //     spatialReference: window.mapview.spatialReference\n    //   });\n    //   var _this = this;\n    //   firstpoint.then(data => {\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\n    //       `  `;\n    //       var stop = new Graphic({\n    //         geometry: data,\n    //         symbol: this.stopSymbol\n    //       });\n    //       this.routeLayer.add(stop);\n    //       this.routeParams.stops.features.push(stop);\n    //       this.addLastStop();\n    //     });\n    //   });\n    // },\n    // addStop(value) {\n    //   debugger;\n    //   if (this.routeLayer.graphics.length > 2) {\n    //     this.routeLayer.removeAll();\n    //     this.addPoint(value);\n    //   } else {\n    //     this.addPoint(value);\n    //   }\n    // },\n    // showRoute(data) {\n    //   debugger;\n    //   var routeResult = data.routeResults[0].route;\n    //   routeResult.symbol = this.routeSymbol;\n    //   this.routeResult = routeResult;\n    //   this.routeLayer.add(routeResult);\n    //   console.log(this.routeLayer);\n    //   console.log(this.routeLayer);\n    // },\n    // logError(error) {\n    //   console.error(error);\n    // }\n\n  },\n  components: {\n    measureArea: measureArea,\n    measureLength: measureLength,\n    MapToolsView: MapToolsView,\n    layerView: layerView\n  }\n};",{"version":3,"sources":["serverArea.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"viewDiv\" region=\"center\">\r\n      <div class=\"smallTools\">\r\n        <MapToolsView :mapView=\"mapview\" v-if=\"IsMapToolsView\" :url=\"toolsUrl\"></MapToolsView>\r\n      </div>\r\n      <div class=\"smallMapbar\">\r\n        <ul>\r\n          <li class=\"btn\">\r\n            <span class=\"icon baseLayer\" @click=\"switch3d\"></span>\r\n            <span>3D</span>\r\n          </li>\r\n        </ul>\r\n        <layerView :active=\"active\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template><script>\r\nimport esriLoader from \"esri-loader\";\r\nimport { MapAPI } from \"@/core/config/const\";\r\nimport Register from \"@/map/api/register\";\r\nimport Server from \"@/core/server\";\r\nimport { services } from \"@/core/config/services\";\r\nimport measureArea from \"@/map/components/measureArea\";\r\nimport measureLength from \"@/map/components/measureLength\";\r\nimport MapToolsView from \"@/map/components/MapToolsView\";\r\nimport GDrawSketch from \"@/map/api/4+/GDrawSketch\";\r\nimport GConvertGeometry from \"@/map/api/js/convert/GConvertGeometry\";\r\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\r\nimport layerView from \"./layerView\";\r\nimport housePoint from \"@/vuex/store\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      active: false,\r\n      pts: [],\r\n      isShow: false,\r\n      shape: \"\",\r\n      txt_input: \"\",\r\n      list: [],\r\n      dialog: false,\r\n      pageSize: 10,\r\n      txt_select: \"\",\r\n      data: [],\r\n      baseLayer: \"\",\r\n      firstPoint: \"\",\r\n      street: \"\",\r\n      transition: \"\",\r\n      routeLayer: \"\",\r\n      routeParams: \"\",\r\n      houseSymbol: \"\",\r\n      stopSymbol: \"\",\r\n      routeSymbol: \"\",\r\n      routeResult: \"\",\r\n      routeTask: \"\",\r\n      isExtent: true,\r\n      isPopup: true,\r\n      isPan: true,\r\n      defaultMapExtent: \"13175030.812,3804452.901,2\",\r\n      spatialReference: \"\",\r\n      toolsUrl: \"js/json/common_tools.json\",\r\n      mapTileLayerLayers: \"\",\r\n      TileLayerStreets: \"\",\r\n      MapImageLayer: \"\",\r\n      mapview: null,\r\n      serverPolygon: \"\",\r\n      IsMapToolsView: false,\r\n      break1: 500,\r\n      break2: 1000,\r\n      break3: 1500\r\n    };\r\n  },\r\n  computed: {\r\n    height() {\r\n      return document.body.clientHeight - 200;\r\n    }\r\n  },\r\n  watch: {\r\n    data() {\r\n      this.onPageChange(1);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.spatialReference = \"\";\r\n    // this.addLayer(mapView => {\r\n    //   this.mapLoaded(mapView);\r\n    // });\r\n    this.addLayer();\r\n    // this.register();\r\n    // setTimeout(() => {\r\n    //   this.showGraphics();\r\n    // }, 600);\r\n  },\r\n  methods: {\r\n    switch3d() {\r\n      this.$router.push(\"/3dmap\");\r\n    },\r\n    register() {\r\n      //接收外部结果\r\n      onemap.pubsub.subscribe(\"showQuickSearchResult\", arg => {\r\n        this.isExtent = false;\r\n        this.isPan = false;\r\n        this.isPopup = arg.isPopup || true;\r\n        this.data = arg.list;\r\n        this.visible = true;\r\n      });\r\n      onemap.pubsub.subscribe(\"hideQuickSearchResult\", arg => {\r\n        this.visible = false;\r\n        this.data = [];\r\n      });\r\n\r\n      //clear\r\n      onemap.pubsub.subscribe(\"clear\", arg => {\r\n        this.visible = false;\r\n        this.data = [];\r\n      });\r\n    },\r\n    mapLoaded(mapView) {\r\n      new Register(mapView)\r\n        .mapEvent()\r\n        .mapAPI()\r\n        .parentMapAPI();\r\n      if (this.isIQuery) {\r\n        new GIQuery({\r\n          mapView: mapView,\r\n          isPopup: this.isIPopup\r\n        }).toggle();\r\n      }\r\n    },\r\n    onToggleLayer() {\r\n      debugger;\r\n      this.active = !this.active;\r\n    },\r\n\r\n    addLayer(callback) {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/config\",\r\n              \"esri/Map\",\r\n              \"esri/layers/GroupLayer\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/tasks/ServiceAreaTask\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/tasks/support/DataLayer\",\r\n              \"esri/tasks/support/ServiceAreaParameters\",\r\n              \"esri/tasks/support/ServiceAreaSolveResult\",\r\n              \"esri/symbols/SimpleLineSymbol\",\r\n              \"esri/symbols/SimpleFillSymbol\",\r\n              \"esri/Color\",\r\n              \"esri/layers/GraphicsLayer\",\r\n              \"esri/geometry/Extent\",\r\n              \"esri/widgets/LayerList\",\r\n              \"esri/Graphic\",\r\n              \"esri/tasks/support/FeatureSet\",\r\n              \"dojo/on\"\r\n            ])\r\n            .then(\r\n              ([\r\n                esriConfig,\r\n                Map,\r\n                GroupLayer,\r\n                Basemap,\r\n                MapView,\r\n                MapImageLayer,\r\n                TileLayer,\r\n                ServiceAreaTask,\r\n                FeatureLayer,\r\n                DataLayer,\r\n                ServiceAreaParameters,\r\n                ServiceAreaSolveResult,\r\n                SimpleLineSymbol,\r\n                SimpleFillSymbol,\r\n                Color,\r\n                GraphicsLayer,\r\n                Extent,\r\n                LayerList,\r\n                Graphic,\r\n                FeatureSet,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                esriConfig.request.corsEnabledServers.push(\r\n                  \"http://122.112.216.247:6080\"\r\n                );\r\n                var activeWidget = null;\r\n\r\n                var tilelayer = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\r\n                });\r\n                var layer = new FeatureLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/MapServer/8\"\r\n                });\r\n                this.baseLayer = layer;\r\n\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [layer]\r\n                });\r\n\r\n                var map = new Map({\r\n                  basemap: baseMap,\r\n                  layers: [layer,tilelayer]\r\n                });\r\n                this.map = map;\r\n                this.mapview = new MapView({\r\n                  container: \"viewDiv\",\r\n                  map: map\r\n                });\r\n\r\n                this.mapview.ui.remove([\"attribution\", \"zoom\"]);\r\n                var view = this.mapview;\r\n                var stops = new DataLayer();\r\n                stops.geometry = view.extent;\r\n                stops.name = \"Hospitals\";\r\n                console.log(map);\r\n                // var houseSymbol = GMapSymbol.gethousePointSymbol({});\r\n                // this.houseSymbol = houseSymbol;\r\n                // var stopSymbol = {\r\n                //   type: \"simple-marker\",\r\n                //   style: \"cross\",\r\n                //   size: 15,\r\n                //   outline: {\r\n                //     width: 4\r\n                //   }\r\n                // };\r\n                // this.stopSymbol = stopSymbol;\r\n                // var routeSymbol = {\r\n                //   type: \"simple-line\",\r\n\r\n                //   color: [82, 152, 255, 1],\r\n                //   width: 5\r\n                // };\r\n                // this.routeSymbol = routeSymbol;\r\n                var serverParams = new ServiceAreaParameters({\r\n                  facilities: {\r\n                    type: \"layer\",\r\n                    layerName: \"Hospitals\",\r\n                    impedanceAttribute:\"Time\"\r\n                    // where: \"BEDS > 100\"\r\n                  },\r\n                  defaultBreaks: [this.break1, this.break2, this.break3]\r\n                  // outSpatialReference: {\r\n                  //   wkid: 3857\r\n                  // }\r\n                });\r\n\r\n                var serviceAreaTask = new ServiceAreaTask({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/NAServer/ServiceArea\"\r\n                });\r\n                serviceAreaTask.solve(serverParams).then(\r\n                  solveResult => {\r\n                    // console.log(solveResult.serviceAreaPolygons);\r\n                    var AreaPolygons = solveResult.serviceAreaPolygons;\r\n                    console.log(AreaPolygons);\r\n                    var polygonSymbol = new SimpleFillSymbol(\r\n                      \"solid\",\r\n                      new SimpleLineSymbol(\"solid\", new Color([232, 104, 80])),\r\n                      new Color([232, 104, 80, 0.25])\r\n                    );\r\n                    AreaPolygons.forEach((AreaPolygons, index) => {\r\n                      debugger;\r\n                      // var symbol = GMapSymbol.getSymbol(geometry);\r\n                      var graphics = [];\r\n                      var graphic = new Graphic({\r\n                        geometry: AreaPolygons.geometry,\r\n                        symbol: polygonSymbol\r\n                      });\r\n                      graphics.push(graphic);\r\n                      view.graphics.addMany(graphics);\r\n                    });\r\n                    // AreaPolygons.forEach(function(e) {\r\n                    //   debugger;\r\n                    //   var polygonSymbol = new SimpleFillSymbol(\r\n                    //     \"solid\",\r\n                    //     new SimpleLineSymbol(\r\n                    //       \"solid\",\r\n                    //       new Color([232, 104, 80])\r\n                    //     ),\r\n                    //     new Color([232, 104, 80, 0.25])\r\n                    //   );\r\n                    //   e.setSymbol(polygonSymbol);\r\n                    //   console.log(e);\r\n                    //   debugger;\r\n                    //   // var graphic = new Graphic({\r\n                    //   //   geometry: e\r\n                    //   // });\r\n                    //   // graphic.setSymbol(polygonSymbol);\r\n                    //   map.graphics.add(graphic);\r\n                    //   console.log(map);\r\n                    // });\r\n                    // AreaPolygons.forEach(\r\n                    //   solveResult.serviceAreaPolygons,\r\n                    //   function(serviceArea) {\r\n                    //     debugger;\r\n                    //     serviceArea.setSymbol(polygonSymbol);\r\n                    //     this.map.graphics.add(serviceArea);\r\n                    //   }\r\n                    // );\r\n                  },\r\n                  function(err) {\r\n                    console.log(err.message);\r\n                  }\r\n                );\r\n\r\n                // onemap.pubsub.publish(\"drawPolygonByGeoJson\", {\r\n                //   list: this.serverPolygon,\r\n                //   extent: true\r\n                // });\r\n              }\r\n            );\r\n\r\n          // this.routeTask = routeTask;\r\n          // var ext = String(this.defaultMapExtent).split(\",\");\r\n          // if (ext.length > 3) {\r\n          //   console.log(\"extent 配置有误\");\r\n          //   return false;\r\n          // }\r\n          // var zoom = parseInt(ext[2]);\r\n          // var center = {\r\n          //   x: parseFloat(ext[0]),\r\n          //   y: parseFloat(ext[1]),\r\n          //   spatialReference: this.spatialReference\r\n          // };\r\n\r\n          // view.when(function() {\r\n          //   var layerList = new LayerList({\r\n          //     view: view\r\n          //   });\r\n          //   view.ui.add(layerList, \"top-right\");\r\n          // });\r\n          // this.mapview.initExtent = {\r\n          //   center: center,\r\n          //   zoom: zoom\r\n          // };\r\n          window.mapview = this.mapview;\r\n          // callback(this.mapview);\r\n          this.IsMapToolsView = true;\r\n        });\r\n    },\r\n    // switchbasemap() {\r\n    //   if (this.baseLayer.visible) {\r\n    //     this.baseLayer.visible = false;\r\n    //     this.street.visible = true;\r\n    //   } else {\r\n    //     this.baseLayer.visible = true;\r\n    //     this.street.visible = false;\r\n    //   }\r\n    // },\r\n    watchLayer() {}\r\n    // addLastStop() {\r\n    //   var lastpoint = mapApi.convert.toGeometryByWKT.parse({\r\n    //     wkt: housePoint.state.shapePoi,\r\n    //     spatialReference: window.mapview.spatialReference\r\n    //   });\r\n    //   this.transition = lastpoint;\r\n    //   var _this = this;\r\n    //   lastpoint.then(data => {\r\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\r\n    //       var stop = new Graphic({\r\n    //         geometry: data,\r\n    //         symbol: this.houseSymbol\r\n    //       });\r\n    //       this.routeLayer.add(stop);\r\n    //       this.routeParams.stops.features.push(stop);\r\n    //       if (this.routeParams.stops.features.length >= 2) {\r\n    //         this.routeTask\r\n    //           .solve(this.routeParams)\r\n    //           .then(this.showRoute, this.logError);\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // },\r\n    // addPoint(value) {\r\n    //   var firstpoint = mapApi.convert.toGeometryByWKT.parse({\r\n    //     wkt: value.Shape,\r\n    //     spatialReference: window.mapview.spatialReference\r\n    //   });\r\n    //   var _this = this;\r\n    //   firstpoint.then(data => {\r\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\r\n    //       `  `;\r\n    //       var stop = new Graphic({\r\n    //         geometry: data,\r\n    //         symbol: this.stopSymbol\r\n    //       });\r\n    //       this.routeLayer.add(stop);\r\n\r\n    //       this.routeParams.stops.features.push(stop);\r\n\r\n    //       this.addLastStop();\r\n    //     });\r\n    //   });\r\n    // },\r\n    // addStop(value) {\r\n    //   debugger;\r\n    //   if (this.routeLayer.graphics.length > 2) {\r\n    //     this.routeLayer.removeAll();\r\n    //     this.addPoint(value);\r\n    //   } else {\r\n    //     this.addPoint(value);\r\n    //   }\r\n    // },\r\n    // showRoute(data) {\r\n    //   debugger;\r\n    //   var routeResult = data.routeResults[0].route;\r\n    //   routeResult.symbol = this.routeSymbol;\r\n    //   this.routeResult = routeResult;\r\n    //   this.routeLayer.add(routeResult);\r\n    //   console.log(this.routeLayer);\r\n    //   console.log(this.routeLayer);\r\n    // },\r\n    // logError(error) {\r\n    //   console.error(error);\r\n    // }\r\n  },\r\n  components: {\r\n    measureArea,\r\n    measureLength,\r\n    MapToolsView,\r\n    layerView\r\n  }\r\n};\r\n</script>\r\n\r\n<style >\r\n.main .container-fluid {\r\n  padding: 0 0px;\r\n}\r\n.breadcrumb {\r\n  position: relative;\r\n  margin-bottom: 0.01rem;\r\n  border-bottom: 1px solid #cfd8dc;\r\n}\r\n#layerToggle {\r\n  top: 20px;\r\n  right: 20px;\r\n  position: absolute;\r\n  z-index: 99;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  opacity: 0.75;\r\n}\r\n.baidu {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 115px;\r\n}\r\n\r\n.list-wrapper {\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n}\r\n</style>"],"sourceRoot":"src\\map\\components"}]}