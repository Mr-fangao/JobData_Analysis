{"remainingRequest":"C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\src\\core\\utils\\server.js","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\src\\core\\utils\\server.js","mtime":1563098587000},{"path":"C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _classCallCheck from \"C:\\\\Users\\\\asus\\\\Desktop\\\\\\u7CFB\\u7EDF\\u4EE3\\u7801-\\u5907\\u4EFD\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\asus\\\\Desktop\\\\\\u7CFB\\u7EDF\\u4EE3\\u7801-\\u5907\\u4EFD\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport axios from \"axios\";\nimport qs from \"qs\";\n/* eslint-disable */\n\nvar Server =\n/*#__PURE__*/\nfunction () {\n  function Server() {\n    _classCallCheck(this, Server);\n\n    axios.interceptors.request.use(function (config) {\n      return config;\n    }, function (error) {\n      return Promise.reject(error.request);\n    });\n    axios.interceptors.response.use(function (config) {\n      return config;\n    }, function (error) {\n      return Promise.reject(error.response);\n    });\n  }\n\n  _createClass(Server, [{\n    key: \"get\",\n    value: function get(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n          opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n        }\n\n        axios.defaults.timeout = opt.timeout || 20000; //5s超时\n\n        axios.get(encodeURI(opt.url), {\n          params: opt.params || {}\n        }).then(function (rsp) {\n          if (typeof rsp.data === \"string\") {\n            resolve(rsp.data);\n          } else {\n            rsp.data.netStatus = rsp.status;\n            resolve(rsp.data);\n          }\n        }).catch(function (err) {\n          if (typeof err === \"undefined\") {\n            err = {\n              netStatus: 500\n            };\n          }\n\n          reject({\n            netStatus: err.netStatus,\n            status: 0,\n            message: \"\".concat(err.netStatus, \"-\\u670D\\u52A1\\u5F02\\u5E38\")\n          });\n        });\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n          opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n        }\n\n        axios.defaults.timeout = opt.timeout || 20000; //5s超时\n\n        axios.post(encodeURI(opt.url), qs.stringify(opt.params || {})).then(function (rsp) {\n          rsp.data.netStatus = rsp.status;\n          resolve(rsp.data);\n        }).catch(function (err) {\n          if (typeof err === \"undefined\") {\n            err = {\n              netStatus: 500\n            };\n          }\n\n          reject({\n            netStatus: err.netStatus,\n            status: 0,\n            message: \"\".concat(err.netStatus, \"-\\u670D\\u52A1\\u5F02\\u5E38\")\n          });\n        });\n      });\n    }\n  }]);\n\n  return Server;\n}();\n\nexport var server = new Server();",{"version":3,"sources":["C:\\Users\\asus\\Desktop\\系统代码-备份\\前端\\src\\core\\utils\\server.js"],"names":["axios","qs","Server","interceptors","request","use","config","Promise","reject","error","response","opt","resolve","url","toLowerCase","indexOf","replace","onemap","CONST","IP","defaults","timeout","get","encodeURI","params","then","rsp","data","netStatus","status","catch","err","message","post","stringify","server"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\n/* eslint-disable */\n\nclass Server {\n    constructor() {\n        axios.interceptors.request.use(config => {\n            return config;\n        }, error => {\n            return Promise.reject(error.request);\n        });\n\n        axios.interceptors.response.use(config => {\n            return config;\n        }, error => {\n            return Promise.reject(error.response);\n        });\n    }\n\n    get(opt) {\n        return new Promise((resolve, reject) => {\n            if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n                opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n            }\n            axios.defaults.timeout = opt.timeout || 20000; //5s超时\n            axios.get(encodeURI(opt.url), {\n                    params: opt.params || {}\n                })\n                .then(function (rsp) {\n                    if (typeof (rsp.data) === \"string\") {\n                        resolve(rsp.data);\n                    } else {\n                        rsp.data.netStatus = rsp.status;\n                        resolve(rsp.data);\n                    }\n                }).catch(err => {\n                    if (typeof err === \"undefined\") {\n                        err = {\n                            netStatus: 500\n                        };\n                    }\n                    reject({\n                        netStatus: err.netStatus,\n                        status: 0,\n                        message: `${err.netStatus}-服务异常`\n                    });\n                });\n        });\n    }\n\n    post(opt) {\n        return new Promise((resolve, reject) => {\n            if (opt.url.toLowerCase().indexOf(\"@ip\") > -1) {\n                opt.url = opt.url.toLowerCase().replace(/@ip/g, onemap.CONST.IP);\n            }\n            axios.defaults.timeout = opt.timeout || 20000; //5s超时\n            axios.post(encodeURI(opt.url), qs.stringify(opt.params || {}))\n                .then(function (rsp) {\n                    rsp.data.netStatus = rsp.status;\n                    resolve(rsp.data);\n                }).catch(err => {\n                    if (typeof err === \"undefined\") {\n                        err = {\n                            netStatus: 500,\n                        };\n                    }\n                    reject({\n                        netStatus: err.netStatus,\n                        status: 0,\n                        message: `${err.netStatus}-服务异常`\n                    });\n                });\n        });\n    }\n}\nexport const server = new Server();"]}]}