{"remainingRequest":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\src\\map\\components\\layerView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\src\\map\\components\\layerView.vue","mtime":1563098587000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1633397196896},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Documents\\GitHub\\JobData_Analysis\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\JobData_Analysis\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport housueName from \"@/vuex/store\";\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\nimport { MapAPI } from \"@/core/config/const\";\nexport default {\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      gj: true,\n      cz: false,\n      yl: false,\n      school: false\n    }, _defineProperty(_ref, \"yl\", false), _defineProperty(_ref, \"gy\", false), _defineProperty(_ref, \"gjLayer\", \"\"), _defineProperty(_ref, \"houseName\", \"\"), _defineProperty(_ref, \"list\", []), _ref;\n  },\n  methods: {\n    changegj: function changegj() {\n      var _this2 = this;\n\n      if (this.gj == true) {\n        debugger;\n        var value = \"BUSSTATION\";\n        this.houseName = housueName.state.housueName;\n        Server.get({\n          url: services.road,\n          params: {\n            name: this.houseName,\n            tableName: value,\n            distance: this.distance\n          }\n        }).then(function (rsp) {\n          var _this = _this2;\n\n          if (rsp.status === 1) {\n            _this.list = rsp.data;\n            mapApi.esriApi.GetGraphic().then(function (Graphic) {\n              var geometryParse = [];\n\n              _this2.list.forEach(function (item, index) {\n                geometryParse.push(mapApi.convert.toGeometryByWKT.parse({\n                  wkt: item.Shape,\n                  spatialReference: window.mapview.spatialReference\n                }));\n              });\n\n              Promise.all(geometryParse).then(function (geometries) {\n                var pts = [];\n                var graphics = [];\n                geometries.forEach(function (geometry, index) {\n                  var pt = null;\n\n                  if (geometry !== null) {\n                    if (geometry.type === \"point\") {\n                      pt = geometry;\n                    } else {\n                      pt = geometry.extent.center;\n                    }\n\n                    pts.push(pt);\n                  }\n\n                  var item = _this2.list[index];\n                  var symbol = GMapSymbol.getMarkerPoiSymbol({});\n                  var graphic = new Graphic({\n                    geometry: pt,\n                    symbol: symbol,\n                    attributes: {\n                      id: item.pIndex,\n                      attr: item,\n                      centerPt: pt,\n                      marker: true,\n                      popup: true\n                    }\n                  });\n                  graphics.push(graphic);\n                });\n                mapApi.esriApi.GetGraphicsLayer().then(function (GraphicsLayer) {\n                  _this2.gjLayer = new GraphicsLayer({});\n\n                  _this2.gjLayer.graphics.addMany(graphics);\n\n                  window.mapview.map.add(_this2.gjLayer);\n                }); // if (layer === null) {\n                //   mapview.graphics.addMany(graphics);\n                // } else {\n                //   layer.graphics.addMany(graphics);\n                // }\n                // if (extent) {\n                //   mapApi.geometryUtils.getMaxExtent(geometries).then(extent => {\n                //     mapview.extent = extent.expand(2);\n                //   });\n                // }\n                // if (popup && list.length > 0) {\n                //   mapApi.popup.show({\n                //     mapView: mapView,\n                //     res: list[0],\n                //     centerPt: pts[0],\n                //     pan: pan\n                //   });\n                // }\n              });\n            });\n          }\n        }); // this.getData(value);\n        // onemap.pubsub.publish(\"clear\");\n        // onemap.pubsub.publish(\"drawMarkerByList\", {\n        //   list: this.list\n        // });\n      } else {\n        debugger;\n        window.mapview.map.remove(this.gjLayer);\n      }\n    },\n    getData: function getData(value) {\n      var _this3 = this;\n\n      debugger;\n      this.houseName = housueName.state.housueName;\n      Server.get({\n        url: services.road,\n        params: {\n          name: this.houseName,\n          tableName: value,\n          distance: this.distance\n        }\n      }).then(function (rsp) {\n        var _this = _this3;\n\n        if (rsp.status === 1) {\n          _this.list = rsp.data;\n        }\n      });\n    }\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: \"图层\"\n    }\n  }\n};",{"version":3,"sources":["layerView.vue"],"names":[],"mappings":"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","sourcesContent":["\n <template>\n  <div class=\"layerManager\" v-show=\"active\">\n    <tabs>\n      <span class=\"icon layerClose\" style=\"margin-top: 4px;\" title=\"关闭全部图层\" slot=\"extra\"></span>\n      <tab-pane name=\"layer\" :label=\"label\">\n        <ul>\n          <li>\n            <span>\n              <Checkbox v-model=\"gj\" @on-change=\"changegj\">\n                <span class=\"layerIcon l-layer\"></span>公交</Checkbox>\n            </span>\n          </li>\n          <span>\n            <Checkbox v-model=\"cz\">\n              <span class=\"layerIcon l-layer\"></span>车站</Checkbox>\n          </span>\n          <li>\n            <span>\n              <Checkbox v-model=\"yl\">\n                <span class=\"layerIcon l-layer\"></span>医疗设施</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"school\">\n                <span class=\"layerIcon l-layer\"></span>学校</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"yl\">\n                <span class=\"layerIcon l-layer\"></span>休闲娱乐</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"gy\">\n                <span class=\"layerIcon l-layer\"></span>公园</Checkbox>\n            </span>\n          </li>\n        </ul>\n      </tab-pane>\n    </tabs>\n  </div>\n</template> \n<script>\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport housueName from \"@/vuex/store\";\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\nimport { MapAPI } from \"@/core/config/const\";\nexport default {\n  data() {\n    return {\n      gj: true,\n      cz: false,\n      yl: false,\n      school: false,\n      yl: false,\n      gy: false,\n      gjLayer: \"\",\n      houseName: \"\",\n      list: []\n    };\n  },\n  methods: {\n    changegj() {\n      if (this.gj == true) {\n        debugger;\n        var value = \"BUSSTATION\";\n        this.houseName = housueName.state.housueName;\n        Server.get({\n          url: services.road,\n          params: {\n            name: this.houseName,\n            tableName: value,\n              distance:this.distance\n          }\n        }).then(rsp => {\n          var _this = this;\n          if (rsp.status === 1) {\n            _this.list = rsp.data;\n            mapApi.esriApi.GetGraphic().then(Graphic => {\n              var geometryParse = [];\n              this.list.forEach((item, index) => {\n                geometryParse.push(\n                  mapApi.convert.toGeometryByWKT.parse({\n                    wkt: item.Shape,\n                    spatialReference: window.mapview.spatialReference\n                  })\n                );\n              });\n              Promise.all(geometryParse).then(geometries => {\n                var pts = [];\n                var graphics = [];\n                geometries.forEach((geometry, index) => {\n                  var pt = null;\n                  if (geometry !== null) {\n                    if (geometry.type === \"point\") {\n                      pt = geometry;\n                    } else {\n                      pt = geometry.extent.center;\n                    }\n                    pts.push(pt);\n                  }\n                  var item = this.list[index];\n                  var symbol = GMapSymbol.getMarkerPoiSymbol({});\n                  var graphic = new Graphic({\n                    geometry: pt,\n                    symbol: symbol,\n                    attributes: {\n                      id: item.pIndex,\n                      attr: item,\n                      centerPt: pt,\n                      marker: true,\n                      popup: true\n                    }\n                  });\n                  graphics.push(graphic);\n                });\n\n                mapApi.esriApi.GetGraphicsLayer().then(GraphicsLayer => {\n                  this.gjLayer = new GraphicsLayer({});\n                  this.gjLayer.graphics.addMany(graphics);\n                  window.mapview.map.add(this.gjLayer);\n                });\n\n                // if (layer === null) {\n                //   mapview.graphics.addMany(graphics);\n                // } else {\n                //   layer.graphics.addMany(graphics);\n                // }\n                // if (extent) {\n                //   mapApi.geometryUtils.getMaxExtent(geometries).then(extent => {\n                //     mapview.extent = extent.expand(2);\n                //   });\n                // }\n\n                // if (popup && list.length > 0) {\n                //   mapApi.popup.show({\n                //     mapView: mapView,\n                //     res: list[0],\n                //     centerPt: pts[0],\n                //     pan: pan\n                //   });\n                // }\n              });\n            });\n          }\n        });\n\n        // this.getData(value);\n        // onemap.pubsub.publish(\"clear\");\n\n        // onemap.pubsub.publish(\"drawMarkerByList\", {\n        //   list: this.list\n        // });\n      } else {\n        debugger;\n        window.mapview.map.remove(this.gjLayer);\n      }\n    },\n    getData(value) {\n      debugger;\n      this.houseName = housueName.state.housueName;\n      Server.get({\n        url: services.road,\n        params: {\n          name: this.houseName,\n          tableName: value,\n            distance:this.distance\n        }\n      }).then(rsp => {\n        var _this = this;\n        if (rsp.status === 1) {\n          _this.list = rsp.data;\n        }\n      });\n    }\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: \"图层\"\n    }\n  }\n};\n</script>\n<style >\n.esri-view-height-small .esri-expand .esri-widget--panel,\n.esri-view-height-small .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    max-height: 206px;\n    width: 206px;\n    margin-top: 80px;\n    margin-right: 65px;\n    display: none;\n}\n\n.esri-view-height-xsmall .esri-expand .esri-widget--panel,\n.esri-view-height-xsmall .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    display: none;\n}\n\n</style>\n\n      <!-- <tab-pane name=\"layer\" :label=\"label\">\n        <section :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='layer'\"> -->\n          <!-- <tree-view ref=\"tree\" \n            :mapView=\"mapView\" \n            :treeData=\"layerList\"\n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"\n            @on-group-check-change=\"onGroupCheckChange\"/> -->\n        <!-- </section>\n      </tab-pane> -->\n      <!-- <tab-pane name=\"favour\" v-if=\"!isOut\" label=\"收藏\" >\n        <section :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='favour'\">\n          <tree-view ref=\"treeFav\" \n            :mapView=\"mapView\" \n            :treeData=\"favLayerList\" \n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"/>\n        </section>\n      </tab-pane>\n      <tab-pane name=\"recent\" v-if=\"!isOut\" label=\"最近\">\n        <section  :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='recent'\">\n          <tree-view ref=\"treeRecent\" \n            :mapView=\"mapView\" \n            :treeData=\"recentLayerList\"\n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"/>\n        </section>\n      </tab-pane>\n      <tab-pane name=\"legend\" label=\"图例\">\n        <section   v-if=\"visible\" v-show=\"tabName==='legend'\">\n          <legend-view :data=\"legendList\" :legend=\"legend\" :height=\"maxHeight\"/>\n        </section>\n      </tab-pane> -->\n    <!-- </tabs>\n  </div>\n\n\n\n\n  \n\n\n\n"],"sourceRoot":"src\\map\\components"}]}