{"remainingRequest":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js!E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\src\\views\\locationResources\\components\\medicalResources.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\src\\views\\locationResources\\components\\medicalResources.vue","mtime":1583567173002},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\网络招聘大数据分析与可视化系统\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"E:\\\\\\u7F51\\u7EDC\\u62DB\\u8058\\u5927\\u6570\\u636E\\u5206\\u6790\\u4E0E\\u53EF\\u89C6\\u5316\\u7CFB\\u7EDF\\\\jobData_Analysis\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SiderMenu from \"@/views/main/siderMenu\";\nimport smallMapView from \"@/map/components/smallMapView\";\nimport serverArea from \"@/map/components/serverArea\";\nimport esriLoader from \"esri-loader\";\nimport { MapAPI } from \"@/core/config/const\";\nimport Register from \"@/map/api/register\";\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport measureArea from \"@/map/components/measureArea\";\nimport measureLength from \"@/map/components/measureLength\";\nimport MapToolsView from \"@/map/components/MapToolsView\";\nimport GDrawSketch from \"@/map/api/4+/GDrawSketch\";\nimport GConvertGeometry from \"@/map/api/js/convert/GConvertGeometry\";\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\nimport housePoint from \"@/vuex/store\";\nexport default {\n  created: function created() {\n    var _this2 = this;\n\n    Server.get({\n      url: services.getEA,\n      params: {}\n    }).then(function (rsp) {\n      var _this = _this2;\n      debugger;\n\n      if (rsp.status === 1) {\n        _this.data1 = rsp.data;\n      }\n    });\n  },\n  data: function data() {\n    return {\n      value1: 500,\n      break1: 300,\n      break2: 800,\n      break3: 1200,\n      columns1: [{\n        title: \"小区\",\n        key: \"houseName\",\n        align: \"center\"\n      }, {\n        title: \"小区到教育资源可达性\",\n        key: \"accessibilityLevel\",\n        align: \"center\"\n      }],\n      data1: []\n    };\n  },\n  mounted: function mounted() {\n    this.addLayer2();\n    this.addLayer3();\n  },\n  methods: {\n    addLayer2: function addLayer2() {\n      var _this3 = this;\n\n      esriLoader.loadScript({\n        url: MapAPI.js,\n        css: MapAPI.css\n      }).then(function (r) {\n        esriLoader.loadModules([\"esri/config\", \"esri/Map\", \"esri/layers/GroupLayer\", \"esri/Basemap\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/TileLayer\", \"esri/tasks/ServiceAreaTask\", \"esri/layers/FeatureLayer\", \"esri/tasks/support/DataLayer\", \"esri/tasks/support/ServiceAreaParameters\", \"esri/tasks/support/ServiceAreaSolveResult\", \"esri/symbols/SimpleLineSymbol\", \"esri/symbols/SimpleFillSymbol\", \"esri/Color\", \"esri/layers/GraphicsLayer\", \"esri/geometry/Extent\", \"esri/widgets/LayerList\", \"esri/Graphic\", \"esri/tasks/support/FeatureSet\", \"dojo/on\"]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 22),\n              esriConfig = _ref2[0],\n              Map = _ref2[1],\n              GroupLayer = _ref2[2],\n              Basemap = _ref2[3],\n              MapView = _ref2[4],\n              MapImageLayer = _ref2[5],\n              TileLayer = _ref2[6],\n              ServiceAreaTask = _ref2[7],\n              FeatureLayer = _ref2[8],\n              DataLayer = _ref2[9],\n              ServiceAreaParameters = _ref2[10],\n              ServiceAreaSolveResult = _ref2[11],\n              SimpleLineSymbol = _ref2[12],\n              SimpleFillSymbol = _ref2[13],\n              Color = _ref2[14],\n              GraphicsLayer = _ref2[15],\n              Extent = _ref2[16],\n              LayerList = _ref2[17],\n              Graphic = _ref2[18],\n              FeatureSet = _ref2[19],\n              dom = _ref2[20],\n              on = _ref2[21];\n\n          esriConfig.request.corsEnabledServers.push(\"http://122.112.216.247:6080\");\n          var activeWidget = null;\n          var tilelayer = new TileLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\n          });\n          var layer = new FeatureLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/MapServer/8\"\n          });\n          _this3.baseLayer = tilelayer;\n          var baseMap = new Basemap({\n            baseLayers: [tilelayer]\n          });\n          var map = new Map({\n            basemap: baseMap,\n            layers: [tilelayer, layer]\n          });\n          _this3.map = map;\n          _this3.mapview = new MapView({\n            container: \"map2\",\n            map: map\n          });\n\n          _this3.mapview.ui.remove([\"attribution\", \"zoom\"]);\n\n          var view = _this3.mapview;\n          var stops = new DataLayer();\n          stops.geometry = view.extent;\n          stops.name = \"Hospitals\";\n          console.log(map); // var houseSymbol = GMapSymbol.gethousePointSymbol({});\n          // this.houseSymbol = houseSymbol;\n          // var stopSymbol = {\n          //   type: \"simple-marker\",\n          //   style: \"cross\",\n          //   size: 15,\n          //   outline: {\n          //     width: 4\n          //   }\n          // };\n          // this.stopSymbol = stopSymbol;\n          // var routeSymbol = {\n          //   type: \"simple-line\",\n          //   color: [82, 152, 255, 1],\n          //   width: 5\n          // };\n          // this.routeSymbol = routeSymbol;\n\n          var serverParams = new ServiceAreaParameters({\n            facilities: {\n              type: \"layer\",\n              layerName: \"Hospitals\" // where: \"BEDS > 100\"\n\n            },\n            defaultBreaks: [_this3.break1, _this3.break2, _this3.break3] // outSpatialReference: {\n            //   wkid: 3857\n            // }\n\n          });\n          var serviceAreaTask = new ServiceAreaTask({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/NAServer/ServiceArea\"\n          });\n          serviceAreaTask.solve(serverParams).then(function (solveResult) {\n            // console.log(solveResult.serviceAreaPolygons);\n            var AreaPolygons = solveResult.serviceAreaPolygons;\n            console.log(AreaPolygons);\n            var polygonSymbol = new SimpleFillSymbol(\"solid\", new SimpleLineSymbol(\"solid\", new Color([232, 104, 80])), new Color([232, 104, 80, 0.25]));\n            AreaPolygons.forEach(function (AreaPolygons, index) {\n              // var symbol = GMapSymbol.getSymbol(geometry);\n              var graphics = [];\n              var graphic = new Graphic({\n                geometry: AreaPolygons.geometry,\n                symbol: polygonSymbol\n              });\n              graphics.push(graphic);\n              view.graphics.addMany(graphics);\n            }); // AreaPolygons.forEach(function(e) {\n            //   var polygonSymbol = new SimpleFillSymbol(\n            //     \"solid\",\n            //     new SimpleLineSymbol(\n            //       \"solid\",\n            //       new Color([232, 104, 80])\n            //     ),\n            //     new Color([232, 104, 80, 0.25])\n            //   );\n            //   e.setSymbol(polygonSymbol);\n            //   console.log(e);\n            //   debugger;\n            //   // var graphic = new Graphic({\n            //   //   geometry: e\n            //   // });\n            //   // graphic.setSymbol(polygonSymbol);\n            //   map.graphics.add(graphic);\n            //   console.log(map);\n            // });\n            // AreaPolygons.forEach(\n            //   solveResult.serviceAreaPolygons,\n            //   function(serviceArea) {\n            //     debugger;\n            //     serviceArea.setSymbol(polygonSymbol);\n            //     this.map.graphics.add(serviceArea);\n            //   }\n            // );\n          }, function (err) {\n            console.log(err.message);\n          }); // onemap.pubsub.publish(\"drawPolygonByGeoJson\", {\n          //   list: this.serverPolygon,\n          //   extent: true\n          // });\n        }); // this.routeTask = routeTask;\n        // var ext = String(this.defaultMapExtent).split(\",\");\n        // if (ext.length > 3) {\n        //   console.log(\"extent 配置有误\");\n        //   return false;\n        // }\n        // var zoom = parseInt(ext[2]);\n        // var center = {\n        //   x: parseFloat(ext[0]),\n        //   y: parseFloat(ext[1]),\n        //   spatialReference: this.spatialReference\n        // };\n        // view.when(function() {\n        //   var layerList = new LayerList({\n        //     view: view\n        //   });\n        //   view.ui.add(layerList, \"top-right\");\n        // });\n        // this.mapview.initExtent = {\n        //   center: center,\n        //   zoom: zoom\n        // };\n\n        window.mapview = _this3.mapview; // callback(this.mapview);\n\n        _this3.IsMapToolsView = true;\n      });\n    },\n    getArea: function getArea() {\n      this.addLayer2();\n    },\n    getDis: function getDis() {\n      this.addLayer3();\n    },\n    addLayer3: function addLayer3() {\n      var _this4 = this;\n\n      esriLoader.loadScript({\n        url: MapAPI.js,\n        css: MapAPI.css\n      }).then(function (r) {\n        esriLoader.loadModules([\"esri/Map\", \"esri/Basemap\", \"esri/views/MapView\", \"esri/layers/MapImageLayer\", \"esri/layers/TileLayer\", \"esri/tasks/support/LinearUnit\", \"esri/layers/FeatureLayer\", \"esri/tasks/QueryTask\", \"esri/tasks/support/Query\", \"esri/tasks/Geoprocessor\", \"esri/tasks/support/FeatureSet\"]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 12),\n              Map = _ref4[0],\n              Basemap = _ref4[1],\n              MapView = _ref4[2],\n              MapImageLayer = _ref4[3],\n              TileLayer = _ref4[4],\n              LinearUnit = _ref4[5],\n              FeatureLayer = _ref4[6],\n              QueryTask = _ref4[7],\n              Query = _ref4[8],\n              Geoprocessor = _ref4[9],\n              dom = _ref4[10],\n              on = _ref4[11];\n\n          var activeWidget = null; // var street = new MapImageLayer({\n          //   url:\n          //     \"http://122.112.216.247:6080/arcgis/rest/services/Server/MAP/MapServer\"\n          // });\n\n          var street = new TileLayer({\n            url: \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\n          });\n          var dis = new LinearUnit({\n            distance: _this4.value1,\n            units: \"esriMeters\"\n          });\n          _this4.distance = dis;\n          var baseMap = new Basemap({\n            baseLayers: [street]\n          });\n          var map = new Map({\n            basemap: baseMap // layers: [layer]\n\n          });\n          _this4.myMap = map;\n          _this4.mapViewL = new MapView({\n            container: \"map3\",\n            map: map\n          });\n          var gwrPOint = \"http://122.112.216.247:6080/arcgis/rest/services/Servers/gwrfeature/MapServer/0\";\n          var queryTask = new QueryTask({\n            url: gwrPOint\n          });\n          var query = new Query();\n          query.returnGeometry = true;\n          query.outFields = [\"*\"];\n          query.where = \"PRICE>='3946'\"; // queryTask.execute(query, this.doGP);\n          // queryTask.execute(query).then(function(results) {\n          //   this.doGP(results);\n          // });\n\n          queryTask.execute(query).then(_this4.doGP);\n        });\n      });\n    },\n    doGP: function doGP(featureSet) {\n      var _this5 = this;\n\n      var gpUrl = \"http://122.112.216.247:6080/arcgis/rest/services/Servers/buffer/GPServer/buffer\";\n      mapApi.esriApi.GetGeoprocessor().then(function (Geoprocessor) {\n        var _this = _this5;\n        var Kriging_GP = new Geoprocessor(gpUrl);\n        var parms = {\n          SDE_DJGWR: featureSet,\n          Distance__value_or_field_: _this5.distance\n        };\n        Kriging_GP.submitJob(parms).then(function (jobinfo) {\n          if (jobinfo.jobStatus == \"job-succeeded\") {\n            Kriging_GP.getResultData(jobinfo.jobId, \"Output_Feature_Class\").then(function (results) {\n              console.log(\"projected points: \", results.value);\n              var GwrPoint = results.value.features;\n              var polygonSymbol = {\n                type: \"simple-fill\",\n                // autocasts as new SimpleFillSymbol()\n                color: [51, 51, 204, 0.3],\n                style: \"solid\",\n                outline: {\n                  // autocasts as new SimpleLineSymbol()\n                  color: \"blue\",\n                  width: 0.5\n                }\n              };\n              GwrPoint.forEach(function (GwrPoint, index) {\n                mapApi.esriApi.GetGraphic().then(function (Graphic) {\n                  var graphics = [];\n                  var graphic = new Graphic({\n                    geometry: GwrPoint.geometry,\n                    symbol: polygonSymbol\n                  });\n                  graphics.push(graphic);\n                  console.log(graphics);\n\n                  _this.mapViewL.graphics.addMany(graphics);\n                });\n              });\n              console.log(GwrPoints);\n            });\n          }\n        });\n      }); //   Kriging_GP.submitJob(params).then(this.gpJobComplete);\n    }\n  },\n  components: {\n    SiderMenu: SiderMenu,\n    smallMapView: smallMapView,\n    serverArea: serverArea\n  }\n};",{"version":3,"sources":["medicalResources.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"layout\">\r\n        <Layout :style=\"{height:'100%'}\">\r\n            <Sider ref=\"side1\" :width='180'>\r\n                <sider-menu/>\r\n            </Sider>\r\n            <Content>\r\n                <Header :style=\"{padding: 0}\" class=\"layout-header-bar\">\r\n                    <Breadcrumb>\r\n                        <Icon :class=\"rotateIcon\" :style=\"{margin: '0 5px'}\" type=\"md-menu\" size=\"25\"></Icon>\r\n                        <BreadcrumbItem v-for=\"(item,idx) in $route.matched\" :key=\"idx\" :to=\"(item.path)\">{{item.name}}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                </Header>\r\n                <div style=\"width: 1300px; margin: 0 auto;margin-top: 30px;border: 1px solid #dcdee2\">\r\n                    <Tabs>\r\n                        <TabPane label=\"医疗\">\r\n                            <div id=\"map1\" style=\"width:100%;height: 100%;border: 1px solid #dcdee2; position: absolute;\">\r\n                                <smallMapView></smallMapView>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane label=\"服务区\">\r\n                            <div id=\"map2\" style=\"width:100%;height: 100%;position: absolute;background-color: #FCF9F2\"></div>\r\n                            <div style=\"position: relative;float: right; width: 250px;top: 420px;background-color: #FCF9F2;padding: 10px;opacity: 0.8\">\r\n                                <Col span=\"20\">\r\n                                <Slider v-model=\"break1\" max=\"500\" show-input input-size=\"small\" @on-change=\"getArea\"></Slider>\r\n                                </Col>\r\n                                <Col span=\"4\">\r\n                                <p style=\"margin: 7px\">米</p>\r\n                                </Col>\r\n                                <Col span=\"20\">\r\n                                <Slider v-model=\"break2\" max=\"1000\" show-input input-size=\"small\" @on-change=\"getArea\"></Slider>\r\n                                </Col>\r\n                                <Col span=\"4\">\r\n                                <p style=\"margin: 7px\">米</p>\r\n                                </Col>\r\n                                <Col span=\"20\">\r\n                                <Slider v-model=\"break3\" max=\"1500\" show-input input-size=\"small\" @on-change=\"getArea\"></Slider>\r\n                                </Col>\r\n                                <Col span=\"4\">\r\n                                <p style=\"margin: 7px\">米</p>\r\n                                </Col>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane label=\"缓冲区\">\r\n                            <div id=\"map3\" style=\"width:100%;height: 800px;position: absolute;background-color: #FCF9F2\"></div>\r\n                            <div style=\"position: relative;float: right; width: 250px;margin: 10px;padding-top: 500px;z-index: 9999\">\r\n                                <Col span=\"2\">\r\n                                <p style=\"margin: 7px\">0</p>\r\n                                </Col>\r\n                                <Col span=\"18\">\r\n                                <Slider v-model=\"value1\" max=\"1500\" show-input input-size=\"small\" @on-change=\"getDis\"></Slider>\r\n                                </Col>\r\n                                <Col span=\"4\">\r\n                                <p style=\"margin: 7px\">米</p>\r\n                                </Col>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane label=\"可达性\">\r\n                            <div class=\"map4\">\r\n                                <Table :columns=\"columns1\" stripe :data=\"data1\" height=\"550\"></Table>\r\n                            </div>\r\n                            <div style=\"padding-top: 50px;position: relative;float: right; z-index: 9999;\">\r\n                                <CheckboxGroup>\r\n                                    <Checkbox label=\"引力模型\"></Checkbox>\r\n                                    <br>\r\n                                    <Checkbox label=\"引力模型\"></Checkbox>\r\n                                    <br>\r\n                                    <Checkbox label=\"两步移动\"></Checkbox>\r\n                                    <br>\r\n                                    <Checkbox label=\"两步移动\"></Checkbox>\r\n                                </CheckboxGroup>\r\n                            </div>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            </Content>\r\n        </Layout>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport SiderMenu from \"@/views/main/siderMenu\";\r\nimport smallMapView from \"@/map/components/smallMapView\";\r\nimport serverArea from \"@/map/components/serverArea\";\r\nimport esriLoader from \"esri-loader\";\r\nimport { MapAPI } from \"@/core/config/const\";\r\nimport Register from \"@/map/api/register\";\r\nimport Server from \"@/core/server\";\r\nimport { services } from \"@/core/config/services\";\r\nimport measureArea from \"@/map/components/measureArea\";\r\nimport measureLength from \"@/map/components/measureLength\";\r\nimport MapToolsView from \"@/map/components/MapToolsView\";\r\nimport GDrawSketch from \"@/map/api/4+/GDrawSketch\";\r\nimport GConvertGeometry from \"@/map/api/js/convert/GConvertGeometry\";\r\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\r\nimport housePoint from \"@/vuex/store\";\r\n\r\nexport default {\r\n  created() {\r\n    Server.get({\r\n      url: services.getEA,\r\n      params: {}\r\n    }).then(rsp => {\r\n      var _this = this;\r\n      debugger;\r\n      if (rsp.status === 1) {\r\n        _this.data1 = rsp.data;\r\n      }\r\n    });\r\n  },\r\n  data() {\r\n    return {\r\n      value1: 500,\r\n      break1: 300,\r\n      break2: 800,\r\n      break3: 1200,\r\n      columns1: [\r\n        {\r\n          title: \"小区\",\r\n          key: \"houseName\",\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"小区到教育资源可达性\",\r\n          key: \"accessibilityLevel\",\r\n          align: \"center\"\r\n        }\r\n      ],\r\n      data1: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.addLayer2();\r\n    this.addLayer3();\r\n  },\r\n\r\n  methods: {\r\n    addLayer2() {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/config\",\r\n              \"esri/Map\",\r\n              \"esri/layers/GroupLayer\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/tasks/ServiceAreaTask\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/tasks/support/DataLayer\",\r\n              \"esri/tasks/support/ServiceAreaParameters\",\r\n              \"esri/tasks/support/ServiceAreaSolveResult\",\r\n              \"esri/symbols/SimpleLineSymbol\",\r\n              \"esri/symbols/SimpleFillSymbol\",\r\n              \"esri/Color\",\r\n              \"esri/layers/GraphicsLayer\",\r\n              \"esri/geometry/Extent\",\r\n              \"esri/widgets/LayerList\",\r\n              \"esri/Graphic\",\r\n              \"esri/tasks/support/FeatureSet\",\r\n              \"dojo/on\"\r\n            ])\r\n            .then(\r\n              ([\r\n                esriConfig,\r\n                Map,\r\n                GroupLayer,\r\n                Basemap,\r\n                MapView,\r\n                MapImageLayer,\r\n                TileLayer,\r\n                ServiceAreaTask,\r\n                FeatureLayer,\r\n                DataLayer,\r\n                ServiceAreaParameters,\r\n                ServiceAreaSolveResult,\r\n                SimpleLineSymbol,\r\n                SimpleFillSymbol,\r\n                Color,\r\n                GraphicsLayer,\r\n                Extent,\r\n                LayerList,\r\n                Graphic,\r\n                FeatureSet,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                esriConfig.request.corsEnabledServers.push(\r\n                  \"http://122.112.216.247:6080\"\r\n                );\r\n                var activeWidget = null;\r\n\r\n                var tilelayer = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\r\n                });\r\n                var layer = new FeatureLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/MapServer/8\"\r\n                });\r\n                this.baseLayer = tilelayer;\r\n\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [tilelayer]\r\n                });\r\n\r\n                var map = new Map({\r\n                  basemap: baseMap,\r\n                  layers: [tilelayer, layer]\r\n                });\r\n                this.map = map;\r\n                this.mapview = new MapView({\r\n                  container: \"map2\",\r\n                  map: map\r\n                });\r\n\r\n                this.mapview.ui.remove([\"attribution\", \"zoom\"]);\r\n                var view = this.mapview;\r\n                var stops = new DataLayer();\r\n                stops.geometry = view.extent;\r\n                stops.name = \"Hospitals\";\r\n                console.log(map);\r\n                // var houseSymbol = GMapSymbol.gethousePointSymbol({});\r\n                // this.houseSymbol = houseSymbol;\r\n                // var stopSymbol = {\r\n                //   type: \"simple-marker\",\r\n                //   style: \"cross\",\r\n                //   size: 15,\r\n                //   outline: {\r\n                //     width: 4\r\n                //   }\r\n                // };\r\n                // this.stopSymbol = stopSymbol;\r\n                // var routeSymbol = {\r\n                //   type: \"simple-line\",\r\n\r\n                //   color: [82, 152, 255, 1],\r\n                //   width: 5\r\n                // };\r\n                // this.routeSymbol = routeSymbol;\r\n                var serverParams = new ServiceAreaParameters({\r\n                  facilities: {\r\n                    type: \"layer\",\r\n                    layerName: \"Hospitals\"\r\n                    // where: \"BEDS > 100\"\r\n                  },\r\n                  defaultBreaks: [this.break1, this.break2, this.break3]\r\n                  // outSpatialReference: {\r\n                  //   wkid: 3857\r\n                  // }\r\n                });\r\n\r\n                var serviceAreaTask = new ServiceAreaTask({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/NAServer/ServiceArea\"\r\n                });\r\n                serviceAreaTask.solve(serverParams).then(\r\n                  solveResult => {\r\n                    // console.log(solveResult.serviceAreaPolygons);\r\n                    var AreaPolygons = solveResult.serviceAreaPolygons;\r\n                    console.log(AreaPolygons);\r\n                    var polygonSymbol = new SimpleFillSymbol(\r\n                      \"solid\",\r\n                      new SimpleLineSymbol(\"solid\", new Color([232, 104, 80])),\r\n                      new Color([232, 104, 80, 0.25])\r\n                    );\r\n                    AreaPolygons.forEach((AreaPolygons, index) => {\r\n                      // var symbol = GMapSymbol.getSymbol(geometry);\r\n                      var graphics = [];\r\n                      var graphic = new Graphic({\r\n                        geometry: AreaPolygons.geometry,\r\n                        symbol: polygonSymbol\r\n                      });\r\n                      graphics.push(graphic);\r\n                      view.graphics.addMany(graphics);\r\n                    });\r\n                    // AreaPolygons.forEach(function(e) {\r\n                    //   var polygonSymbol = new SimpleFillSymbol(\r\n                    //     \"solid\",\r\n                    //     new SimpleLineSymbol(\r\n                    //       \"solid\",\r\n                    //       new Color([232, 104, 80])\r\n                    //     ),\r\n                    //     new Color([232, 104, 80, 0.25])\r\n                    //   );\r\n                    //   e.setSymbol(polygonSymbol);\r\n                    //   console.log(e);\r\n                    //   debugger;\r\n                    //   // var graphic = new Graphic({\r\n                    //   //   geometry: e\r\n                    //   // });\r\n                    //   // graphic.setSymbol(polygonSymbol);\r\n                    //   map.graphics.add(graphic);\r\n                    //   console.log(map);\r\n                    // });\r\n                    // AreaPolygons.forEach(\r\n                    //   solveResult.serviceAreaPolygons,\r\n                    //   function(serviceArea) {\r\n                    //     debugger;\r\n                    //     serviceArea.setSymbol(polygonSymbol);\r\n                    //     this.map.graphics.add(serviceArea);\r\n                    //   }\r\n                    // );\r\n                  },\r\n                  function(err) {\r\n                    console.log(err.message);\r\n                  }\r\n                );\r\n\r\n                // onemap.pubsub.publish(\"drawPolygonByGeoJson\", {\r\n                //   list: this.serverPolygon,\r\n                //   extent: true\r\n                // });\r\n              }\r\n            );\r\n\r\n          // this.routeTask = routeTask;\r\n          // var ext = String(this.defaultMapExtent).split(\",\");\r\n          // if (ext.length > 3) {\r\n          //   console.log(\"extent 配置有误\");\r\n          //   return false;\r\n          // }\r\n          // var zoom = parseInt(ext[2]);\r\n          // var center = {\r\n          //   x: parseFloat(ext[0]),\r\n          //   y: parseFloat(ext[1]),\r\n          //   spatialReference: this.spatialReference\r\n          // };\r\n\r\n          // view.when(function() {\r\n          //   var layerList = new LayerList({\r\n          //     view: view\r\n          //   });\r\n          //   view.ui.add(layerList, \"top-right\");\r\n          // });\r\n          // this.mapview.initExtent = {\r\n          //   center: center,\r\n          //   zoom: zoom\r\n          // };\r\n          window.mapview = this.mapview;\r\n          // callback(this.mapview);\r\n          this.IsMapToolsView = true;\r\n        });\r\n    },\r\n    getArea() {\r\n      this.addLayer2();\r\n    },\r\n    getDis() {\r\n      this.addLayer3();\r\n    },\r\n    addLayer3() {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/Map\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/tasks/support/LinearUnit\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/tasks/QueryTask\",\r\n              \"esri/tasks/support/Query\",\r\n              \"esri/tasks/Geoprocessor\",\r\n              \"esri/tasks/support/FeatureSet\"\r\n            ])\r\n            .then(\r\n              ([\r\n                Map,\r\n                Basemap,\r\n                MapView,\r\n                MapImageLayer,\r\n                TileLayer,\r\n                LinearUnit,\r\n                FeatureLayer,\r\n                QueryTask,\r\n                Query,\r\n                Geoprocessor,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                var activeWidget = null;\r\n\r\n                // var street = new MapImageLayer({\r\n                //   url:\r\n                //     \"http://122.112.216.247:6080/arcgis/rest/services/Server/MAP/MapServer\"\r\n                // });\r\n                var street = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\r\n                });\r\n                var dis = new LinearUnit({\r\n                  distance: this.value1,\r\n                  units: \"esriMeters\"\r\n                });\r\n                this.distance = dis;\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [street]\r\n                });\r\n                var map = new Map({\r\n                  basemap: baseMap\r\n                  // layers: [layer]\r\n                });\r\n                this.myMap = map;\r\n\r\n                this.mapViewL = new MapView({\r\n                  container: \"map3\",\r\n                  map: map\r\n                });\r\n                var gwrPOint =\r\n                  \"http://122.112.216.247:6080/arcgis/rest/services/Servers/gwrfeature/MapServer/0\";\r\n\r\n                var queryTask = new QueryTask({\r\n                  url: gwrPOint\r\n                });\r\n                var query = new Query();\r\n                query.returnGeometry = true;\r\n                query.outFields = [\"*\"];\r\n                query.where = \"PRICE>='3946'\";\r\n                // queryTask.execute(query, this.doGP);\r\n                // queryTask.execute(query).then(function(results) {\r\n                //   this.doGP(results);\r\n                // });\r\n\r\n                queryTask.execute(query).then(this.doGP);\r\n              }\r\n            );\r\n        });\r\n    },\r\n    doGP(featureSet) {\r\n      var gpUrl =\r\n        \"http://122.112.216.247:6080/arcgis/rest/services/Servers/buffer/GPServer/buffer\";\r\n      mapApi.esriApi.GetGeoprocessor().then(Geoprocessor => {\r\n        var _this = this;\r\n        var Kriging_GP = new Geoprocessor(gpUrl);\r\n        var parms = {\r\n          SDE_DJGWR: featureSet,\r\n          Distance__value_or_field_: this.distance\r\n        };\r\n        Kriging_GP.submitJob(parms).then(jobinfo => {\r\n          if (jobinfo.jobStatus == \"job-succeeded\") {\r\n            Kriging_GP.getResultData(\r\n              jobinfo.jobId,\r\n              \"Output_Feature_Class\"\r\n            ).then(function(results) {\r\n              console.log(\"projected points: \", results.value);\r\n              var GwrPoint = results.value.features;\r\n              var polygonSymbol = {\r\n                type: \"simple-fill\", // autocasts as new SimpleFillSymbol()\r\n                color: [51, 51, 204, 0.3],\r\n                style: \"solid\",\r\n                outline: {\r\n                  // autocasts as new SimpleLineSymbol()\r\n                  color: \"blue\",\r\n                  width: 0.5\r\n                }\r\n              };\r\n              GwrPoint.forEach((GwrPoint, index) => {\r\n                mapApi.esriApi.GetGraphic().then(Graphic => {\r\n                  let graphics = [];\r\n                  let graphic = new Graphic({\r\n                    geometry: GwrPoint.geometry,\r\n                    symbol: polygonSymbol\r\n                  });\r\n                  graphics.push(graphic);\r\n                  console.log(graphics);\r\n                  _this.mapViewL.graphics.addMany(graphics);\r\n                });\r\n              });\r\n\r\n              console.log(GwrPoints);\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      //   Kriging_GP.submitJob(params).then(this.gpJobComplete);\r\n    }\r\n  },\r\n  components: {\r\n    SiderMenu,\r\n    smallMapView,\r\n    serverArea\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.ivu-tabs-tabpane {\r\n  height: 550px;\r\n}\r\n.ivu-tabs-bar {\r\n  margin-bottom: 0;\r\n}\r\n#tab {\r\n  width: 80%;\r\n  border: 1px solid #dcdee2;\r\n  margin: 0 auto;\r\n}\r\n#tab h3 {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  float: left;\r\n  right: 5px;\r\n  width: 60px;\r\n  height: 24px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n}\r\n#tab div {\r\n  clear: both;\r\n  font-size: 14px;\r\n  /*padding: 20px 0 0 20px;*/\r\n  display: none;\r\n}\r\n#tab h3.active {\r\n  /*background: #cccc00;*/\r\n}\r\n#tab div.content {\r\n  display: block;\r\n  /*background: #cccc00;*/\r\n}\r\n\r\n.layout {\r\n  //   border: 1px solid #d7dde4;\r\n  background: #f5f7f9;\r\n  position: relative;\r\n  border-radius: 4px;\r\n  overflow-y: hidden;\r\n  height: 1000px;\r\n}\r\n.layout-header-bar {\r\n  background: #fff;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);\r\n}\r\n.layout-logo-left {\r\n  width: 90%;\r\n  height: 30px;\r\n  background: #5b6270;\r\n  border-radius: 3px;\r\n  margin: 15px auto;\r\n}\r\n.menu-icon {\r\n  transition: all 0.3s;\r\n}\r\n.rotate-icon {\r\n  transform: rotate(-90deg);\r\n}\r\n.menu-item span {\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  width: 69px;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  vertical-align: bottom;\r\n  transition: width 0.2s ease 0.2s;\r\n}\r\n.menu-item i {\r\n  transform: translateX(0px);\r\n  transition: font-size 0.2s ease, transform 0.2s ease;\r\n  vertical-align: middle;\r\n  font-size: 16px;\r\n}\r\n.collapsed-menu span {\r\n  width: 0px;\r\n  transition: width 0.2s ease;\r\n}\r\n.collapsed-menu i {\r\n  transform: translateX(5px);\r\n  transition: font-size 0.2s ease 0.2s, transform 0.2s ease 0.2s;\r\n  vertical-align: middle;\r\n  font-size: 22px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\views\\locationResources\\components"}]}