{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\map\\api\\4+\\GEsriApi.js","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\map\\api\\4+\\GEsriApi.js","mtime":1563098587000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\03 \\u8BA1\\u7B97\\u673A\\u8BBE\\u8BA1\\u5927\\u8D5B(\\u521A\\u5F00\\u59CB)\\\\03 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\03 \\u8BA1\\u7B97\\u673A\\u8BBE\\u8BA1\\u5927\\u8D5B(\\u521A\\u5F00\\u59CB)\\\\03 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\asus\\\\Desktop\\\\GIS\\u76F8\\u5173\\u6BD4\\u8D5B\\\\03 \\u8BA1\\u7B97\\u673A\\u8BBE\\u8BA1\\u5927\\u8D5B(\\u521A\\u5F00\\u59CB)\\\\03 \\u7CFB\\u7EDF\\u8FD0\\u884C\\u4EE3\\u7801\\\\Code\\\\\\u524D\\u7AEF\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/createClass\";\nimport esriLoader from \"esri-loader\";\n\nvar GEsriApi =\n/*#__PURE__*/\nfunction () {\n  function GEsriApi() {\n    _classCallCheck(this, GEsriApi);\n  }\n\n  _createClass(GEsriApi, [{\n    key: \"GetBasemap\",\n    //basemap\n    value: function GetBasemap() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/Basemap\"]).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 1),\n              Basemap = _ref2[0];\n\n          resolve(Basemap);\n        });\n      });\n    }\n  }, {\n    key: \"GetGeoprocessor\",\n    value: function GetGeoprocessor() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/tasks/Geoprocessor\"]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 1),\n              Geoprocessor = _ref4[0];\n\n          resolve(Geoprocessor);\n        });\n      });\n    } //layers\n\n  }, {\n    key: \"GetTileLayer\",\n    value: function GetTileLayer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/TileLayer\"]).then(function (_ref5) {\n          var _ref6 = _slicedToArray(_ref5, 1),\n              TileLayer = _ref6[0];\n\n          resolve(TileLayer);\n        });\n      });\n    }\n  }, {\n    key: \"GetMapImageLayer\",\n    value: function GetMapImageLayer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/MapImageLayer\"]).then(function (_ref7) {\n          var _ref8 = _slicedToArray(_ref7, 1),\n              MapImageLayer = _ref8[0];\n\n          resolve(MapImageLayer);\n        });\n      });\n    }\n  }, {\n    key: \"GetVectorTileLayer\",\n    value: function GetVectorTileLayer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/VectorTileLayer\"]).then(function (_ref9) {\n          var _ref10 = _slicedToArray(_ref9, 1),\n              VectorTileLayer = _ref10[0];\n\n          resolve(VectorTileLayer);\n        });\n      });\n    }\n  }, {\n    key: \"GetGraphicsLayer\",\n    value: function GetGraphicsLayer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/GraphicsLayer\"]).then(function (_ref11) {\n          var _ref12 = _slicedToArray(_ref11, 1),\n              GraphicsLayer = _ref12[0];\n\n          resolve(GraphicsLayer);\n        });\n      });\n    }\n  }, {\n    key: \"GetFeatureLayer\",\n    value: function GetFeatureLayer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/FeatureLayer\"]).then(function (_ref13) {\n          var _ref14 = _slicedToArray(_ref13, 1),\n              FeatureLayer = _ref14[0];\n\n          resolve(FeatureLayer);\n        });\n      });\n    } //Symbols\n\n  }, {\n    key: \"GetSimpleFillSymbol\",\n    value: function GetSimpleFillSymbol() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/symbols/SimpleFillSymbol\"]).then(function (_ref15) {\n          var _ref16 = _slicedToArray(_ref15, 1),\n              SimpleFillSymbol = _ref16[0];\n\n          resolve(SimpleFillSymbol);\n        });\n      });\n    }\n  }, {\n    key: \"GetSimpleMarkerSymbol\",\n    value: function GetSimpleMarkerSymbol() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/symbols/SimpleMarkerSymbol\"]).then(function (_ref17) {\n          var _ref18 = _slicedToArray(_ref17, 1),\n              SimpleMarkerSymbol = _ref18[0];\n\n          resolve(SimpleMarkerSymbol);\n        });\n      });\n    }\n  }, {\n    key: \"GetPictureMarkerSymbol\",\n    value: function GetPictureMarkerSymbol() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/symbols/PictureMarkerSymbol\"]).then(function (_ref19) {\n          var _ref20 = _slicedToArray(_ref19, 1),\n              PictureMarkerSymbol = _ref20[0];\n\n          resolve(PictureMarkerSymbol);\n        });\n      });\n    } //graphic\n\n  }, {\n    key: \"GetGraphic\",\n    value: function GetGraphic() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/Graphic\"]).then(function (_ref21) {\n          var _ref22 = _slicedToArray(_ref21, 1),\n              Graphic = _ref22[0];\n\n          resolve(Graphic);\n        });\n      });\n    }\n  }, {\n    key: \"GetImageParameters\",\n    value: function GetImageParameters() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/layers/support/ImageParameters\"]).then(function (_ref23) {\n          var _ref24 = _slicedToArray(_ref23, 1),\n              ImageParameters = _ref24[0];\n\n          resolve(ImageParameters);\n        });\n      });\n    }\n  }, {\n    key: \"GetHeatmapRenderer\",\n    value: function GetHeatmapRenderer() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/renderers/HeatmapRenderer\"]).then(function (_ref25) {\n          var _ref26 = _slicedToArray(_ref25, 1),\n              HeatmapRenderer = _ref26[0];\n\n          resolve(HeatmapRenderer);\n        });\n      });\n    }\n  }, {\n    key: \"GetColor\",\n    value: function GetColor() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/Color\"]).then(function (_ref27) {\n          var _ref28 = _slicedToArray(_ref27, 1),\n              Color = _ref28[0];\n\n          resolve(Color);\n        });\n      });\n    } //geometry\n\n  }, {\n    key: \"GetExtent\",\n    value: function GetExtent() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/geometry/Extent\"]).then(function (_ref29) {\n          var _ref30 = _slicedToArray(_ref29, 1),\n              Extent = _ref30[0];\n\n          resolve(Extent);\n        });\n      });\n    }\n  }, {\n    key: \"GetPoint\",\n    value: function GetPoint() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/geometry/Point\"]).then(function (_ref31) {\n          var _ref32 = _slicedToArray(_ref31, 1),\n              Point = _ref32[0];\n\n          resolve(Point);\n        });\n      });\n    }\n  }, {\n    key: \"GetPolyline\",\n    value: function GetPolyline() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/geometry/Polyline\"]).then(function (_ref33) {\n          var _ref34 = _slicedToArray(_ref33, 1),\n              Polyline = _ref34[0];\n\n          resolve(Polyline);\n        });\n      });\n    }\n  }, {\n    key: \"GetPolygon\",\n    value: function GetPolygon() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/geometry/Polygon\"]).then(function (_ref35) {\n          var _ref36 = _slicedToArray(_ref35, 1),\n              Polygon = _ref36[0];\n\n          resolve(Polygon);\n        });\n      });\n    }\n  }, {\n    key: \"GetgeometryEngine\",\n    value: function GetgeometryEngine() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/geometry/geometryEngine\"]).then(function (_ref37) {\n          var _ref38 = _slicedToArray(_ref37, 1),\n              geometryEngine = _ref38[0];\n\n          resolve(geometryEngine);\n        });\n      });\n    } //widgets\n\n  }, {\n    key: \"GetZoom\",\n    value: function GetZoom() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/widgets/Zoom\"]).then(function (_ref39) {\n          var _ref40 = _slicedToArray(_ref39, 1),\n              Zoom = _ref40[0];\n\n          resolve(Zoom);\n        });\n      });\n    }\n  }, {\n    key: \"GetSketchViewModel\",\n    value: function GetSketchViewModel() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/widgets/Sketch/SketchViewModel\"]).then(function (_ref41) {\n          var _ref42 = _slicedToArray(_ref41, 1),\n              SketchViewModel = _ref42[0];\n\n          resolve(SketchViewModel);\n        });\n      });\n    }\n  }, {\n    key: \"GetWebScene\",\n    value: function GetWebScene() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/WebScene\"]).then(function (_ref43) {\n          var _ref44 = _slicedToArray(_ref43, 1),\n              WebScene = _ref44[0];\n\n          resolve(WebScene);\n        });\n      });\n    }\n  }, {\n    key: \"GetDirectLineMeasurement3D\",\n    value: function GetDirectLineMeasurement3D() {\n      return new Promise(function (resolve) {\n        esriLoader.loadModules([\"esri/widgets/DirectLineMeasurement3D\"]).then(function (_ref45) {\n          var _ref46 = _slicedToArray(_ref45, 1),\n              DirectLineMeasurement3D = _ref46[0];\n\n          resolve(DirectLineMeasurement3D);\n        });\n      });\n    }\n  }]);\n\n  return GEsriApi;\n}();\n\nexport var esriApi = new GEsriApi();",{"version":3,"sources":["C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\map\\api\\4+\\GEsriApi.js"],"names":["esriLoader","GEsriApi","Promise","loadModules","then","Basemap","resolve","Geoprocessor","TileLayer","MapImageLayer","VectorTileLayer","GraphicsLayer","FeatureLayer","SimpleFillSymbol","SimpleMarkerSymbol","PictureMarkerSymbol","Graphic","ImageParameters","HeatmapRenderer","Color","Extent","Point","Polyline","Polygon","geometryEngine","Zoom","SketchViewModel","WebScene","DirectLineMeasurement3D","esriApi"],"mappings":"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","sourcesContent":["import esriLoader from \"esri-loader\";\nclass GEsriApi {\n  //basemap\n  GetBasemap() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/Basemap\"]).then(([Basemap]) => {\n        resolve(Basemap);\n      });\n    });\n  }\n  GetGeoprocessor() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/tasks/Geoprocessor\"]).then(([Geoprocessor]) => {\n        resolve(Geoprocessor);\n      });\n    });\n  }\n  //layers\n  GetTileLayer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/layers/TileLayer\"]).then(([TileLayer]) => {\n        resolve(TileLayer);\n      });\n    });\n  }\n  GetMapImageLayer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/layers/MapImageLayer\"]).then(([MapImageLayer]) => {\n        resolve(MapImageLayer);\n      });\n    });\n  }\n  GetVectorTileLayer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/layers/VectorTileLayer\"]).then(([VectorTileLayer]) => {\n        resolve(VectorTileLayer);\n      });\n    });\n  }\n  GetGraphicsLayer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/layers/GraphicsLayer\"]).then(([GraphicsLayer]) => {\n        resolve(GraphicsLayer);\n      });\n    });\n  }\n  GetFeatureLayer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/layers/FeatureLayer\"]).then(([FeatureLayer]) => {\n        resolve(FeatureLayer);\n      });\n    });\n  }\n\n  //Symbols\n  GetSimpleFillSymbol() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/symbols/SimpleFillSymbol\"]).then(([SimpleFillSymbol]) => {\n        resolve(SimpleFillSymbol);\n      });\n    });\n  }\n  GetSimpleMarkerSymbol() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/symbols/SimpleMarkerSymbol\"]).then(\n        ([SimpleMarkerSymbol]) => {\n          resolve(SimpleMarkerSymbol);\n        }\n      );\n    });\n  }\n  GetPictureMarkerSymbol() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/symbols/PictureMarkerSymbol\"]).then(\n        ([PictureMarkerSymbol]) => {\n          resolve(PictureMarkerSymbol);\n        }\n      );\n    });\n  }\n  //graphic\n  GetGraphic() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/Graphic\"]).then(\n        ([Graphic]) => {\n          resolve(Graphic);\n        }\n      );\n    });\n  }\n  GetImageParameters() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/layers/support/ImageParameters\"]).then(\n        ([ImageParameters]) => {\n          resolve(ImageParameters);\n        }\n      );\n    });\n  }\n\n  GetHeatmapRenderer() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/renderers/HeatmapRenderer\"]).then(\n        ([HeatmapRenderer]) => {\n          resolve(HeatmapRenderer);\n        }\n      );\n    });\n  }\n\n  GetColor() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/Color\"]).then(\n        ([Color]) => {\n          resolve(Color);\n        }\n      );\n    });\n  }\n  //geometry\n  GetExtent() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/geometry/Extent\"]).then(\n        ([Extent]) => {\n          resolve(Extent);\n        }\n      );\n    });\n  }\n  GetPoint() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/geometry/Point\"]).then(\n        ([Point]) => {\n          resolve(Point);\n        }\n      );\n    });\n  }\n  GetPolyline() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/geometry/Polyline\"]).then(\n        ([Polyline]) => {\n          resolve(Polyline);\n        }\n      );\n    });\n  }\n  GetPolygon() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/geometry/Polygon\"]).then(\n        ([Polygon]) => {\n          resolve(Polygon);\n        }\n      );\n    });\n  }\n  GetgeometryEngine() {\n    return new Promise(resolve => {\n      esriLoader.loadModules(\n        [\"esri/geometry/geometryEngine\"]).then(\n        ([geometryEngine]) => {\n          resolve(geometryEngine);\n        }\n      );\n    });\n  }\n\n  //widgets\n  GetZoom() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/widgets/Zoom\"]).then(([Zoom]) => {\n        resolve(Zoom);\n      });\n    });\n  }\n\n  GetSketchViewModel() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/widgets/Sketch/SketchViewModel\"]).then(([SketchViewModel]) => {\n        resolve(SketchViewModel);\n      });\n    });\n  }\n\n\n  GetWebScene() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/WebScene\"]).then(([WebScene]) => {\n        resolve(WebScene);\n      });\n    });\n  }\n\n\n  GetDirectLineMeasurement3D() {\n    return new Promise(resolve => {\n      esriLoader.loadModules([\"esri/widgets/DirectLineMeasurement3D\"]).then(([DirectLineMeasurement3D]) => {\n        resolve(DirectLineMeasurement3D);\n      });\n    });\n  }\n}\n\nexport const esriApi = new GEsriApi();"]}]}