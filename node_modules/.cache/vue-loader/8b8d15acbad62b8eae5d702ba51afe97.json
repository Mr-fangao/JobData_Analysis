{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\map\\components\\serverArea.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\src\\map\\components\\serverArea.vue","mtime":1589099994887},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\01 GIS省赛(中期检查+收尾)\\04 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.main .container-fluid {\r\n  padding: 0 0px;\r\n}\r\n.breadcrumb {\r\n  position: relative;\r\n  margin-bottom: 0.01rem;\r\n  border-bottom: 1px solid #cfd8dc;\r\n}\r\n#layerToggle {\r\n  top: 20px;\r\n  right: 20px;\r\n  position: absolute;\r\n  z-index: 99;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  opacity: 0.75;\r\n}\r\n.baidu {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 115px;\r\n}\r\n\r\n.list-wrapper {\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n}\r\n",{"version":3,"sources":["serverArea.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"serverArea.vue","sourceRoot":"src\\map\\components","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"viewDiv\" region=\"center\">\r\n      <div class=\"smallTools\">\r\n        <MapToolsView :mapView=\"mapview\" v-if=\"IsMapToolsView\" :url=\"toolsUrl\"></MapToolsView>\r\n      </div>\r\n      <div class=\"smallMapbar\">\r\n        <ul>\r\n          <li class=\"btn\">\r\n            <span class=\"icon baseLayer\" @click=\"switch3d\"></span>\r\n            <span>3D</span>\r\n          </li>\r\n        </ul>\r\n        <layerView :active=\"active\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template><script>\r\nimport esriLoader from \"esri-loader\";\r\nimport { MapAPI } from \"@/core/config/const\";\r\nimport Register from \"@/map/api/register\";\r\nimport Server from \"@/core/server\";\r\nimport { services } from \"@/core/config/services\";\r\nimport measureArea from \"@/map/components/measureArea\";\r\nimport measureLength from \"@/map/components/measureLength\";\r\nimport MapToolsView from \"@/map/components/MapToolsView\";\r\nimport GDrawSketch from \"@/map/api/4+/GDrawSketch\";\r\nimport GConvertGeometry from \"@/map/api/js/convert/GConvertGeometry\";\r\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\r\nimport layerView from \"./layerView\";\r\nimport housePoint from \"@/vuex/store\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      active: false,\r\n      pts: [],\r\n      isShow: false,\r\n      shape: \"\",\r\n      txt_input: \"\",\r\n      list: [],\r\n      dialog: false,\r\n      pageSize: 10,\r\n      txt_select: \"\",\r\n      data: [],\r\n      baseLayer: \"\",\r\n      firstPoint: \"\",\r\n      street: \"\",\r\n      transition: \"\",\r\n      routeLayer: \"\",\r\n      routeParams: \"\",\r\n      houseSymbol: \"\",\r\n      stopSymbol: \"\",\r\n      routeSymbol: \"\",\r\n      routeResult: \"\",\r\n      routeTask: \"\",\r\n      isExtent: true,\r\n      isPopup: true,\r\n      isPan: true,\r\n      defaultMapExtent: \"13175030.812,3804452.901,2\",\r\n      spatialReference: \"\",\r\n      toolsUrl: \"js/json/common_tools.json\",\r\n      mapTileLayerLayers: \"\",\r\n      TileLayerStreets: \"\",\r\n      MapImageLayer: \"\",\r\n      mapview: null,\r\n      serverPolygon: \"\",\r\n      IsMapToolsView: false,\r\n      break1: 500,\r\n      break2: 1000,\r\n      break3: 1500\r\n    };\r\n  },\r\n  computed: {\r\n    height() {\r\n      return document.body.clientHeight - 200;\r\n    }\r\n  },\r\n  watch: {\r\n    data() {\r\n      this.onPageChange(1);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.spatialReference = \"\";\r\n    // this.addLayer(mapView => {\r\n    //   this.mapLoaded(mapView);\r\n    // });\r\n    this.addLayer();\r\n    // this.register();\r\n    // setTimeout(() => {\r\n    //   this.showGraphics();\r\n    // }, 600);\r\n  },\r\n  methods: {\r\n    switch3d() {\r\n      this.$router.push(\"/3dmap\");\r\n    },\r\n    register() {\r\n      //接收外部结果\r\n      onemap.pubsub.subscribe(\"showQuickSearchResult\", arg => {\r\n        this.isExtent = false;\r\n        this.isPan = false;\r\n        this.isPopup = arg.isPopup || true;\r\n        this.data = arg.list;\r\n        this.visible = true;\r\n      });\r\n      onemap.pubsub.subscribe(\"hideQuickSearchResult\", arg => {\r\n        this.visible = false;\r\n        this.data = [];\r\n      });\r\n\r\n      //clear\r\n      onemap.pubsub.subscribe(\"clear\", arg => {\r\n        this.visible = false;\r\n        this.data = [];\r\n      });\r\n    },\r\n    mapLoaded(mapView) {\r\n      new Register(mapView)\r\n        .mapEvent()\r\n        .mapAPI()\r\n        .parentMapAPI();\r\n      if (this.isIQuery) {\r\n        new GIQuery({\r\n          mapView: mapView,\r\n          isPopup: this.isIPopup\r\n        }).toggle();\r\n      }\r\n    },\r\n    onToggleLayer() {\r\n      debugger;\r\n      this.active = !this.active;\r\n    },\r\n\r\n    addLayer(callback) {\r\n      esriLoader\r\n        .loadScript({\r\n          url: MapAPI.js,\r\n          css: MapAPI.css\r\n        })\r\n        .then(r => {\r\n          esriLoader\r\n            .loadModules([\r\n              \"esri/config\",\r\n              \"esri/Map\",\r\n              \"esri/layers/GroupLayer\",\r\n              \"esri/Basemap\",\r\n              \"esri/views/MapView\",\r\n              \"esri/layers/MapImageLayer\",\r\n              \"esri/layers/TileLayer\",\r\n              \"esri/tasks/ServiceAreaTask\",\r\n              \"esri/layers/FeatureLayer\",\r\n              \"esri/tasks/support/DataLayer\",\r\n              \"esri/tasks/support/ServiceAreaParameters\",\r\n              \"esri/tasks/support/ServiceAreaSolveResult\",\r\n              \"esri/symbols/SimpleLineSymbol\",\r\n              \"esri/symbols/SimpleFillSymbol\",\r\n              \"esri/Color\",\r\n              \"esri/layers/GraphicsLayer\",\r\n              \"esri/geometry/Extent\",\r\n              \"esri/widgets/LayerList\",\r\n              \"esri/Graphic\",\r\n              \"esri/tasks/support/FeatureSet\",\r\n              \"dojo/on\"\r\n            ])\r\n            .then(\r\n              ([\r\n                esriConfig,\r\n                Map,\r\n                GroupLayer,\r\n                Basemap,\r\n                MapView,\r\n                MapImageLayer,\r\n                TileLayer,\r\n                ServiceAreaTask,\r\n                FeatureLayer,\r\n                DataLayer,\r\n                ServiceAreaParameters,\r\n                ServiceAreaSolveResult,\r\n                SimpleLineSymbol,\r\n                SimpleFillSymbol,\r\n                Color,\r\n                GraphicsLayer,\r\n                Extent,\r\n                LayerList,\r\n                Graphic,\r\n                FeatureSet,\r\n                dom,\r\n                on\r\n              ]) => {\r\n                esriConfig.request.corsEnabledServers.push(\r\n                  \"http://122.112.216.247:6080\"\r\n                );\r\n                var activeWidget = null;\r\n\r\n                var tilelayer = new TileLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/Servers/Map/MapServer\"\r\n                });\r\n                var layer = new FeatureLayer({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/MapServer/8\"\r\n                });\r\n                this.baseLayer = layer;\r\n\r\n                var baseMap = new Basemap({\r\n                  baseLayers: [layer]\r\n                });\r\n\r\n                var map = new Map({\r\n                  basemap: baseMap,\r\n                  layers: [layer,tilelayer]\r\n                });\r\n                this.map = map;\r\n                this.mapview = new MapView({\r\n                  container: \"viewDiv\",\r\n                  map: map\r\n                });\r\n\r\n                this.mapview.ui.remove([\"attribution\", \"zoom\"]);\r\n                var view = this.mapview;\r\n                var stops = new DataLayer();\r\n                stops.geometry = view.extent;\r\n                stops.name = \"Hospitals\";\r\n                console.log(map);\r\n                // var houseSymbol = GMapSymbol.gethousePointSymbol({});\r\n                // this.houseSymbol = houseSymbol;\r\n                // var stopSymbol = {\r\n                //   type: \"simple-marker\",\r\n                //   style: \"cross\",\r\n                //   size: 15,\r\n                //   outline: {\r\n                //     width: 4\r\n                //   }\r\n                // };\r\n                // this.stopSymbol = stopSymbol;\r\n                // var routeSymbol = {\r\n                //   type: \"simple-line\",\r\n\r\n                //   color: [82, 152, 255, 1],\r\n                //   width: 5\r\n                // };\r\n                // this.routeSymbol = routeSymbol;\r\n                var serverParams = new ServiceAreaParameters({\r\n                  facilities: {\r\n                    type: \"layer\",\r\n                    layerName: \"Hospitals\",\r\n                    impedanceAttribute:\"Time\"\r\n                    // where: \"BEDS > 100\"\r\n                  },\r\n                  defaultBreaks: [this.break1, this.break2, this.break3]\r\n                  // outSpatialReference: {\r\n                  //   wkid: 3857\r\n                  // }\r\n                });\r\n\r\n                var serviceAreaTask = new ServiceAreaTask({\r\n                  url:\r\n                    \"http://122.112.216.247:6080/arcgis/rest/services/serverTest/NAServer/ServiceArea\"\r\n                });\r\n                serviceAreaTask.solve(serverParams).then(\r\n                  solveResult => {\r\n                    // console.log(solveResult.serviceAreaPolygons);\r\n                    var AreaPolygons = solveResult.serviceAreaPolygons;\r\n                    console.log(AreaPolygons);\r\n                    var polygonSymbol = new SimpleFillSymbol(\r\n                      \"solid\",\r\n                      new SimpleLineSymbol(\"solid\", new Color([232, 104, 80])),\r\n                      new Color([232, 104, 80, 0.25])\r\n                    );\r\n                    AreaPolygons.forEach((AreaPolygons, index) => {\r\n                      debugger;\r\n                      // var symbol = GMapSymbol.getSymbol(geometry);\r\n                      var graphics = [];\r\n                      var graphic = new Graphic({\r\n                        geometry: AreaPolygons.geometry,\r\n                        symbol: polygonSymbol\r\n                      });\r\n                      graphics.push(graphic);\r\n                      view.graphics.addMany(graphics);\r\n                    });\r\n                    // AreaPolygons.forEach(function(e) {\r\n                    //   debugger;\r\n                    //   var polygonSymbol = new SimpleFillSymbol(\r\n                    //     \"solid\",\r\n                    //     new SimpleLineSymbol(\r\n                    //       \"solid\",\r\n                    //       new Color([232, 104, 80])\r\n                    //     ),\r\n                    //     new Color([232, 104, 80, 0.25])\r\n                    //   );\r\n                    //   e.setSymbol(polygonSymbol);\r\n                    //   console.log(e);\r\n                    //   debugger;\r\n                    //   // var graphic = new Graphic({\r\n                    //   //   geometry: e\r\n                    //   // });\r\n                    //   // graphic.setSymbol(polygonSymbol);\r\n                    //   map.graphics.add(graphic);\r\n                    //   console.log(map);\r\n                    // });\r\n                    // AreaPolygons.forEach(\r\n                    //   solveResult.serviceAreaPolygons,\r\n                    //   function(serviceArea) {\r\n                    //     debugger;\r\n                    //     serviceArea.setSymbol(polygonSymbol);\r\n                    //     this.map.graphics.add(serviceArea);\r\n                    //   }\r\n                    // );\r\n                  },\r\n                  function(err) {\r\n                    console.log(err.message);\r\n                  }\r\n                );\r\n\r\n                // onemap.pubsub.publish(\"drawPolygonByGeoJson\", {\r\n                //   list: this.serverPolygon,\r\n                //   extent: true\r\n                // });\r\n              }\r\n            );\r\n\r\n          // this.routeTask = routeTask;\r\n          // var ext = String(this.defaultMapExtent).split(\",\");\r\n          // if (ext.length > 3) {\r\n          //   console.log(\"extent 配置有误\");\r\n          //   return false;\r\n          // }\r\n          // var zoom = parseInt(ext[2]);\r\n          // var center = {\r\n          //   x: parseFloat(ext[0]),\r\n          //   y: parseFloat(ext[1]),\r\n          //   spatialReference: this.spatialReference\r\n          // };\r\n\r\n          // view.when(function() {\r\n          //   var layerList = new LayerList({\r\n          //     view: view\r\n          //   });\r\n          //   view.ui.add(layerList, \"top-right\");\r\n          // });\r\n          // this.mapview.initExtent = {\r\n          //   center: center,\r\n          //   zoom: zoom\r\n          // };\r\n          window.mapview = this.mapview;\r\n          // callback(this.mapview);\r\n          this.IsMapToolsView = true;\r\n        });\r\n    },\r\n    // switchbasemap() {\r\n    //   if (this.baseLayer.visible) {\r\n    //     this.baseLayer.visible = false;\r\n    //     this.street.visible = true;\r\n    //   } else {\r\n    //     this.baseLayer.visible = true;\r\n    //     this.street.visible = false;\r\n    //   }\r\n    // },\r\n    watchLayer() {}\r\n    // addLastStop() {\r\n    //   var lastpoint = mapApi.convert.toGeometryByWKT.parse({\r\n    //     wkt: housePoint.state.shapePoi,\r\n    //     spatialReference: window.mapview.spatialReference\r\n    //   });\r\n    //   this.transition = lastpoint;\r\n    //   var _this = this;\r\n    //   lastpoint.then(data => {\r\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\r\n    //       var stop = new Graphic({\r\n    //         geometry: data,\r\n    //         symbol: this.houseSymbol\r\n    //       });\r\n    //       this.routeLayer.add(stop);\r\n    //       this.routeParams.stops.features.push(stop);\r\n    //       if (this.routeParams.stops.features.length >= 2) {\r\n    //         this.routeTask\r\n    //           .solve(this.routeParams)\r\n    //           .then(this.showRoute, this.logError);\r\n    //       }\r\n    //     });\r\n    //   });\r\n    // },\r\n    // addPoint(value) {\r\n    //   var firstpoint = mapApi.convert.toGeometryByWKT.parse({\r\n    //     wkt: value.Shape,\r\n    //     spatialReference: window.mapview.spatialReference\r\n    //   });\r\n    //   var _this = this;\r\n    //   firstpoint.then(data => {\r\n    //     mapApi.esriApi.GetGraphic().then(Graphic => {\r\n    //       `  `;\r\n    //       var stop = new Graphic({\r\n    //         geometry: data,\r\n    //         symbol: this.stopSymbol\r\n    //       });\r\n    //       this.routeLayer.add(stop);\r\n\r\n    //       this.routeParams.stops.features.push(stop);\r\n\r\n    //       this.addLastStop();\r\n    //     });\r\n    //   });\r\n    // },\r\n    // addStop(value) {\r\n    //   debugger;\r\n    //   if (this.routeLayer.graphics.length > 2) {\r\n    //     this.routeLayer.removeAll();\r\n    //     this.addPoint(value);\r\n    //   } else {\r\n    //     this.addPoint(value);\r\n    //   }\r\n    // },\r\n    // showRoute(data) {\r\n    //   debugger;\r\n    //   var routeResult = data.routeResults[0].route;\r\n    //   routeResult.symbol = this.routeSymbol;\r\n    //   this.routeResult = routeResult;\r\n    //   this.routeLayer.add(routeResult);\r\n    //   console.log(this.routeLayer);\r\n    //   console.log(this.routeLayer);\r\n    // },\r\n    // logError(error) {\r\n    //   console.error(error);\r\n    // }\r\n  },\r\n  components: {\r\n    measureArea,\r\n    measureLength,\r\n    MapToolsView,\r\n    layerView\r\n  }\r\n};\r\n</script>\r\n\r\n<style >\r\n.main .container-fluid {\r\n  padding: 0 0px;\r\n}\r\n.breadcrumb {\r\n  position: relative;\r\n  margin-bottom: 0.01rem;\r\n  border-bottom: 1px solid #cfd8dc;\r\n}\r\n#layerToggle {\r\n  top: 20px;\r\n  right: 20px;\r\n  position: absolute;\r\n  z-index: 99;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  opacity: 0.75;\r\n}\r\n.baidu {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 115px;\r\n}\r\n\r\n.list-wrapper {\r\n  padding: 10px;\r\n  overflow-y: auto;\r\n}\r\n</style>"]}]}