{"remainingRequest":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspaces\\edu\\jobData_Analysis前端\\src\\map\\components\\layerView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\src\\map\\components\\layerView.vue","mtime":1563098587000},{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"E:\\workspaces\\edu\\jobData_Analysis前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.esri-view-height-small .esri-expand .esri-widget--panel,\n.esri-view-height-small .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    max-height: 206px;\n    width: 206px;\n    margin-top: 80px;\n    margin-right: 65px;\n    display: none;\n}\n\n.esri-view-height-xsmall .esri-expand .esri-widget--panel,\n.esri-view-height-xsmall .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    display: none;\n}\n\n",{"version":3,"sources":["layerView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"layerView.vue","sourceRoot":"src\\map\\components","sourcesContent":["\n <template>\n  <div class=\"layerManager\" v-show=\"active\">\n    <tabs>\n      <span class=\"icon layerClose\" style=\"margin-top: 4px;\" title=\"关闭全部图层\" slot=\"extra\"></span>\n      <tab-pane name=\"layer\" :label=\"label\">\n        <ul>\n          <li>\n            <span>\n              <Checkbox v-model=\"gj\" @on-change=\"changegj\">\n                <span class=\"layerIcon l-layer\"></span>公交</Checkbox>\n            </span>\n          </li>\n          <span>\n            <Checkbox v-model=\"cz\">\n              <span class=\"layerIcon l-layer\"></span>车站</Checkbox>\n          </span>\n          <li>\n            <span>\n              <Checkbox v-model=\"yl\">\n                <span class=\"layerIcon l-layer\"></span>医疗设施</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"school\">\n                <span class=\"layerIcon l-layer\"></span>学校</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"yl\">\n                <span class=\"layerIcon l-layer\"></span>休闲娱乐</Checkbox>\n            </span>\n          </li>\n          <li>\n            <span>\n              <Checkbox v-model=\"gy\">\n                <span class=\"layerIcon l-layer\"></span>公园</Checkbox>\n            </span>\n          </li>\n        </ul>\n      </tab-pane>\n    </tabs>\n  </div>\n</template> \n<script>\nimport Server from \"@/core/server\";\nimport { services } from \"@/core/config/services\";\nimport housueName from \"@/vuex/store\";\nimport GMapSymbol from \"@/map/api/js/GMapSymbol\";\nimport { MapAPI } from \"@/core/config/const\";\nexport default {\n  data() {\n    return {\n      gj: true,\n      cz: false,\n      yl: false,\n      school: false,\n      yl: false,\n      gy: false,\n      gjLayer: \"\",\n      houseName: \"\",\n      list: []\n    };\n  },\n  methods: {\n    changegj() {\n      if (this.gj == true) {\n        debugger;\n        var value = \"BUSSTATION\";\n        this.houseName = housueName.state.housueName;\n        Server.get({\n          url: services.road,\n          params: {\n            name: this.houseName,\n            tableName: value,\n              distance:this.distance\n          }\n        }).then(rsp => {\n          var _this = this;\n          if (rsp.status === 1) {\n            _this.list = rsp.data;\n            mapApi.esriApi.GetGraphic().then(Graphic => {\n              var geometryParse = [];\n              this.list.forEach((item, index) => {\n                geometryParse.push(\n                  mapApi.convert.toGeometryByWKT.parse({\n                    wkt: item.Shape,\n                    spatialReference: window.mapview.spatialReference\n                  })\n                );\n              });\n              Promise.all(geometryParse).then(geometries => {\n                var pts = [];\n                var graphics = [];\n                geometries.forEach((geometry, index) => {\n                  var pt = null;\n                  if (geometry !== null) {\n                    if (geometry.type === \"point\") {\n                      pt = geometry;\n                    } else {\n                      pt = geometry.extent.center;\n                    }\n                    pts.push(pt);\n                  }\n                  var item = this.list[index];\n                  var symbol = GMapSymbol.getMarkerPoiSymbol({});\n                  var graphic = new Graphic({\n                    geometry: pt,\n                    symbol: symbol,\n                    attributes: {\n                      id: item.pIndex,\n                      attr: item,\n                      centerPt: pt,\n                      marker: true,\n                      popup: true\n                    }\n                  });\n                  graphics.push(graphic);\n                });\n\n                mapApi.esriApi.GetGraphicsLayer().then(GraphicsLayer => {\n                  this.gjLayer = new GraphicsLayer({});\n                  this.gjLayer.graphics.addMany(graphics);\n                  window.mapview.map.add(this.gjLayer);\n                });\n\n                // if (layer === null) {\n                //   mapview.graphics.addMany(graphics);\n                // } else {\n                //   layer.graphics.addMany(graphics);\n                // }\n                // if (extent) {\n                //   mapApi.geometryUtils.getMaxExtent(geometries).then(extent => {\n                //     mapview.extent = extent.expand(2);\n                //   });\n                // }\n\n                // if (popup && list.length > 0) {\n                //   mapApi.popup.show({\n                //     mapView: mapView,\n                //     res: list[0],\n                //     centerPt: pts[0],\n                //     pan: pan\n                //   });\n                // }\n              });\n            });\n          }\n        });\n\n        // this.getData(value);\n        // onemap.pubsub.publish(\"clear\");\n\n        // onemap.pubsub.publish(\"drawMarkerByList\", {\n        //   list: this.list\n        // });\n      } else {\n        debugger;\n        window.mapview.map.remove(this.gjLayer);\n      }\n    },\n    getData(value) {\n      debugger;\n      this.houseName = housueName.state.housueName;\n      Server.get({\n        url: services.road,\n        params: {\n          name: this.houseName,\n          tableName: value,\n            distance:this.distance\n        }\n      }).then(rsp => {\n        var _this = this;\n        if (rsp.status === 1) {\n          _this.list = rsp.data;\n        }\n      });\n    }\n  },\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      default: \"图层\"\n    }\n  }\n};\n</script>\n<style >\n.esri-view-height-small .esri-expand .esri-widget--panel,\n.esri-view-height-small .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-small .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    max-height: 206px;\n    width: 206px;\n    margin-top: 80px;\n    margin-right: 65px;\n    display: none;\n}\n\n.esri-view-height-xsmall .esri-expand .esri-widget--panel,\n.esri-view-height-xsmall .esri-expand .esri-widget--panel-height-only,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel,\n.esri-view-height-xsmall .esri-ui-corner .esri-component.esri-widget--panel-height-only {\n    display: none;\n}\n\n</style>\n\n      <!-- <tab-pane name=\"layer\" :label=\"label\">\n        <section :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='layer'\"> -->\n          <!-- <tree-view ref=\"tree\" \n            :mapView=\"mapView\" \n            :treeData=\"layerList\"\n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"\n            @on-group-check-change=\"onGroupCheckChange\"/> -->\n        <!-- </section>\n      </tab-pane> -->\n      <!-- <tab-pane name=\"favour\" v-if=\"!isOut\" label=\"收藏\" >\n        <section :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='favour'\">\n          <tree-view ref=\"treeFav\" \n            :mapView=\"mapView\" \n            :treeData=\"favLayerList\" \n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"/>\n        </section>\n      </tab-pane>\n      <tab-pane name=\"recent\" v-if=\"!isOut\" label=\"最近\">\n        <section  :style=\"{maxHeight:maxHeight+'px'}\" v-if=\"visible\" v-show=\"tabName==='recent'\">\n          <tree-view ref=\"treeRecent\" \n            :mapView=\"mapView\" \n            :treeData=\"recentLayerList\"\n            :flatState=\"flatState\"\n            @on-check-change=\"onCheckChange\"/>\n        </section>\n      </tab-pane>\n      <tab-pane name=\"legend\" label=\"图例\">\n        <section   v-if=\"visible\" v-show=\"tabName==='legend'\">\n          <legend-view :data=\"legendList\" :legend=\"legend\" :height=\"maxHeight\"/>\n        </section>\n      </tab-pane> -->\n    <!-- </tabs>\n  </div>\n\n\n\n\n  \n\n\n\n"]}]}