{"remainingRequest":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\views\\auDecision\\components\\livablemodel.vue?vue&type=template&id=7ada98aa&scoped=true&","dependencies":[{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\src\\views\\auDecision\\components\\livablemodel.vue","mtime":1563098587000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580901136398},{"path":"C:\\Users\\asus\\Desktop\\GIS相关比赛\\03 计算机设计大赛(刚开始)\\03 系统运行代码\\Code\\前端\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"Layout\",\n    { style: { height: \"100%\" } },\n    [\n      _c(\n        \"Sider\",\n        { ref: \"side1\", attrs: { width: 180 } },\n        [_c(\"sider-menu\"), _vm._v(\">\\n    \")],\n        1\n      ),\n      _c(\n        \"Content\",\n        [\n          _c(\n            \"Header\",\n            { staticClass: \"layout-header-bar\", style: { padding: 0 } },\n            [\n              _c(\n                \"Breadcrumb\",\n                [\n                  _c(\"Icon\", {\n                    class: _vm.rotateIcon,\n                    style: { margin: \"0 5px\" },\n                    attrs: { type: \"md-menu\", size: \"25\" }\n                  }),\n                  _vm._l(_vm.$route.matched, function(item, idx) {\n                    return _c(\n                      \"BreadcrumbItem\",\n                      { key: idx, attrs: { to: item.path } },\n                      [_vm._v(_vm._s(item.name))]\n                    )\n                  })\n                ],\n                2\n              )\n            ],\n            1\n          ),\n          _c(\n            \"div\",\n            {\n              staticClass: \"data-view\",\n              staticStyle: { \"margin-top\": \"20px\", overflow: \"hidden\" }\n            },\n            [\n              _c(\n                \"Row\",\n                { attrs: { gutter: 30 } },\n                [\n                  _c(\n                    \"Col\",\n                    { attrs: { span: \"12\" } },\n                    [\n                      _c(\n                        \"card\",\n                        {\n                          staticStyle: { \"margin-left\": \"10%\" },\n                          attrs: { title: \"宜居模型介绍\" }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              staticStyle: { height: \"190px\" },\n                              attrs: { id: \"comprise\" }\n                            },\n                            [\n                              _c(\"p\", [\n                                _vm._v(\n                                  \"宜居模型是按照国家颁布的宜居标准。主要是通 过对小区的生活便宜度、环境优美度、公共安全度、社 区文明度等四个方面经行评价。本系统的模型主要通 过比较小区的生活便宜度。生活便宜度主要是比较小 区到周围基础设施的距离，基础设施主要包括学校、公 园、医院、超市等。最后根据宜居模型计算出各个小区的宜居性，并进行小区对比。\\n                        \"\n                                )\n                              ])\n                            ]\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"Col\",\n                    { attrs: { span: \"12\" } },\n                    [\n                      _c(\n                        \"card\",\n                        {\n                          staticStyle: { \"margin-right\": \"10%\" },\n                          attrs: { title: \"模型方法\" }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              staticStyle: { height: \"190px\" },\n                              attrs: { id: \"comprise\" }\n                            },\n                            [\n                              _c(\"p\", [\n                                _vm._v(\n                                  \"A 小区分数 =［A 距离最近公园距离/( A 距离最近公园距离+B 最近公园距离) +A 距离最 近医院距离/( A 距离最近医院距离+B 距离最近医院 距离) +A 距离最近超市距离/( A 距离最近超市距离+ 距离最近超市距离) +A 距离最近学校距离 / ( A 距离 最近学校距离+B 距离最近学校距离) ］* 10+环境优 美度( 满分 20 分) +公共安全度( 满分 20 分) +社区文 明度( 满分 20) 。\\n                        \"\n                                )\n                              ]),\n                              _c(\"p\", [\n                                _vm._v(\n                                  \"\\n                            小区分数 =［B 距离最近公园距离 / ( A 距离最近 公园距离+B 最近公园距离) +B 距离最近医院距离/( A 距离最近医院距离+B 距离最近医院距离) +A 距离最近 超市距离/( B 距离最近超市距离+B 距离最近超市距 离) +B 距离最近学校距离/( A 距离最近学校距离+B 距 离最近学校距离) ］* 10+环境优美度( 满分 20 分) +公 共安全度( 满分 20 分) +社区文明度( 满分 20)\\n                        \"\n                                )\n                              ])\n                            ]\n                          )\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"br\"),\n              _c(\n                \"Row\",\n                [\n                  _c(\n                    \"Col\",\n                    [\n                      _c(\n                        \"card\",\n                        {\n                          staticStyle: {\n                            \"margin-left\": \"5%\",\n                            \"margin-right\": \"5%\"\n                          },\n                          attrs: { title: \"引力模型公式\" }\n                        },\n                        [\n                          _c(\"div\", { attrs: { id: \"comprise\" } }, [\n                            _c(\"p\", [\n                              _vm._v(\n                                \" 房源比较界面图的左右两侧分别输入两 个小区的名称，系统将会查找并计算该小区生活便宜 度( 距离最近学校公园、医院、超市、学校距离) ，环境 优美度，公共安全度，社区文明度的数据，按照宜居模 型中提供的计算公式得出两个小区的宜居指数，通过 系统提供的客观数据，方便用户做出选择。\"\n                              )\n                            ]),\n                            _c(\n                              \"div\",\n                              { staticStyle: { \"text-align\": \"center\" } },\n                              [\n                                _c(\"img\", {\n                                  staticStyle: {\n                                    width: \"400px\",\n                                    height: \"350px\"\n                                  },\n                                  attrs: {\n                                    src: require(\"../../../assets/img/fydb1.png\")\n                                  }\n                                }),\n                                _c(\n                                  \"a\",\n                                  { staticStyle: { \"font-size\": \"60px\" } },\n                                  [_vm._v(\"=>>\")]\n                                ),\n                                _c(\"img\", {\n                                  staticStyle: {\n                                    width: \"400px\",\n                                    height: \"350px\"\n                                  },\n                                  attrs: {\n                                    src: require(\"../../../assets/img/fydb2.png\")\n                                  }\n                                })\n                              ]\n                            )\n                          ])\n                        ]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}